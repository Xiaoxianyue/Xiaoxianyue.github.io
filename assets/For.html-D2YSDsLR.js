import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,b as F,e as c,w as a,r as i,o as y,a as s,d as n}from"./app-B1-vnyyS.js";const d="/assets/007b4bbba020890868039849cab0e45-CdYn3enp.png",u={};function v(m,l){const p=i("CodeTabs");return y(),t("div",null,[l[20]||(l[20]=F(`<h2 id="_1-for-循环——遍历" tabindex="-1"><a class="header-anchor" href="#_1-for-循环——遍历"><span>1. for 循环——遍历</span></a></h2><p>基本语法：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> lst:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(i)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#AE81FF;">2</span></span>
<span class="line"><span style="color:#AE81FF;">3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>拓展：把列表里的数字都平方一遍，然后再放回列表：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">n </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> lst:</span></span>
<span class="line"><span style="color:#F8F8F2;">    lst[n] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">**</span><span style="color:#AE81FF;"> 2</span></span>
<span class="line"><span style="color:#F8F8F2;">    n </span><span style="color:#F92672;">+=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(lst)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">16</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">25</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">36</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">49</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">64</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">81</span><span style="color:#F8F8F2;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-enumerate" tabindex="-1"><a class="header-anchor" href="#_2-enumerate"><span>2. <code>enumerate</code></span></a></h2><h3 id="_2-1-enumerate-用法" tabindex="-1"><a class="header-anchor" href="#_2-1-enumerate-用法"><span>2.1 <code>enumerate</code> 用法</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;shelley&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&#39;python&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&#39;java&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#E6DB74;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E6DB74;">enumerate 是 python 中的一个内置函数，非常实用，它用于遍历序列（比如：列表，元组或字符串），</span></span>
<span class="line"><span style="color:#E6DB74;">同时获取每个元素的索引和值。这样做可以让循环中的迭代更加直观，也更易于处理。</span></span>
<span class="line"><span style="color:#E6DB74;">使用 enumerate 函数可以替代传统的通过索引防问元素的方法。</span></span>
<span class="line"><span style="color:#E6DB74;">它返回一个枚举对象，对这个对象生成一系列包含每个元素的索引和值的元组。</span></span>
<span class="line"><span style="color:#E6DB74;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">fruits </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;apple&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&#39;banana&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&#39;cherry&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> index, fruit </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> enumerate</span><span style="color:#F8F8F2;">(fruits):</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(index, fruit)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;"> apple</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;"> banana</span></span>
<span class="line"><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;"> cherry</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>细化实现步骤：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]: fruit </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;apple&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&#39;banana&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&#39;cherry&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;">enumerate</span><span style="color:#F8F8F2;">(fruit)</span></span>
<span class="line"><span style="color:#F8F8F2;">Out[</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]: </span><span style="color:#F92672;">&lt;</span><span style="color:#66D9EF;">enumerate</span><span style="color:#F8F8F2;"> at </span><span style="color:#66D9EF;font-style:italic;">0x</span><span style="color:#AE81FF;">183d9b44f00</span><span style="color:#F92672;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">list</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">enumerate</span><span style="color:#F8F8F2;">(fruit))</span></span>
<span class="line"><span style="color:#F8F8F2;">Out[</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]: [(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;apple&#39;</span><span style="color:#F8F8F2;">), (</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;banana&#39;</span><span style="color:#F8F8F2;">), (</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;cherry&#39;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">]: fruit_list </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> list</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">enumerate</span><span style="color:#F8F8F2;">(fruit))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">]: </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> fruits </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> fruit_list:</span></span>
<span class="line"><span style="color:#AE81FF;">   ...</span><span style="color:#F8F8F2;">:     </span><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(fruits)</span></span>
<span class="line"><span style="color:#AE81FF;">   ...</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;apple&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;banana&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;cherry&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>元组里索引和值的一一映射：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">]: index,fruit </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&#39;apple&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">]: index</span></span>
<span class="line"><span style="color:#F8F8F2;">Out[</span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">]: </span><span style="color:#AE81FF;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">]: fruit</span></span>
<span class="line"><span style="color:#F8F8F2;">Out[</span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">]: </span><span style="color:#E6DB74;">&#39;apple&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最终代码写法:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">]: fruits </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;apple&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&#39;banana&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&#39;cherry&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">11</span><span style="color:#F8F8F2;">]: fruits_list </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> list</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">enumerate</span><span style="color:#F8F8F2;">(fruits))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">12</span><span style="color:#F8F8F2;">]: </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> fruits </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> fruit_list:</span></span>
<span class="line"><span style="color:#AE81FF;">    ...</span><span style="color:#F8F8F2;">:     index,fruit </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> fruits</span></span>
<span class="line"><span style="color:#AE81FF;">    ...</span><span style="color:#F8F8F2;">:     </span><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(index,fruit)</span></span>
<span class="line"><span style="color:#AE81FF;">    ...</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;"> apple</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;"> banana</span></span>
<span class="line"><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;"> cherry</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以从上面看到，<code>enumerate</code>的作用就是使索引一起与值显现。</p><h3 id="_2-2-拓展用法" tabindex="-1"><a class="header-anchor" href="#_2-2-拓展用法"><span>2.2 拓展用法</span></a></h3><p>输出这样的形式：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;apple&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;banana&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;cherry&#39;</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Solution:</p><p>第一版本：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">fruits </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;apple&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;banana&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;cherry&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">fruits_list </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> list</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">enumerate</span><span style="color:#F8F8F2;">(fruits))</span></span>
<span class="line"><span style="color:#F8F8F2;">dictionary </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> dict</span><span style="color:#F8F8F2;">(fruits_list)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(dictionary)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>想到了字典的两种创建方法：<code>[(),(),()]</code>这种形式可以通过 <code>dict</code>强制转换成字典形式。</p><p>那我们能不能直接把 <code>enumerate</code>强制转换成字典？</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">fruits </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;apple&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;banana&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;cherry&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">dictionary </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> dict</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">enumerate</span><span style="color:#F8F8F2;">(fruits))</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(dictionary)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;apple&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;banana&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;cherry&#39;</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>索引可不可以从别的数字开始？</p><p>可以。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">fruits </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;apple&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;banana&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;cherry&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">dictionary </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> dict</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">enumerate</span><span style="color:#F8F8F2;">(fruits,</span><span style="color:#FD971F;font-style:italic;">start</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(dictionary)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;apple&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;banana&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;cherry&#39;</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h2 id="_3-课上作业" tabindex="-1"><a class="header-anchor" href="#_3-课上作业"><span>3. 课上作业</span></a></h2><h3 id="question-01" tabindex="-1"><a class="header-anchor" href="#question-01"><span>Question 01</span></a></h3><ol><li></li></ol><img src="`+d+`" alt="007b4bbba020890868039849cab0e45" style="zoom:50%;"><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">43</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">66</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">99</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">maxnum </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> lst[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> lst:</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> maxnum:</span></span>
<span class="line"><span style="color:#F8F8F2;">        maxnum </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> i</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(maxnum)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">99</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2.输出最大值的下标，并且不能用 <code>.index()</code>:</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">43</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">66</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">max_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> lst[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">position </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> index, value </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> enumerate</span><span style="color:#F8F8F2;">(lst):</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> value </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> max_value:</span></span>
<span class="line"><span style="color:#F8F8F2;">        max_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> value</span></span>
<span class="line"><span style="color:#F8F8F2;">        position </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> index</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(position)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3.有多个最大数值时，返回所有最大值的下标：</strong></p>`,33)),c(p,{id:"82",data:[{id:"列表存储"},{id:"元组存储"}]},{title0:a(({value:o,isActive:e})=>l[0]||(l[0]=[n("列表存储")])),title1:a(({value:o,isActive:e})=>l[1]||(l[1]=[n("元组存储")])),tab0:a(({value:o,isActive:e})=>l[2]||(l[2]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"nums "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," ["),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"24"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"56"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"7"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"78"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"99"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"111"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"11"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"111"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"111"),s("span",{style:{color:"#F8F8F2"}},"]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"max_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," nums["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"max_tup "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," []")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," num "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F8F8F2"}}," nums:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," num "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#F8F8F2"}}," max_value:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        max_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," num")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"position "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F8F8F2"}}," nums:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#F8F8F2"}}," max_value:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        max_tup.append(position)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        position "),s("span",{style:{color:"#F92672"}},"+="),s("span",{style:{color:"#AE81FF"}}," 1")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        position "),s("span",{style:{color:"#F92672"}},"+="),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#88846F"}},"  # 只有在 for 循环中才能这么写")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"tuple"),s("span",{style:{color:"#F8F8F2"}},"(max_tup))")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#output")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"7"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"9"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"10"),s("span",{style:{color:"#F8F8F2"}},")")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab1:a(({value:o,isActive:e})=>l[3]||(l[3]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"nums "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," ["),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"24"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"56"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"7"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"78"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"99"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"111"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"11"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"111"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"111"),s("span",{style:{color:"#F8F8F2"}},"]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"max_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," nums["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"max_tup "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," tuple"),s("span",{style:{color:"#F8F8F2"}},"()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," num "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F8F8F2"}}," nums:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," num "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#F8F8F2"}}," max_value:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        max_value "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," num")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"position "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 0")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F8F8F2"}}," nums:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#F8F8F2"}}," max_value:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        max_tup "),s("span",{style:{color:"#F92672"}},"+="),s("span",{style:{color:"#F8F8F2"}}," (position,)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    position "),s("span",{style:{color:"#F92672"}},"+="),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}}," ")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(max_tup)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#output")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"7"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"9"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"10"),s("span",{style:{color:"#F8F8F2"}},")")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),l[21]||(l[21]=F(`<p>用一个 for 循环也能实现：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">nums </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">24</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">56</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">78</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">99</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">111</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">11</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">111</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">111</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">max_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> nums[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">max_indices </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> []</span></span>
<span class="line"><span style="color:#F8F8F2;">n </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> num </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> nums:</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> max_value </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> num:</span></span>
<span class="line"><span style="color:#F8F8F2;">        max_value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> num</span></span>
<span class="line"><span style="color:#F8F8F2;">        max_indices </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [n]</span></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> num </span><span style="color:#F92672;">==</span><span style="color:#F8F8F2;"> max_value:</span></span>
<span class="line"><span style="color:#F8F8F2;">        max_indices.append(n)</span></span>
<span class="line"><span style="color:#F8F8F2;">    n </span><span style="color:#F92672;">+=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F8F8F2;">max_indices_tuple </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> tuple</span><span style="color:#F8F8F2;">(max_indices)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(max_indices_tuple)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="question-02" tabindex="-1"><a class="header-anchor" href="#question-02"><span>Question 02</span></a></h3><p>编写一个程序，使用 for 循环统计给定字符串中元音字母（a, e, i, o, u）的数量，并输出结果。</p><p><strong>Solution：</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F92672;"> =</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Enter a string: &#39;</span><span style="color:#F8F8F2;">).lower()</span></span>
<span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> str</span><span style="color:#F8F8F2;">.replace(</span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&#39;,&#39;</span><span style="color:#F8F8F2;">).strip(</span><span style="color:#E6DB74;">&#39;,&#39;</span><span style="color:#F8F8F2;">).split(</span><span style="color:#E6DB74;">&#39;,&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(lst)</span></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F92672;"> not</span><span style="color:#66D9EF;font-style:italic;"> str</span><span style="color:#F8F8F2;">.isalpha():</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Invalid&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">    n </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> lst:</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;a&#39;</span><span style="color:#F92672;"> or</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;e&#39;</span><span style="color:#F92672;"> or</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;u&#39;</span><span style="color:#F92672;"> or</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;i&#39;</span><span style="color:#F92672;"> or</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;o&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">           n </span><span style="color:#F92672;">+=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(n)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>答案：</strong></p><ol><li>不忽略大小写</li></ol><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">vowels </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;aeiouAEIOU&#39;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F92672;"> =</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Enter a string: &#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">count </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> char </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;font-style:italic;"> str</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> char </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> vowels:</span></span>
<span class="line"><span style="color:#F8F8F2;">        count </span><span style="color:#F92672;">+=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;numer of vowels: &quot;</span><span style="color:#F8F8F2;">, count)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>忽略大小写</li></ol><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">vowels </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;aeiou&#39;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F92672;"> =</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Enter a string: &#39;</span><span style="color:#F8F8F2;">).lower()</span></span>
<span class="line"><span style="color:#F8F8F2;">count </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> char </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;font-style:italic;"> str</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> char </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> vowels:</span></span>
<span class="line"><span style="color:#F8F8F2;">        count </span><span style="color:#F92672;">+=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;numer of vowels: &quot;</span><span style="color:#F8F8F2;">, count)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="question-03" tabindex="-1"><a class="header-anchor" href="#question-03"><span>Question 03</span></a></h3><p>编写一个程序，使用 <code>for</code> 循环反转一个给定的字符串并输出。例如，输入 <code>hello</code>，输出 <code>olleh</code>。</p><p>@cade-tabs</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Enter a string: &#39;</span><span style="color:#F8F8F2;">).replace(</span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&#39;,&#39;</span><span style="color:#F8F8F2;">).strip(</span><span style="color:#E6DB74;">&#39;,&#39;</span><span style="color:#F8F8F2;">).split(</span><span style="color:#E6DB74;">&#39;,&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">lst.reverse()</span></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;&#39;</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> num </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> lst:</span></span>
<span class="line"><span style="color:#F8F8F2;">    string </span><span style="color:#F92672;">+=</span><span style="color:#F8F8F2;"> num</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-range" tabindex="-1"><a class="header-anchor" href="#_4-range"><span>4. range</span></a></h2><p><strong>在 Python 中，range 函数是一个非常实用的工具，用于生成一个不可变的数字序列。通常，在循环中用来进行迭代，尤其在 for 循环中。</strong></p><h3 id="_4-1-基本用法" tabindex="-1"><a class="header-anchor" href="#_4-1-基本用法"><span>4.1 基本用法</span></a></h3><p>range 函数可以有三个参数，start，stop，step</p><ul><li>start ：序列开始的值，默认为 0。</li><li>stop：序列结束的值，不包括这个值。</li><li>step ：序列中每个值之间的差（步长），默认为 1。</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">):  </span><span style="color:#88846F;"># range(5) 表示 [0,5)</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(i)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#AE81FF;">2</span></span>
<span class="line"><span style="color:#AE81FF;">3</span></span>
<span class="line"><span style="color:#AE81FF;">4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">): </span><span style="color:#88846F;"># 表示 [2,5)</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(i)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">2</span></span>
<span class="line"><span style="color:#AE81FF;">3</span></span>
<span class="line"><span style="color:#AE81FF;">4</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">11</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(i)</span></span>
<span class="line"><span style="color:#AE81FF;">2</span></span>
<span class="line"><span style="color:#AE81FF;">4</span></span>
<span class="line"><span style="color:#AE81FF;">6</span></span>
<span class="line"><span style="color:#AE81FF;">8</span></span>
<span class="line"><span style="color:#AE81FF;">10</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>range()</code>只能接受<strong>整数。</strong></p><h3 id="_4-2-特性和注意事项" tabindex="-1"><a class="header-anchor" href="#_4-2-特性和注意事项"><span>4.2 特性和注意事项</span></a></h3><ul><li><p><code>range</code>生成一个惰性序列，这意味着它只在需要时才生成数字，这有助于节约内存。</p></li><li><p><code>range</code>对象不支持任意切片，但可以强制转换成列表（如：<code>list(range(10))</code>）来获得更多操作能力。</p></li><li><p>在 Python 3中，<code>range</code>替代了 Python 2中的 xrange ，后者在旧版本中生成大的数字序列，因为它更节省内存。</p><p><code>range</code>这些特性使其在处理循环和其他需要数字序列的场景中非常有用。</p></li></ul><h3 id="_4-3-用法2" tabindex="-1"><a class="header-anchor" href="#_4-3-用法2"><span>4.3 用法2</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">stu_lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#E6DB74;">&#39;Shelley&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;Leon&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;Henry&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> index </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(stu_lst)):</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(stu_lst[index])</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">Shelley</span></span>
<span class="line"><span style="color:#F8F8F2;">Leon</span></span>
<span class="line"><span style="color:#F8F8F2;">Henry</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-4-示例" tabindex="-1"><a class="header-anchor" href="#_4-4-示例"><span>4.4 示例</span></a></h3><h4 id="求0-100的总和" tabindex="-1"><a class="header-anchor" href="#求0-100的总和"><span>求0-100的总和</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;">sum</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">101</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">    sum</span><span style="color:#F92672;"> +=</span><span style="color:#F8F8F2;"> i</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">sum</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;"># output</span></span>
<span class="line"><span style="color:#AE81FF;">5050</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="获取特定和" tabindex="-1"><a class="header-anchor" href="#获取特定和"><span>获取特定和</span></a></h4><p>获取用户输入一组以空格间隔的数据，第一个整数代表开始，第二个整数代表结束，求出两整数区间的总和。「包含这两个整数」</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst_str </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Enter two numbers separated by space: &#39;</span><span style="color:#F8F8F2;">).split(</span><span style="color:#E6DB74;">&#39; &#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> list</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">map</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">, lst_str))</span></span>
<span class="line"><span style="color:#F8F8F2;">sta </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> lst[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">en </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> lst[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">sum</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(sta, en </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">    sum</span><span style="color:#F92672;"> +=</span><span style="color:#F8F8F2;"> i</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">sum</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="开始数字大于结束数字-程序停止" tabindex="-1"><a class="header-anchor" href="#开始数字大于结束数字-程序停止"><span>开始数字大于结束数字，程序停止</span></a></h4><p>上面的程序，需要结束整数大于开始整数才可以执行计算，否则输出提示：输入不合法，程序停止～。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst_str </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Enter two numbers separated by space: &#39;</span><span style="color:#F8F8F2;">).split(</span><span style="color:#E6DB74;">&#39; &#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> list</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">map</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">, lst_str))</span></span>
<span class="line"><span style="color:#F8F8F2;">sta </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> lst[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">en </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> lst[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">sum</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> sta </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> en:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;输入不合法，程序停止&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(sta, en </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        sum</span><span style="color:#F92672;"> +=</span><span style="color:#F8F8F2;"> i</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">sum</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="不是纯数字-报错" tabindex="-1"><a class="header-anchor" href="#不是纯数字-报错"><span>不是纯数字，报错</span></a></h4><p>上面的代码运行后，用户输入不是纯数字，则报错。需要解决不能报错，不是纯数字则输出：输入不合法，需要输入纯数字～。（Invalid input）（只考虑正整数，小数不考虑）</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst_str </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Enter two numbers separated by space: &#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">lst_check </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> lst_str.replace(</span><span style="color:#E6DB74;">&#39; &#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F92672;"> not</span><span style="color:#F8F8F2;"> lst_check.isdigit():</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;输入不是纯数字，报错。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">    lst </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> list</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">map</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">,lst_str.split(</span><span style="color:#E6DB74;">&#39; &#39;</span><span style="color:#F8F8F2;">)))</span></span>
<span class="line"><span style="color:#F8F8F2;">    sta </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> lst[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">    en </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> lst[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">    sum</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> sta </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> en:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;输入不合法，程序停止&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(sta, en </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">            sum</span><span style="color:#F92672;"> +=</span><span style="color:#F8F8F2;"> i</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">sum</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="输入格式不符合要求-重试" tabindex="-1"><a class="header-anchor" href="#输入格式不符合要求-重试"><span>输入格式不符合要求，重试</span></a></h4><p>如没有用空格间隔，输入多个数字等。</p>`,42)),c(p,{id:"229",data:[{id:"code 01"},{id:"code 02"}]},{title0:a(({value:o,isActive:e})=>l[4]||(l[4]=[n("code 01")])),title1:a(({value:o,isActive:e})=>l[5]||(l[5]=[n("code 02")])),tab0:a(({value:o,isActive:e})=>l[6]||(l[6]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"num_check "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," False")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"while"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#F8F8F2"}}," num_check:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    lst_str "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF"}}," input"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'Enter two numbers separated by space: '"),s("span",{style:{color:"#F8F8F2"}},").strip()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," lst_str.count("),s("span",{style:{color:"#E6DB74"}},"' '"),s("span",{style:{color:"#F8F8F2"}},") "),s("span",{style:{color:"#F92672"}},"!="),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'输入空格数目不为1，请重新输入。'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        lst_check "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," lst_str.replace("),s("span",{style:{color:"#E6DB74"}},"' '"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#F8F8F2"}}," lst_check.isnumeric():")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'输入不符合要求，请查看是否用空格间隔。'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#F8F8F2"}}," lst_check.isdigit():")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"                print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'输入不是纯数字，报错。'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                lst "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," list"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF"}},"map"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},", lst_str.split("),s("span",{style:{color:"#E6DB74"}},"' '"),s("span",{style:{color:"#F8F8F2"}},")))")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                sta "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," lst["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                en "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," lst["),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},"]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"                sum"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#AE81FF"}}," 0")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"                if"),s("span",{style:{color:"#66D9EF"}}," len"),s("span",{style:{color:"#F8F8F2"}},"(lst) "),s("span",{style:{color:"#F92672"}},"!="),s("span",{style:{color:"#AE81FF"}}," 2"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#88846F"}},"# != 常常用于一些特定条件中，使用不够灵活。")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"                    print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'输入数字个数不符合要求，重新输入。'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"                else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"                    if"),s("span",{style:{color:"#F8F8F2"}}," sta "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#F8F8F2"}}," en:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"                        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'起始数字大于结束数字，重新输入。'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"                    else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"                        for"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"(sta, en "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"                            sum"),s("span",{style:{color:"#F92672"}}," +="),s("span",{style:{color:"#F8F8F2"}}," i")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"                        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF"}},"sum"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                        num_check "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," True")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab1:a(({value:o,isActive:e})=>l[7]||(l[7]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"num_check "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," False")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"while"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#F8F8F2"}}," num_check:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    lst_str "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF"}}," input"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'Enter two numbers separated by space: '"),s("span",{style:{color:"#F8F8F2"}},").strip()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," lst_str.count("),s("span",{style:{color:"#E6DB74"}},"' '"),s("span",{style:{color:"#F8F8F2"}},") "),s("span",{style:{color:"#F92672"}},"!="),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},":   "),s("span",{style:{color:"#88846F"}},"# 包含了输入多个数字的情况如：1 2 3，后面就不用再条件判断一次是否个数为2了")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'输入空格数目不为1，请重新输入。'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        lst_check "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," lst_str.replace("),s("span",{style:{color:"#E6DB74"}},"' '"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#F8F8F2"}}," lst_check.isnumeric():")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'输入不符合要求，请查看是否用空格间隔。'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#F8F8F2"}}," lst_check.isdigit():")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"                print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'输入不是纯数字，报错。'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                lst "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," list"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF"}},"map"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},", lst_str.split("),s("span",{style:{color:"#E6DB74"}},"' '"),s("span",{style:{color:"#F8F8F2"}},")))")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                sta "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," lst["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                en "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," lst["),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},"]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"                sum"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#AE81FF"}}," 0")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"                if"),s("span",{style:{color:"#F8F8F2"}}," sta "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#F8F8F2"}}," en:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"                    print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'起始数字大于结束数字，重新输入。'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"                else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"                    for"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"(sta, en "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"                        sum"),s("span",{style:{color:"#F92672"}}," +="),s("span",{style:{color:"#F8F8F2"}}," i")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"                    print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF"}},"sum"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                    num_check "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," True")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),_:1}),l[22]||(l[22]=F(`<p>code 02（修改之后代码）分析：</p><p><strong>缺点</strong>：</p><ul><li>嵌套层数过多，导致逻辑变得复杂；</li><li>同时使用了 while 与 for 循环；</li></ul><p><strong>优点：</strong></p><ul><li>处理了用户可能输入的多种错误数据情况，而产生的报错，并实现错误输入后的重新输入。[试错机会]</li></ul><p><strong>怎么尽可能避免多层嵌套？</strong></p><ul><li>利用整组的 <code>if...elif...elif...else</code>,只会执行其中一个的特性。</li></ul><p><strong>需要 get 到的点：</strong></p><ul><li>程序的开发流程，是一步步实现所要解决的需求和目的，不是一次性完成。先写框架和功能，再一步步 debug，把目标问题一步步拆解，大问题拆解为小问题，一步步解决。</li></ul><p><strong>推荐思考方式：</strong></p><ul><li><p>明确要解决的问题</p></li><li><p>计算区间总和：使用 for 。【关键词：区间，用 range 生成一系列数据】</p></li><li><p>用户重复输入： while 循环。</p></li></ul><p>代码优化后：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">num_check </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#F92672;"> not</span><span style="color:#F8F8F2;"> num_check:</span></span>
<span class="line"><span style="color:#F8F8F2;">    lst_str </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Enter two numbers separated by space: &#39;</span><span style="color:#F8F8F2;">).strip()</span></span>
<span class="line"><span style="color:#F8F8F2;">    lst_check </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> lst_str.replace(</span><span style="color:#E6DB74;">&#39; &#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> lst_str.count(</span><span style="color:#E6DB74;">&#39; &#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">!=</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">:   </span><span style="color:#88846F;"># 包含了输入多个数字的情况如：1 2 3，后面就不用再条件判断一次是否个数为2了</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;输入空格数目不为1，请重新输入。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        continue</span></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F92672;"> not</span><span style="color:#F8F8F2;"> lst_check.isnumeric():</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;输入不符合要求，请查看是否用空格间隔。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        continue</span></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F92672;"> not</span><span style="color:#F8F8F2;"> lst_check.isdigit():</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;输入不是纯数字，报错。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    lst </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> list</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">map</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">, lst_str.split(</span><span style="color:#E6DB74;">&#39; &#39;</span><span style="color:#F8F8F2;">)))</span></span>
<span class="line"><span style="color:#F8F8F2;">    sta </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> lst[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">    en </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> lst[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">    sum</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> sta </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> en:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;起始数字大于结束数字，重新输入。&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        continue</span></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(sta, en </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">            sum</span><span style="color:#F92672;"> +=</span><span style="color:#F8F8F2;"> i</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">sum</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        num_check </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="_5-while-和-for" tabindex="-1"><a class="header-anchor" href="#_5-while-和-for"><span>5. while 和 for</span></a></h2><p><strong>while 使用场景：</strong></p><ul><li>如果不知道一个程序要执行多少次，但已知程序需要在<mark>某种情况下暂停循环</mark>，则推荐使用 while 循环。</li></ul><p><strong>for 使用场景：</strong></p><ul><li>如果<mark>明确程序需要执行的次数</mark>，使用 for 循环。</li></ul><p>注意：所有的 for 循环都可以写成 while 循环</p><h2 id="_6-continue-break" tabindex="-1"><a class="header-anchor" href="#_6-continue-break"><span>6. continue &amp; break</span></a></h2><h3 id="_6-1-continue" tabindex="-1"><a class="header-anchor" href="#_6-1-continue"><span>6.1 continue</span></a></h3><p>用于跳过当前循环剩余的部分，并直接进入下一次循环的判断。也就是说，当循环体内遇到 continue 语句时，会跳过该次循环中 continue 之后的代码，并直接进入下一次循环。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 3</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">        continue</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(i)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#AE81FF;">2</span></span>
<span class="line"><span style="color:#AE81FF;">4</span></span>
<span class="line"><span style="color:#AE81FF;">5</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-2-break" tabindex="-1"><a class="header-anchor" href="#_6-2-break"><span>6.2 break</span></a></h3><p>break 用于立即退出当前正在执行的循环，无论循环条件是否为真。使用 break 可以提前结束循环，常常用于当满足某个条件时不需要继续执行循环体的剩余部分。</p><p>注意：循环后代码还是会继续执行的。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(i)</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 5</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">        break</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;哈哈哈哈&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#AE81FF;">2</span></span>
<span class="line"><span style="color:#AE81FF;">3</span></span>
<span class="line"><span style="color:#AE81FF;">4</span></span>
<span class="line"><span style="color:#AE81FF;">5</span></span>
<span class="line"><span style="color:#AE81FF;">6</span></span>
<span class="line"><span style="color:#F8F8F2;">哈哈哈哈</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对比：存在于 while 中的 break。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F92672;">while</span><span style="color:#AE81FF;"> True</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(i)</span></span>
<span class="line"><span style="color:#F8F8F2;">    i </span><span style="color:#F92672;">+=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 5</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">        break</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;hhhh&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#AE81FF;">2</span></span>
<span class="line"><span style="color:#AE81FF;">3</span></span>
<span class="line"><span style="color:#AE81FF;">4</span></span>
<span class="line"><span style="color:#AE81FF;">5</span></span>
<span class="line"><span style="color:#F8F8F2;">hhhh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="_7-循环嵌套" tabindex="-1"><a class="header-anchor" href="#_7-循环嵌套"><span>7. 循环嵌套</span></a></h2><h3 id="_7-1-基本用法" tabindex="-1"><a class="header-anchor" href="#_7-1-基本用法"><span>7.1 基本用法</span></a></h3><p>在 Python 中，嵌套的 for循环是指一个 for 循环内部包含另一个 for 循环。这种结构通常用于处理多维数据结构，比如列表，元组或字典的组合，或者需要在执行多层次的迭代任务时使用。</p><p>基本结构：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> 变量1 </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> 可迭代对象1:</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> 变量2 </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> 可迭代对象2:</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>每个 for 循环工作原理如下：</p><ul><li>外层循环可从可迭代对象1中取出元素赋值给变量1；</li><li>然后，内层循环开始执行，从可迭代对象2 中逐一取出元素赋值给变量2。</li><li>对于外层循环的每一个单独的迭代，内层循环都会完整的执行一次。</li></ul><p>例子：</p>`,37)),c(p,{id:"398",data:[{id:""},{id:""}]},{title0:a(({value:o,isActive:e})=>l[8]||(l[8]=[])),title1:a(({value:o,isActive:e})=>l[9]||(l[9]=[])),tab0:a(({value:o,isActive:e})=>l[10]||(l[10]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"matrix "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," [")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    ("),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},"),")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    ("),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},"),")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," row "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F8F8F2"}}," matrix:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"    print"),s("span",{style:{color:"#F8F8F2"}},"(row)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#output")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},")")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:a(({value:o,isActive:e})=>l[11]||(l[11]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"matrix "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," [")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    ("),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},"),")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    ("),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},"),")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," row "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F8F8F2"}}," matrix:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    for"),s("span",{style:{color:"#F8F8F2"}}," column "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F8F8F2"}}," row:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"(column)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#output")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"1")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"2")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"3")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"4")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),l[23]||(l[23]=F(`<h3 id="_7-2-二维数组的练习" tabindex="-1"><a class="header-anchor" href="#_7-2-二维数组的练习"><span>7.2 二维数组的练习</span></a></h3><ul><li>把二维数组里每个值都相加</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">matrix </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">],</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">],</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">],</span></span>
<span class="line"><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">sum</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> row </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> matrix:</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> col </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> row:</span></span>
<span class="line"><span style="color:#66D9EF;">        sum</span><span style="color:#F92672;"> +=</span><span style="color:#F8F8F2;"> col</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">sum</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">45</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>不用嵌套也可以实现：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">matrix </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">],</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">],</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">],</span></span>
<span class="line"><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">sum1 </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> matrix:</span></span>
<span class="line"><span style="color:#F8F8F2;">    sum1 </span><span style="color:#F92672;">+=</span><span style="color:#66D9EF;"> sum</span><span style="color:#F8F8F2;">(i)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(sum1)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>把二维数组里的每列相加</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">matrix </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">],</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">],</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">],</span></span>
<span class="line"><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">colum_sum </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">*</span><span style="color:#66D9EF;"> len</span><span style="color:#F8F8F2;">(matrix[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">])  </span><span style="color:#88846F;"># 初始化几列二维数组的结果</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(colum_sum)</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(matrix[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">])):  </span><span style="color:#88846F;"># 遍历每一个元素，使用第一个列表长度为基石。0 1 2</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> j </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(matrix)):  </span><span style="color:#88846F;"># 一共几行</span></span>
<span class="line"><span style="color:#F8F8F2;">        colum_sum[j] </span><span style="color:#F92672;">+=</span><span style="color:#F8F8F2;"> matrix[j][i]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;每列的和：&#39;</span><span style="color:#F8F8F2;">, colum_sum)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">每列的和： [</span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">15</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">24</span><span style="color:#F8F8F2;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>进一步观察在循环什么？</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> time</span></span>
<span class="line"><span style="color:#F8F8F2;">matrix </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">],</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">],</span></span>
<span class="line"><span style="color:#F8F8F2;">    [</span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">],</span></span>
<span class="line"><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">colum_sum </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">*</span><span style="color:#66D9EF;"> len</span><span style="color:#F8F8F2;">(matrix[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">])  </span><span style="color:#88846F;"># 初始化几列二维数组的结果</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(colum_sum)</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(matrix[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">])):  </span><span style="color:#88846F;"># 遍历每一个元素，使用第一个列表长度为基石。0 1 2</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> j </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(matrix)):  </span><span style="color:#88846F;"># 一共几行</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;matrix[</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">j</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">][</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">i</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">]:</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">matrix[j][i]</span><span style="color:#66D9EF;font-style:italic;">:</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        colum_sum[j] </span><span style="color:#F92672;">+=</span><span style="color:#F8F8F2;"> matrix[j][i]</span></span>
<span class="line"><span style="color:#F8F8F2;">        time.sleep(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;每列的和：&#39;</span><span style="color:#F8F8F2;">, colum_sum)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">matrix[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">][</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]:</span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">matrix[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">][</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]:</span><span style="color:#AE81FF;">4</span></span>
<span class="line"><span style="color:#F8F8F2;">matrix[</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">][</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]:</span><span style="color:#AE81FF;">7</span></span>
<span class="line"><span style="color:#F8F8F2;">matrix[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">][</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]:</span><span style="color:#AE81FF;">2</span></span>
<span class="line"><span style="color:#F8F8F2;">matrix[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">][</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]:</span><span style="color:#AE81FF;">5</span></span>
<span class="line"><span style="color:#F8F8F2;">matrix[</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">][</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]:</span><span style="color:#AE81FF;">8</span></span>
<span class="line"><span style="color:#F8F8F2;">matrix[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">][</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]:</span><span style="color:#AE81FF;">3</span></span>
<span class="line"><span style="color:#F8F8F2;">matrix[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">][</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]:</span><span style="color:#AE81FF;">6</span></span>
<span class="line"><span style="color:#F8F8F2;">matrix[</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">][</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]:</span><span style="color:#AE81FF;">9</span></span>
<span class="line"><span style="color:#F8F8F2;">每列的和： [</span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">15</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">24</span><span style="color:#F8F8F2;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_7-3-九九乘法表" tabindex="-1"><a class="header-anchor" href="#_7-3-九九乘法表"><span>7.3 九九乘法表</span></a></h3><p>第一种方法：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> j </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> j </span><span style="color:#F92672;">&lt;=</span><span style="color:#F8F8F2;"> i:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">j</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> * </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">i</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> = </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">i </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> j</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> &#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#FD971F;font-style:italic;">end</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">\\t</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 1</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;"> 	</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 2</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 2</span><span style="color:#AE81FF;"> 	2</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 2</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 4</span><span style="color:#F8F8F2;"> 	</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 3</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 3</span><span style="color:#AE81FF;"> 	2</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 3</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 6</span><span style="color:#AE81FF;"> 	3</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 3</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 9</span><span style="color:#F8F8F2;"> 	</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 4</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 4</span><span style="color:#AE81FF;"> 	2</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 4</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 8</span><span style="color:#AE81FF;"> 	3</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 4</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 12</span><span style="color:#AE81FF;"> 	4</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 4</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 16</span><span style="color:#F8F8F2;"> 	</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 5</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 5</span><span style="color:#AE81FF;"> 	2</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 5</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 10</span><span style="color:#AE81FF;"> 	3</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 5</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 15</span><span style="color:#AE81FF;"> 	4</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 5</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 20</span><span style="color:#AE81FF;"> 	5</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 5</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 25</span><span style="color:#F8F8F2;"> 	</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 6</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 6</span><span style="color:#AE81FF;"> 	2</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 6</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 12</span><span style="color:#AE81FF;"> 	3</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 6</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 18</span><span style="color:#AE81FF;"> 	4</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 6</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 24</span><span style="color:#AE81FF;"> 	5</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 6</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 30</span><span style="color:#AE81FF;"> 	6</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 6</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 36</span><span style="color:#F8F8F2;"> 	</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 7</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 7</span><span style="color:#AE81FF;"> 	2</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 7</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 14</span><span style="color:#AE81FF;"> 	3</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 7</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 21</span><span style="color:#AE81FF;"> 	4</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 7</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 28</span><span style="color:#AE81FF;"> 	5</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 7</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 35</span><span style="color:#AE81FF;"> 	6</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 7</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 42</span><span style="color:#AE81FF;"> 	7</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 7</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 49</span><span style="color:#F8F8F2;"> 	</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 8</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 8</span><span style="color:#AE81FF;"> 	2</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 8</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 16</span><span style="color:#AE81FF;"> 	3</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 8</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 24</span><span style="color:#AE81FF;"> 	4</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 8</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 32</span><span style="color:#AE81FF;"> 	5</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 8</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 40</span><span style="color:#AE81FF;"> 	6</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 8</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 48</span><span style="color:#AE81FF;"> 	7</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 8</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 56</span><span style="color:#AE81FF;"> 	8</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 8</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 64</span><span style="color:#F8F8F2;"> 	</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 9</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 9</span><span style="color:#AE81FF;"> 	2</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 9</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 18</span><span style="color:#AE81FF;"> 	3</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 9</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 27</span><span style="color:#AE81FF;"> 	4</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 9</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 36</span><span style="color:#AE81FF;"> 	5</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 9</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 45</span><span style="color:#AE81FF;"> 	6</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 9</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 54</span><span style="color:#AE81FF;"> 	7</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 9</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 63</span><span style="color:#AE81FF;"> 	8</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 9</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 72</span><span style="color:#AE81FF;"> 	9</span><span style="color:#F92672;"> *</span><span style="color:#AE81FF;"> 9</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 81</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>第二种方法：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> time</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> j </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, i </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        time.sleep(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">j</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> * </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">i</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> = </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">i </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> j</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> &#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#FD971F;font-style:italic;">end</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">\\t</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>但是嵌套循环会使代码复杂度增加，尤其是当循环层数增多时，需要注意代码的可读性和性能。</p><p>在尽可能的情况下，避免使用多层嵌套，以免造成代码的运行效率降低。</p><p>嵌套循环是编程中常见的一个概念，通过适当使用可以解决很多复杂问题，但也要注意对性能的影响。</p></div><p>打印成倒三角：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">\\t\\t\\t</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F92672;"> *</span><span style="color:#F8F8F2;"> (i </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">), </span><span style="color:#FD971F;font-style:italic;">end</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">)   </span><span style="color:#88846F;"># 算式中总共有3个整型，两个算术运算符，加上后面的一个空格，占位6个，三个制表符</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> j </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(i, </span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">i</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> * </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">j</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> = </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">i </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> j</span><span style="color:#AE81FF;">}\\t</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">end</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-4-根据用户输入打印矩形" tabindex="-1"><a class="header-anchor" href="#_7-4-根据用户输入打印矩形"><span>7.4 根据用户输入打印矩形</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> time</span></span>
<span class="line"><span style="color:#F8F8F2;">width </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;输入矩形的宽度：&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">height </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;输入矩形的高度：&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(height):</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> j </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(width):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;*&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">end</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        time.sleep(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">输入矩形的宽度：</span><span style="color:#AE81FF;">5</span></span>
<span class="line"><span style="color:#F8F8F2;">输入矩形的高度：</span><span style="color:#AE81FF;">3</span></span>
<span class="line"><span style="color:#F92672;">*****</span></span>
<span class="line"><span style="color:#F92672;">*****</span></span>
<span class="line"><span style="color:#F92672;">*****</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;">len</span><span style="color:#F92672;"> =</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Enter the length of the rectangle:&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">width </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Enter the width of the rectangle:&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, width</span><span style="color:#F92672;">+</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;*&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">end</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> j </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;*&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">end</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-5-正三角形和菱形的输出" tabindex="-1"><a class="header-anchor" href="#_7-5-正三角形和菱形的输出"><span>7.5 正三角形和菱形的输出</span></a></h3><h4 id="_7-5-1-正三角形输出" tabindex="-1"><a class="header-anchor" href="#_7-5-1-正三角形输出"><span>7.5.1 正三角形输出</span></a></h4><p>编写一个程序，使用嵌套的 for 循环输出一个由 * 组成的正三角形。行数由用户输入确定。例如：<br> 输入：行数 = 4</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">height </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Enter your height in triangle:&quot;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, height </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> j </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(height </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> i):   </span><span style="color:#88846F;"># 输出每一行前面的空格，为height - 1个</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39; &#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">end</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> k </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F92672;"> *</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">):   </span><span style="color:#88846F;"># 找规律输出每一行的*号数</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;*&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">end</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">Enter your height </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> triangle:</span><span style="color:#AE81FF;">4</span></span>
<span class="line"><span style="color:#F92672;">   *</span></span>
<span class="line"><span style="color:#F92672;">  ***</span></span>
<span class="line"><span style="color:#F92672;"> *****</span></span>
<span class="line"><span style="color:#F92672;">*******</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7-5-2-正菱形输出" tabindex="-1"><a class="header-anchor" href="#_7-5-2-正菱形输出"><span>7.5.2 正菱形输出</span></a></h4><p>编写一个程序，使用嵌套的 for 循环输出一个由 * 组成的菱形。行数由用户输入确定。</p>`,26)),c(p,{id:"480",data:[{id:"自己逻辑"},{id:"优化代码"},{id:"s 自己逻辑"},{id:"s 优化代码"}]},{title0:a(({value:o,isActive:e})=>l[12]||(l[12]=[n("自己逻辑")])),title1:a(({value:o,isActive:e})=>l[13]||(l[13]=[n("优化代码")])),title2:a(({value:o,isActive:e})=>l[14]||(l[14]=[n("s 自己逻辑")])),title3:a(({value:o,isActive:e})=>l[15]||(l[15]=[n("s 优化代码")])),tab0:a(({value:o,isActive:e})=>l[16]||(l[16]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"height "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF"}},"input"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Enter your height in triangle:"'),s("span",{style:{color:"#F8F8F2"}},"))")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", height "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#AE81FF"}}," 2"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"<="),s("span",{style:{color:"#F8F8F2"}}," height:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        for"),s("span",{style:{color:"#F8F8F2"}}," j "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"(height "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," i):   "),s("span",{style:{color:"#88846F"}},"# 输出每一行前面的空格，为height - 1个")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"' '"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"end"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        for"),s("span",{style:{color:"#F8F8F2"}}," k "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},"):   "),s("span",{style:{color:"#88846F"}},"# 找规律输出每一行的*号数")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'*'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"end"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        for"),s("span",{style:{color:"#F8F8F2"}}," t "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"(i "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," height):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"' '"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"end"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        for"),s("span",{style:{color:"#F8F8F2"}}," f "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," height "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F92672"}}," -"),s("span",{style:{color:"#F8F8F2"}}," (i "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," height) "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#AE81FF"}}," 2"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'*'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"end"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"    print"),s("span",{style:{color:"#F8F8F2"}},"()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#output")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Enter your height "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F8F8F2"}}," triangle:"),s("span",{style:{color:"#AE81FF"}},"4")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"   *")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  ***")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}}," *****")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"*******")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}}," *****")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"  ***")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"   *")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab1:a(({value:o,isActive:e})=>l[17]||(l[17]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"rows "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF"}},"input"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"输入行数: "'),s("span",{style:{color:"#F8F8F2"}},"))")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", rows "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    for"),s("span",{style:{color:"#F8F8F2"}}," j "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"(rows "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," i):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'" "'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"end"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'""'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    for"),s("span",{style:{color:"#F8F8F2"}}," k "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"*"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"end"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'""'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"    print"),s("span",{style:{color:"#F8F8F2"}},"()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"(rows "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    for"),s("span",{style:{color:"#F8F8F2"}}," j "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"(rows "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," i):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'" "'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"end"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'""'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    for"),s("span",{style:{color:"#F8F8F2"}}," k "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"*"'),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"end"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},'""'),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"    print"),s("span",{style:{color:"#F8F8F2"}},"()")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),s("a",{class:"header-anchor",href:"#_7-6-空心形状的输出"},[s("span",null,"7.6 空心形状的输出")],-1),s("a",{class:"header-anchor",href:"#_7-6-1-空心矩形"},[s("span",null,"7.6.1 空心矩形")],-1)])),tab2:a(({value:o,isActive:e})=>l[18]||(l[18]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"length "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF"}},"input"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'Enter the length of the rectangle:'"),s("span",{style:{color:"#F8F8F2"}},"))")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"width "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF"}},"input"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'Enter the width of the rectangle:'"),s("span",{style:{color:"#F8F8F2"}},"))")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F92672"}}," or"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#F8F8F2"}}," width:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        for"),s("span",{style:{color:"#F8F8F2"}}," j "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", length "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'*'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"end"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        for"),s("span",{style:{color:"#F8F8F2"}}," j "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", length "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F8F8F2"}}," j "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F92672"}}," or"),s("span",{style:{color:"#F8F8F2"}}," j "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#F8F8F2"}}," length:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"                print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'*'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"end"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"                print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"' '"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"end"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"    print"),s("span",{style:{color:"#F8F8F2"}},"()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#output")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Enter the length of the rectangle:"),s("span",{style:{color:"#AE81FF"}},"10")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Enter the width of the rectangle:"),s("span",{style:{color:"#AE81FF"}},"5")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"**********")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F92672"}},"        *")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F92672"}},"        *")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F92672"}},"        *")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"**********")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab3:a(({value:o,isActive:e})=>l[19]||(l[19]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"length "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF"}},"input"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'Enter the length of the rectangle:'"),s("span",{style:{color:"#F8F8F2"}},"))")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"width "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," int"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF"}},"input"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'Enter the width of the rectangle:'"),s("span",{style:{color:"#F8F8F2"}},"))")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"(width):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    for"),s("span",{style:{color:"#F8F8F2"}}," j "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"(length):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F92672"}}," or"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F92672"}}," or"),s("span",{style:{color:"#F8F8F2"}}," j "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#AE81FF"}}," 0"),s("span",{style:{color:"#F92672"}}," or"),s("span",{style:{color:"#F8F8F2"}}," j "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'            """观察我们要输出的矩形特点，以上情况输出*，其他情况不输出。"""')]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'*'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"end"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        else"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"            print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"end"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},"' '"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"    print"),s("span",{style:{color:"#F8F8F2"}},"()")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),s("a",{class:"header-anchor",href:"#_7-6-2-空心菱形"},[s("span",null,"7.6.2 空心菱形")],-1),s("a",{class:"header-anchor",href:"#_7-7-二维数组遍历"},[s("span",null,"7.7 二维数组遍历")],-1),s("a",{class:"header-anchor",href:"#_7-8-数字金字塔"},[s("span",null,"7.8 数字金字塔")],-1),s("a",{class:"header-anchor",href:"#_7-9-输入-n-4"},[s("span",null,"7.9 输入：n = 4")],-1),s("a",{class:"header-anchor",href:"#_7-10-乘法表的非对角线和"},[s("span",null,"7.10 乘法表的非对角线和")],-1)])),_:1})])}const h=r(u,[["render",v]]),A=JSON.parse('{"path":"/zh/python1v1/For.html","title":"12-for循环","lang":"zh-CN","frontmatter":{"title":"12-for循环","icon":"python","date":"2024-08-14T10:00:58.000Z","author":"XiaoXianYue","isOriginal":true,"category":["课堂笔记"],"tag":["课堂笔记"],"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"feed":false,"seo":false,"head":[]},"git":{"createdTime":1723604752000,"updatedTime":1729850625000,"contributors":[{"name":"Xiaoxianyue","username":"Xiaoxianyue","email":"2310219843@qq.com","commits":8,"url":"https://github.com/Xiaoxianyue"}]},"readingTime":{"minutes":16.98,"words":5094},"filePathRelative":"zh/python1v1/For.md","localizedDate":"2024年8月14日"}');export{h as comp,A as data};
