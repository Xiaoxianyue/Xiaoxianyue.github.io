import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as s,e as c,b as i,w as a,r as F,o as y,d as n}from"./app-Cr94KhCm.js";const d="/assets/image-20240913142806428-66C64JW0.png",v={};function u(m,l){const p=F("CodeTabs");return y(),t("div",null,[l[6]||(l[6]=s("h2",{id:"_1-判断是否回文",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_1-判断是否回文"},[s("span",null,"1. 判断是否回文")])],-1)),l[7]||(l[7]=s("img",{src:d,alt:"image-20240913142806428",style:{zoom:"67%"}},null,-1)),c(p,{id:"4",data:[{id:"Solution （mine）："},{id:"Solution 01 (Coventry):"},{id:"Solution 02 (Coventry):"}]},{title0:a(({value:e,isActive:o})=>l[0]||(l[0]=[n("Solution （mine）：")])),title1:a(({value:e,isActive:o})=>l[1]||(l[1]=[n("Solution 01 (Coventry):")])),title2:a(({value:e,isActive:o})=>l[2]||(l[2]=[n("Solution 02 (Coventry):")])),tab0:a(({value:e,isActive:o})=>l[3]||(l[3]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"from"),s("span",{style:{color:"#F8F8F2"}}," copy "),s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F8F8F2"}}," deepcopy")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"L "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF"}}," input"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'Please enter a list: '"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"if"),s("span",{style:{color:"#F8F8F2"}}," L.replace("),s("span",{style:{color:"#E6DB74"}},"'['"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},").replace("),s("span",{style:{color:"#E6DB74"}},"']'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},").replace("),s("span",{style:{color:"#E6DB74"}},"','"),s("span",{style:{color:"#F8F8F2"}},","),s("span",{style:{color:"#E6DB74"}},"''"),s("span",{style:{color:"#F8F8F2"}},").isdigit():")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    L "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," L.strip("),s("span",{style:{color:"#E6DB74"}},"'['"),s("span",{style:{color:"#F8F8F2"}},").strip("),s("span",{style:{color:"#E6DB74"}},"']'"),s("span",{style:{color:"#F8F8F2"}},").split("),s("span",{style:{color:"#E6DB74"}},"','"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    L_original "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," deepcopy(L)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    L.reverse()")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," L "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#F8F8F2"}}," L_original:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'True'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"elif"),s("span",{style:{color:"#F8F8F2"}}," L.isalpha():")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    L_reverse "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," ''")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    for"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF"}},"len"),s("span",{style:{color:"#F8F8F2"}},"(L)"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        L_reverse "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," L_reverse "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," L[i]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," L_reverse "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#F8F8F2"}}," L:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'True'"),s("span",{style:{color:"#F8F8F2"}},")")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab1:a(({value:e,isActive:o})=>l[4]||(l[4]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#non-destructive ; will work with list or string")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"def"),s("span",{style:{color:"#A6E22E"}}," palindrome2"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"posspal"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    for"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF"}},"len"),s("span",{style:{color:"#F8F8F2"}},"(posspal)"),s("span",{style:{color:"#F92672"}},"//"),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," (posspal[i] "),s("span",{style:{color:"#F92672"}},"!="),s("span",{style:{color:"#F8F8F2"}}," posspal["),s("span",{style:{color:"#66D9EF"}},"len"),s("span",{style:{color:"#F8F8F2"}},"(posspal) "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F92672"}}," -"),s("span",{style:{color:"#F8F8F2"}}," i]):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            return"),s("span",{style:{color:"#AE81FF"}}," False")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    return"),s("span",{style:{color:"#AE81FF"}}," True")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:a(({value:e,isActive:o})=>l[5]||(l[5]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"def"),s("span",{style:{color:"#A6E22E"}}," palindrome"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"posspal"),s("span",{style:{color:"#F8F8F2"}},"):")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#66D9EF"}}," len"),s("span",{style:{color:"#F8F8F2"}},"(posspal) "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#AE81FF"}}," 2"),s("span",{style:{color:"#F8F8F2"}},":")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#AE81FF"}}," True")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    elif"),s("span",{style:{color:"#F8F8F2"}}," posspal["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"] "),s("span",{style:{color:"#F92672"}},"!="),s("span",{style:{color:"#F8F8F2"}}," posspal["),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},"]:")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#AE81FF"}}," False")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    return"),s("span",{style:{color:"#F8F8F2"}}," palindrome(posspal["),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},":"),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},"])")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),l[8]||(l[8]=i(`<div class="hint-container warning"><p class="hint-container-title">注意</p><p>避免使用内置函数，那我们最好手动使用循环来一个个 check 是否对称，找到需要配对下标的数学联系。</p><p>第二个递归方法，比对第一个和最后一个，递归剥去外面一层….</p></div><h2 id="_2-冒泡排序" tabindex="-1"><a class="header-anchor" href="#_2-冒泡排序"><span>2. 冒泡排序</span></a></h2><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;"># bubble_sort 代码实现</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> typing </span><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> List</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 冒泡排序</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> bubble_sort</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">arr</span><span style="color:#F8F8F2;">: List[</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">]):</span></span>
<span class="line"><span style="color:#E6DB74;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E6DB74;">    冒泡排序(Bubble sort)</span></span>
<span class="line"><span style="color:#E6DB74;">    :param arr: 待排序的List,此处限制了排序类型为int</span></span>
<span class="line"><span style="color:#E6DB74;">    :return: 冒泡排序是就地排序(in-place)</span></span>
<span class="line"><span style="color:#E6DB74;">    &quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">    length </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> len</span><span style="color:#F8F8F2;">(arr)</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> length </span><span style="color:#F92672;">&lt;=</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">        return</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(length):</span></span>
<span class="line"><span style="color:#F8F8F2;">        is_made_swap </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span><span style="color:#88846F;">  ## 设置标志位，若本身已经有序，则直接break</span></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> j </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(length </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> arr[j] </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> arr[j </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">]:</span></span>
<span class="line"><span style="color:#F8F8F2;">                arr[j], arr[j </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> arr[j </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">], arr[j]</span></span>
<span class="line"><span style="color:#F8F8F2;">                is_made_swap </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F92672;"> not</span><span style="color:#F8F8F2;"> is_made_swap:</span></span>
<span class="line"><span style="color:#F92672;">            break</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 测试数据</span></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> __name__ </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;__main__&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">    import</span><span style="color:#F8F8F2;"> random</span></span>
<span class="line"><span style="color:#F8F8F2;">    random.seed(</span><span style="color:#AE81FF;">54</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    arr </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [random.randint(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> _ </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;原始数据：&quot;</span><span style="color:#F8F8F2;">, arr)</span></span>
<span class="line"><span style="color:#F8F8F2;">    bubble_sort(arr)</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;冒泡排序结果：&quot;</span><span style="color:#F8F8F2;">, arr)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div>`,3))])}const h=r(v,[["render",u]]),g=JSON.parse(`{"path":"/zh/Advanced_Algorithms/Week02_ass.html","title":"高级算法——第2周非评估作业","lang":"zh-CN","frontmatter":{"title":"高级算法——第2周非评估作业","icon":"python","date":"2024-09-13T13:59:03.000Z","author":"XiaoXianYue","isOriginal":true,"category":["大三上","高级算法作业"],"tag":["大三上","高级算法作业"],"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"description":"1. 判断是否回文 image-20240913142806428 注意 避免使用内置函数，那我们最好手动使用循环来一个个 check 是否对称，找到需要配对下标的数学联系。 第二个递归方法，比对第一个和最后一个，递归剥去外面一层…. 2. 冒泡排序","head":[["meta",{"property":"og:url","content":"https://bougiemoonintaurus/zh/Advanced_Algorithms/Week02_ass.html"}],["meta",{"property":"og:site_name","content":"奶酪奶酪"}],["meta",{"property":"og:title","content":"高级算法——第2周非评估作业"}],["meta",{"property":"og:description","content":"1. 判断是否回文 image-20240913142806428 注意 避免使用内置函数，那我们最好手动使用循环来一个个 check 是否对称，找到需要配对下标的数学联系。 第二个递归方法，比对第一个和最后一个，递归剥去外面一层…. 2. 冒泡排序"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-11-05T13:36:09.000Z"}],["meta",{"property":"article:author","content":"XiaoXianYue"}],["meta",{"property":"article:tag","content":"大三上"}],["meta",{"property":"article:tag","content":"高级算法作业"}],["meta",{"property":"article:published_time","content":"2024-09-13T13:59:03.000Z"}],["meta",{"property":"article:modified_time","content":"2024-11-05T13:36:09.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"高级算法——第2周非评估作业\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-09-13T13:59:03.000Z\\",\\"dateModified\\":\\"2024-11-05T13:36:09.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XiaoXianYue\\"}]}"]]},"git":{"createdTime":1726250691000,"updatedTime":1730813769000,"contributors":[{"name":"Xiaoxianyue","username":"Xiaoxianyue","email":"2310219843@qq.com","commits":3,"url":"https://github.com/Xiaoxianyue"}]},"readingTime":{"minutes":1.42,"words":427},"filePathRelative":"zh/Advanced_Algorithms/Week02_ass.md","localizedDate":"2024年9月13日","excerpt":"<h2>1. 判断是否回文</h2>\\n\\n\\n<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">注意</p>\\n<p>避免使用内置函数，那我们最好手动使用循环来一个个 check 是否对称，找到需要配对下标的数学联系。</p>\\n<p>第二个递归方法，比对第一个和最后一个，递归剥去外面一层….</p>\\n</div>\\n<h2>2. 冒泡排序</h2>\\n<div class=\\"language-python line-numbers-mode has-collapsed-lines collapsed\\" data-highlighter=\\"shiki\\" data-ext=\\"python\\" style=\\"--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2\\"><pre class=\\"shiki monokai vp-code\\"><code><span class=\\"line\\"><span style=\\"color:#88846F\\"># bubble_sort 代码实现</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#F92672\\">from</span><span style=\\"color:#F8F8F2\\"> typing </span><span style=\\"color:#F92672\\">import</span><span style=\\"color:#F8F8F2\\"> List</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#88846F\\"># 冒泡排序</span></span>\\n<span class=\\"line\\"><span style=\\"color:#66D9EF;font-style:italic\\">def</span><span style=\\"color:#A6E22E\\"> bubble_sort</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#FD971F;font-style:italic\\">arr</span><span style=\\"color:#F8F8F2\\">: List[</span><span style=\\"color:#66D9EF;font-style:italic\\">int</span><span style=\\"color:#F8F8F2\\">]):</span></span>\\n<span class=\\"line\\"><span style=\\"color:#E6DB74\\">    \\"\\"\\"</span></span>\\n<span class=\\"line\\"><span style=\\"color:#E6DB74\\">    冒泡排序(Bubble sort)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#E6DB74\\">    :param arr: 待排序的List,此处限制了排序类型为int</span></span>\\n<span class=\\"line\\"><span style=\\"color:#E6DB74\\">    :return: 冒泡排序是就地排序(in-place)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#E6DB74\\">    \\"\\"\\"</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">    length </span><span style=\\"color:#F92672\\">=</span><span style=\\"color:#66D9EF\\"> len</span><span style=\\"color:#F8F8F2\\">(arr)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F92672\\">    if</span><span style=\\"color:#F8F8F2\\"> length </span><span style=\\"color:#F92672\\">&lt;=</span><span style=\\"color:#AE81FF\\"> 1</span><span style=\\"color:#F8F8F2\\">:</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F92672\\">        return</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#F92672\\">    for</span><span style=\\"color:#F8F8F2\\"> i </span><span style=\\"color:#F92672\\">in</span><span style=\\"color:#66D9EF\\"> range</span><span style=\\"color:#F8F8F2\\">(length):</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">        is_made_swap </span><span style=\\"color:#F92672\\">=</span><span style=\\"color:#AE81FF\\"> False</span><span style=\\"color:#88846F\\">  ## 设置标志位，若本身已经有序，则直接break</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F92672\\">        for</span><span style=\\"color:#F8F8F2\\"> j </span><span style=\\"color:#F92672\\">in</span><span style=\\"color:#66D9EF\\"> range</span><span style=\\"color:#F8F8F2\\">(length </span><span style=\\"color:#F92672\\">-</span><span style=\\"color:#F8F8F2\\"> i </span><span style=\\"color:#F92672\\">-</span><span style=\\"color:#AE81FF\\"> 1</span><span style=\\"color:#F8F8F2\\">):</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F92672\\">            if</span><span style=\\"color:#F8F8F2\\"> arr[j] </span><span style=\\"color:#F92672\\">&gt;</span><span style=\\"color:#F8F8F2\\"> arr[j </span><span style=\\"color:#F92672\\">+</span><span style=\\"color:#AE81FF\\"> 1</span><span style=\\"color:#F8F8F2\\">]:</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">                arr[j], arr[j </span><span style=\\"color:#F92672\\">+</span><span style=\\"color:#AE81FF\\"> 1</span><span style=\\"color:#F8F8F2\\">] </span><span style=\\"color:#F92672\\">=</span><span style=\\"color:#F8F8F2\\"> arr[j </span><span style=\\"color:#F92672\\">+</span><span style=\\"color:#AE81FF\\"> 1</span><span style=\\"color:#F8F8F2\\">], arr[j]</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">                is_made_swap </span><span style=\\"color:#F92672\\">=</span><span style=\\"color:#AE81FF\\"> True</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F92672\\">        if</span><span style=\\"color:#F92672\\"> not</span><span style=\\"color:#F8F8F2\\"> is_made_swap:</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F92672\\">            break</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"color:#88846F\\"># 测试数据</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F92672\\">if</span><span style=\\"color:#F8F8F2\\"> __name__ </span><span style=\\"color:#F92672\\">==</span><span style=\\"color:#E6DB74\\"> '__main__'</span><span style=\\"color:#F8F8F2\\">:</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F92672\\">    import</span><span style=\\"color:#F8F8F2\\"> random</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">    random.seed(</span><span style=\\"color:#AE81FF\\">54</span><span style=\\"color:#F8F8F2\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">    arr </span><span style=\\"color:#F92672\\">=</span><span style=\\"color:#F8F8F2\\"> [random.randint(</span><span style=\\"color:#AE81FF\\">0</span><span style=\\"color:#F8F8F2\\">, </span><span style=\\"color:#AE81FF\\">100</span><span style=\\"color:#F8F8F2\\">) </span><span style=\\"color:#F92672\\">for</span><span style=\\"color:#F8F8F2\\"> _ </span><span style=\\"color:#F92672\\">in</span><span style=\\"color:#66D9EF\\"> range</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#AE81FF\\">10</span><span style=\\"color:#F8F8F2\\">)]</span></span>\\n<span class=\\"line\\"><span style=\\"color:#66D9EF\\">    print</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#E6DB74\\">\\"原始数据：\\"</span><span style=\\"color:#F8F8F2\\">, arr)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">    bubble_sort(arr)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#66D9EF\\">    print</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#E6DB74\\">\\"冒泡排序结果：\\"</span><span style=\\"color:#F8F8F2\\">, arr)</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div><div class=\\"collapsed-lines\\"></div></div>","autoDesc":true}`);export{h as comp,g as data};
