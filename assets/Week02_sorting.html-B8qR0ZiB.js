import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as h,c as k,d as p,w as a,b as r,o as d,e as s,a as i}from"./app-D1oVJzDi.js";const o={},g=r(`<h2 id="_0-目录" tabindex="-1"><a class="header-anchor" href="#_0-目录"><span>0. 目录</span></a></h2><ul><li>bogosort</li><li>insertion sort</li><li>bubble sort</li><li>merge sort</li><li>quick sort</li></ul><h2 id="_1-bogosort" tabindex="-1"><a class="header-anchor" href="#_1-bogosort"><span>1. Bogosort</span></a></h2><ul><li>这是一个笑话算法，随机洗牌一个列表；</li><li>如果洗牌没有按正确顺序排列，就再洗一次</li><li>继续洗牌，直到得到一个排序列表！</li><li>查看 python 代码</li></ul><h3 id="_1-1-前置知识" tabindex="-1"><a class="header-anchor" href="#_1-1-前置知识"><span>1.1 前置知识</span></a></h3><ul><li>随机库：<code>random</code><ul><li><code>random.randint(a, b)</code></li></ul></li><li>内置函数： <ul><li><code>len()</code></li><li><code>range()</code></li></ul></li><li>语法： <ul><li><code>for</code></li><li><code>function</code></li><li>比较运算符</li><li>多个变量同时赋予不同值 | 引入多一个变量</li></ul></li></ul><h3 id="_1-2-前置知识查漏补缺" tabindex="-1"><a class="header-anchor" href="#_1-2-前置知识查漏补缺"><span>1.2 前置知识查漏补缺</span></a></h3><ol><li>随机库：</li></ol><p><code>random.randint(a, b)</code>用于随机生成一个从 a 到 b 的数字，<mark>包含 a 和 b</mark>。</p><h3 id="_1-3-排序原理" tabindex="-1"><a class="header-anchor" href="#_1-3-排序原理"><span>1.3 排序原理</span></a></h3><p>随机打乱列表，判断列表是否有序。无序则继续打乱，继续判断。</p><h3 id="_1-4-功能拆解" tabindex="-1"><a class="header-anchor" href="#_1-4-功能拆解"><span>1.4 功能拆解</span></a></h3><h4 id="_1-4-1-如何判断一个列表是否有序" tabindex="-1"><a class="header-anchor" href="#_1-4-1-如何判断一个列表是否有序"><span>1.4.1 如何判断一个列表是否有序？</span></a></h4><blockquote><p>思考一下，类似之前讲到，如何判断用户输入是否为浮点数？</p><ul><li>Solution 1：首先，用内置函数 <code>count()</code>算出输入中有几个小数点（.），再 <code>replace()</code>小数点判断其是否为纯数字。</li><li>Solution 2：直接 <code>replace(&#39;.&#39;, &#39;&#39;, 1)</code>,控制替换次数为1，然后判断其是否为纯数字。</li></ul></blockquote><p><strong>Solution 01：（不使用函数的方法）</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">lst </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">is_sorted </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> True</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">former </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> lst[</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> lst:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> former:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        former </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> i</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        is_sorted </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> False</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        break</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(is_sorted)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Solution 02：（使用函数的方法）</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">lst </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> is_sorted</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">lst</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">    former </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> lst[</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> lst:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> former:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">            former </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> i</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">            return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> False</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> True</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>实现原理</summary><p>使用了函数遇到 <code>return</code>即停止的特性。</p></details><p><strong>Solution 03：（优化的方法）</strong></p><p>非函数：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">lst </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">6</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">7</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">is_sorted </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> True</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">len</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(lst) </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> lst[i] </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&lt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> lst[i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">]:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        is_sorted </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> True</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    else</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">        is_sorted </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> False</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        break</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(is_sorted)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>or</p><p>函数：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF;"> is_sorted</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#24292E;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">lst</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">):</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">    # 从第二个元素开始遍历，因为第一个元素没有前一个元素可以比较</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2;">len</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">(lst)):</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">        # 如果前一个元素大于当前元素，说明不是升序排列</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> lst[i </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF;"> lst[i]:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">            return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> False</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#7F848E;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic;">    # 如果没有发现任何不符合升序的情况，返回True</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66;"> True</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_1-4-2-如何打乱列表" tabindex="-1"><a class="header-anchor" href="#_1-4-2-如何打乱列表"><span>1.4.2 如何打乱列表</span></a></h4>`,26),B=i("code",null,"random.shuffle()",-1),c=i("code",null,"random.sample()",-1),y=i("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"--shiki-light":"#24292e","--shiki-dark":"#abb2bf","--shiki-light-bg":"#fff","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes github-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}},"import"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}}," random")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"mylist "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}}," ["),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#D19A66"}},"1"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},", "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#D19A66"}},"2"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},", "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#D19A66"}},"4"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},", "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#D19A66"}},"6"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},", "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#D19A66"}},"8"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"]")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"random."),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#61AFEF"}},"shuffle"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"(mylist)")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#56B6C2"}},"print"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"(mylist)")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1),A=i("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python","data-title":"python",style:{"--shiki-light":"#24292e","--shiki-dark":"#abb2bf","--shiki-light-bg":"#fff","--shiki-dark-bg":"#282c34"}},[i("pre",{class:"shiki shiki-themes github-light one-dark-pro vp-code"},[i("code",null,[i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#C678DD"}},"import"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}}," random")]),s(`
`),i("span",{class:"line"}),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"mylist "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}}," ["),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#D19A66"}},"1"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},", "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#D19A66"}},"2"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},", "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#D19A66"}},"4"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},", "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#D19A66"}},"6"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},", "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#D19A66"}},"8"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"]")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"shuffle_list "),i("span",{style:{"--shiki-light":"#D73A49","--shiki-dark":"#56B6C2"}},"="),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}}," random."),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#61AFEF"}},"sample"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"(mylist, "),i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#56B6C2"}},"len"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"(mylist))")]),s(`
`),i("span",{class:"line"},[i("span",{style:{"--shiki-light":"#005CC5","--shiki-dark":"#56B6C2"}},"print"),i("span",{style:{"--shiki-light":"#24292E","--shiki-dark":"#ABB2BF"}},"(shuffle_list)")])])]),i("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"}),i("div",{class:"line-number"})])],-1);function u(C,m){const t=h("CodeTabs");return d(),k("div",null,[g,p(t,{id:"188",data:[{id:"使用 <code v-pre>random.shuffle()</code>（推荐）"},{id:"使用 <code v-pre>random.sample()</code>（不修改列表）"}]},{title0:a(({value:l,isActive:n})=>[s("使用 "),B,s("（推荐）")]),title1:a(({value:l,isActive:n})=>[s("使用 "),c,s("（不修改列表）")]),tab0:a(({value:l,isActive:n})=>[y]),tab1:a(({value:l,isActive:n})=>[A]),_:1})])}const v=e(o,[["render",u],["__file","Week02_sorting.html.vue"]]),F=JSON.parse('{"path":"/zh/Advanced_Algorithms/Week02_sorting.html","title":"高级算法——第2周ppt——排序算法","lang":"zh-CN","frontmatter":{"title":"高级算法——第2周ppt——排序算法","icon":"python","date":"2024-09-08T19:26:19.000Z","author":"XiaoXianYue","isOriginal":true,"category":["大三上","高级算法"],"tag":["大三上","高级算法"],"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"description":"0. 目录 bogosort insertion sort bubble sort merge sort quick sort 1. Bogosort 这是一个笑话算法，随机洗牌一个列表； 如果洗牌没有按正确顺序排列，就再洗一次 继续洗牌，直到得到一个排序列表！ 查看 python 代码 1.1 前置知识 随机库：random random.randi...","head":[["meta",{"property":"og:url","content":"https://bougiemoonintaurus/zh/Advanced_Algorithms/Week02_sorting.html"}],["meta",{"property":"og:site_name","content":"奶酪奶酪"}],["meta",{"property":"og:title","content":"高级算法——第2周ppt——排序算法"}],["meta",{"property":"og:description","content":"0. 目录 bogosort insertion sort bubble sort merge sort quick sort 1. Bogosort 这是一个笑话算法，随机洗牌一个列表； 如果洗牌没有按正确顺序排列，就再洗一次 继续洗牌，直到得到一个排序列表！ 查看 python 代码 1.1 前置知识 随机库：random random.randi..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-09T13:38:21.000Z"}],["meta",{"property":"article:author","content":"XiaoXianYue"}],["meta",{"property":"article:tag","content":"大三上"}],["meta",{"property":"article:tag","content":"高级算法"}],["meta",{"property":"article:published_time","content":"2024-09-08T19:26:19.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-09T13:38:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"高级算法——第2周ppt——排序算法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-09-08T19:26:19.000Z\\",\\"dateModified\\":\\"2024-09-09T13:38:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XiaoXianYue\\"}]}"]]},"headers":[{"level":2,"title":"0. 目录","slug":"_0-目录","link":"#_0-目录","children":[]},{"level":2,"title":"1. Bogosort","slug":"_1-bogosort","link":"#_1-bogosort","children":[{"level":3,"title":"1.1 前置知识","slug":"_1-1-前置知识","link":"#_1-1-前置知识","children":[]},{"level":3,"title":"1.2 前置知识查漏补缺","slug":"_1-2-前置知识查漏补缺","link":"#_1-2-前置知识查漏补缺","children":[]},{"level":3,"title":"1.3 排序原理","slug":"_1-3-排序原理","link":"#_1-3-排序原理","children":[]},{"level":3,"title":"1.4 功能拆解","slug":"_1-4-功能拆解","link":"#_1-4-功能拆解","children":[{"level":4,"title":"1.4.1 如何判断一个列表是否有序？","slug":"_1-4-1-如何判断一个列表是否有序","link":"#_1-4-1-如何判断一个列表是否有序","children":[]},{"level":4,"title":"1.4.2 如何打乱列表","slug":"_1-4-2-如何打乱列表","link":"#_1-4-2-如何打乱列表","children":[]}]}]}],"git":{"createdTime":1725799567000,"updatedTime":1725889101000,"contributors":[{"name":"Xiaoxianyue","email":"2310219843@qq.com","commits":2}]},"readingTime":{"minutes":2.43,"words":728},"filePathRelative":"zh/Advanced_Algorithms/Week02_sorting.md","localizedDate":"2024年9月8日","excerpt":"<h2>0. 目录</h2>\\n<ul>\\n<li>bogosort</li>\\n<li>insertion sort</li>\\n<li>bubble sort</li>\\n<li>merge sort</li>\\n<li>quick sort</li>\\n</ul>\\n<h2>1. Bogosort</h2>\\n<ul>\\n<li>这是一个笑话算法，随机洗牌一个列表；</li>\\n<li>如果洗牌没有按正确顺序排列，就再洗一次</li>\\n<li>继续洗牌，直到得到一个排序列表！</li>\\n<li>查看 python 代码</li>\\n</ul>\\n<h3>1.1 前置知识</h3>\\n<ul>\\n<li>随机库：<code>random</code>\\n<ul>\\n<li><code>random.randint(a, b)</code></li>\\n</ul>\\n</li>\\n<li>内置函数：\\n<ul>\\n<li><code>len()</code></li>\\n<li><code>range()</code></li>\\n</ul>\\n</li>\\n<li>语法：\\n<ul>\\n<li><code>for</code></li>\\n<li><code>function</code></li>\\n<li>比较运算符</li>\\n<li>多个变量同时赋予不同值 | 引入多一个变量</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}');export{v as comp,F as data};
