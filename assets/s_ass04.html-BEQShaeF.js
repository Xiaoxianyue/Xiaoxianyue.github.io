import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as l,o}from"./app-Cd_kfShj.js";const t="/assets/image-20250311092522048-CUQPf8Hy.png",e={};function p(r,s){return o(),a("div",null,s[0]||(s[0]=[l(`<h3 id="task-01" tabindex="-1"><a class="header-anchor" href="#task-01"><span>Task 01</span></a></h3><blockquote><p>Form data 和Request Payload两种格式的区别和特点</p></blockquote><p>特性区别：</p><table><thead><tr><th>特性</th><th><strong>Form Data</strong></th><th><strong>Request Payload</strong></th></tr></thead><tbody><tr><td><strong>请求方式</strong></td><td><code>application/x-www-form-urlencoded</code> 或 <code>multipart/form-data</code></td><td><code>application/json</code> 或 <code>application/xml</code></td></tr><tr><td><strong>数据结构</strong></td><td><code>key=value&amp;key2=value2</code></td><td>结构化 JSON/XML</td></tr><tr><td><strong>是否可读</strong></td><td>人类可读，类似 URL 查询参数</td><td>需要 JSON/XML 解析</td></tr><tr><td><strong>适用于</strong></td><td>HTML 表单、简单请求、文件上传</td><td>API 请求、大量数据、结构化数据</td></tr><tr><td><strong>编码方式</strong></td><td>URL 编码</td><td>直接以 JSON/XML 形式传输</td></tr><tr><td><strong>文件上传</strong></td><td>需要 <code>multipart/form-data</code></td><td>需要 <code>base64</code> 编码或 <code>multipart</code></td></tr></tbody></table><p>使用区别：</p><ul><li><p><strong>使用 Form Data</strong></p><ul><li>传统 HTML 表单提交</li><li>需要兼容 <code>x-www-form-urlencoded</code></li><li>需要上传文件（<code>multipart/form-data</code>）</li></ul></li><li><p><strong>使用 Request Payload</strong></p><ul><li>调用 RESTful API</li><li>发送复杂的 JSON 数据，如对象和数组</li><li>需要良好的可读性和扩展性</li></ul></li></ul><p>前端开发中，如果与后端 API 交互，优先选择 JSON（Request Payload）；如果是 HTML 表单提交，则使用 Form Data！</p><h3 id="task-02" tabindex="-1"><a class="header-anchor" href="#task-02"><span>Task 02</span></a></h3><h4 id="代码" tabindex="-1"><a class="header-anchor" href="#代码"><span>代码</span></a></h4><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> requests</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> csv</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> time</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 需要爬取的网页</span></span>
<span class="line"><span style="color:#AE81FF;">BASE_URL</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &quot;https://careers.tencent.com/tencentcareer/api/post/Query&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 请求头</span></span>
<span class="line"><span style="color:#F8F8F2;">headers </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#E6DB74;">    &quot;User-Agent&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 Safari/537.36&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 存储爬取的数据</span></span>
<span class="line"><span style="color:#F8F8F2;">job_data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> []</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 爬取前 3 页</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> page </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">    params </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;pageIndex&quot;</span><span style="color:#F8F8F2;">: page,</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;pageSize&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&quot;10&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;language&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&quot;zh-cn&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;area&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&quot;cn&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 发送请求</span></span>
<span class="line"><span style="color:#F8F8F2;">    response </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> requests.get(</span><span style="color:#AE81FF;">BASE_URL</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">headers</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">headers, </span><span style="color:#FD971F;font-style:italic;">params</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">params)</span></span>
<span class="line"><span style="color:#F8F8F2;">    data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> response.json()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 确保 JSON 结构正确</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F92672;"> not</span><span style="color:#F8F8F2;"> data </span><span style="color:#F92672;">or</span><span style="color:#E6DB74;"> &quot;Data&quot;</span><span style="color:#F92672;"> not</span><span style="color:#F92672;"> in</span><span style="color:#F8F8F2;"> data </span><span style="color:#F92672;">or</span><span style="color:#E6DB74;"> &quot;Posts&quot;</span><span style="color:#F92672;"> not</span><span style="color:#F92672;"> in</span><span style="color:#F8F8F2;"> data[</span><span style="color:#E6DB74;">&quot;Data&quot;</span><span style="color:#F8F8F2;">]:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;无数据，跳过页数 </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">page</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        continue</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 遍历招聘信息</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> job </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> data[</span><span style="color:#E6DB74;">&quot;Data&quot;</span><span style="color:#F8F8F2;">][</span><span style="color:#E6DB74;">&quot;Posts&quot;</span><span style="color:#F8F8F2;">]:</span></span>
<span class="line"><span style="color:#F8F8F2;">        job_id </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> job.get(</span><span style="color:#E6DB74;">&quot;PostId&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;N/A&quot;</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># 职位 ID</span></span>
<span class="line"><span style="color:#F8F8F2;">        job_title </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> job.get(</span><span style="color:#E6DB74;">&quot;RecruitPostName&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;N/A&quot;</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># 职位名称</span></span>
<span class="line"><span style="color:#F8F8F2;">        location </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> job.get(</span><span style="color:#E6DB74;">&quot;LocationName&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;N/A&quot;</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># 工作地点</span></span>
<span class="line"><span style="color:#F8F8F2;">        salary </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> job.get(</span><span style="color:#E6DB74;">&quot;SalaryDescription&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;薪资面议&quot;</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># 薪资</span></span>
<span class="line"><span style="color:#F8F8F2;">        last_update </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> job.get(</span><span style="color:#E6DB74;">&quot;LastUpdateTime&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;N/A&quot;</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># 更新时间</span></span>
<span class="line"><span style="color:#F8F8F2;">        job_url </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> job.get(</span><span style="color:#E6DB74;">&quot;PostURL&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;N/A&quot;</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># 详情页面</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        job_data.append([job_id, job_title, location, salary, last_update, job_url])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    time.sleep(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 保存数据到 CSV</span></span>
<span class="line"><span style="color:#F8F8F2;">csv_filename </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;tencent_jobs.csv&quot;</span></span>
<span class="line"><span style="color:#F92672;">with</span><span style="color:#66D9EF;"> open</span><span style="color:#F8F8F2;">(csv_filename, </span><span style="color:#E6DB74;">&quot;w&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">newline</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&quot;&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">encoding</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&quot;utf-8&quot;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">as</span><span style="color:#F8F8F2;"> file:</span></span>
<span class="line"><span style="color:#F8F8F2;">    writer </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> csv.writer(file)</span></span>
<span class="line"><span style="color:#F8F8F2;">    writer.writerow([</span><span style="color:#E6DB74;">&quot;Post ID&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;Job Title&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;Location&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;Salary&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;Last Update&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;Job URL&quot;</span><span style="color:#F8F8F2;">])  </span><span style="color:#88846F;"># 表头</span></span>
<span class="line"><span style="color:#F8F8F2;">    writer.writerows(job_data)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;爬取完成，数据已保存至 </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">csv_filename</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="csv-文件" tabindex="-1"><a class="header-anchor" href="#csv-文件"><span>.csv 文件</span></a></h4><figure><img src="`+t+'" alt="image-20250311092522048" tabindex="0" loading="lazy"><figcaption>image-20250311092522048</figcaption></figure>',12)]))}const F=n(e,[["render",p]]),d=JSON.parse('{"path":"/zh/Big_Data/s_ass04.html","title":"大数据小作业 05","lang":"zh-CN","frontmatter":{"title":"大数据小作业 05","icon":"alias","date":"2025-03-10T10:11:28.000Z","author":"XiaoXianYue","isOriginal":true,"category":["大三下","大数据"],"tag":["大三下","大数据"],"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"description":"Task 01 Form data 和Request Payload两种格式的区别和特点 特性区别： 使用区别： 使用 Form Data 传统 HTML 表单提交 需要兼容 x-www-form-urlencoded 需要上传文件（multipart/form-data） 使用 Request Payload 调用 RESTful API 发送复杂的...","head":[["meta",{"property":"og:url","content":"https://bougiemoonintaurus/zh/Big_Data/s_ass04.html"}],["meta",{"property":"og:site_name","content":"奶酪奶酪"}],["meta",{"property":"og:title","content":"大数据小作业 05"}],["meta",{"property":"og:description","content":"Task 01 Form data 和Request Payload两种格式的区别和特点 特性区别： 使用区别： 使用 Form Data 传统 HTML 表单提交 需要兼容 x-www-form-urlencoded 需要上传文件（multipart/form-data） 使用 Request Payload 调用 RESTful API 发送复杂的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-19T17:01:16.000Z"}],["meta",{"property":"article:author","content":"XiaoXianYue"}],["meta",{"property":"article:tag","content":"大三下"}],["meta",{"property":"article:tag","content":"大数据"}],["meta",{"property":"article:published_time","content":"2025-03-10T10:11:28.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-19T17:01:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"大数据小作业 05\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-10T10:11:28.000Z\\",\\"dateModified\\":\\"2025-03-19T17:01:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XiaoXianYue\\"}]}"]]},"git":{"createdTime":1742403676000,"updatedTime":1742403676000,"contributors":[{"name":"Xiaoxianyue","username":"Xiaoxianyue","email":"2310219843@qq.com","commits":1,"url":"https://github.com/Xiaoxianyue"}]},"readingTime":{"minutes":1.75,"words":524},"filePathRelative":"zh/Big_Data/s_ass04.md","localizedDate":"2025年3月10日","excerpt":"<h3>Task 01</h3>\\n<blockquote>\\n<p>Form data 和Request Payload两种格式的区别和特点</p>\\n</blockquote>\\n<p>特性区别：</p>\\n<table>\\n<thead>\\n<tr>\\n<th>特性</th>\\n<th><strong>Form Data</strong></th>\\n<th><strong>Request Payload</strong></th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td><strong>请求方式</strong></td>\\n<td><code>application/x-www-form-urlencoded</code> 或 <code>multipart/form-data</code></td>\\n<td><code>application/json</code> 或 <code>application/xml</code></td>\\n</tr>\\n<tr>\\n<td><strong>数据结构</strong></td>\\n<td><code>key=value&amp;key2=value2</code></td>\\n<td>结构化 JSON/XML</td>\\n</tr>\\n<tr>\\n<td><strong>是否可读</strong></td>\\n<td>人类可读，类似 URL 查询参数</td>\\n<td>需要 JSON/XML 解析</td>\\n</tr>\\n<tr>\\n<td><strong>适用于</strong></td>\\n<td>HTML 表单、简单请求、文件上传</td>\\n<td>API 请求、大量数据、结构化数据</td>\\n</tr>\\n<tr>\\n<td><strong>编码方式</strong></td>\\n<td>URL 编码</td>\\n<td>直接以 JSON/XML 形式传输</td>\\n</tr>\\n<tr>\\n<td><strong>文件上传</strong></td>\\n<td>需要 <code>multipart/form-data</code></td>\\n<td>需要 <code>base64</code> 编码或 <code>multipart</code></td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{F as comp,d as data};
