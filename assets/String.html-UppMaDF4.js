import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as l,o as p}from"./app-C6Ab6rwu.js";const e="/assets/b91944bbe88c00190166f500a543104-D4UJmsso.png",o="/assets/23721ca8bc5620c4e9001d2ad1d0013-Bn7bv_B6.png",i="/assets/90c25a8d38b54b7d64af82f7ac1366a-4OyRAKga.png",t="/assets/6496cebcba5eb5321684ba37e3a0fda-BHOUJAR2.png",c="/assets/0718bfcdda7aaae1be241b287e08df8-DkvHsRSM.png",r="/assets/image-20240320135643853-BTJnekeh.png",F={};function d(y,s){return p(),a("div",null,s[0]||(s[0]=[l('<h2 id="_1-字符串的定义" tabindex="-1"><a class="header-anchor" href="#_1-字符串的定义"><span>1. 字符串的定义</span></a></h2><p>字符串是由字母，数字和特殊字符组成的序列。</p><figure><img src="'+e+`" alt="b91944bbe88c00190166f500a543104" tabindex="0" loading="lazy"><figcaption>b91944bbe88c00190166f500a543104</figcaption></figure><h2 id="_2-创建字符串" tabindex="-1"><a class="header-anchor" href="#_2-创建字符串"><span>2. 创建字符串</span></a></h2><p>如何创建字符串？</p><p>——使用<span style="color:pink;">单引号，双引号</span>和<span style="color:pink;">三引号</span></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">name </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;shelly&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">number </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;110&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">paragraph </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;&#39;&#39;hello, shelly!</span></span>
<span class="line"><span style="color:#E6DB74;">hello, world&#39;&#39;&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">paragraph_two </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;&quot;&quot;hello, shelly!</span></span>
<span class="line"><span style="color:#E6DB74;">hello, world&quot;&quot;&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-1为什么python同时支持三种创建字符串的方法" tabindex="-1"><a class="header-anchor" href="#_2-1为什么python同时支持三种创建字符串的方法"><span>2.1<strong>为什么Python同时支持三种创建字符串的方法？</strong></span></a></h3><p><strong>原因一：（单双引号混用）</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;I am a coconut&#39;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>但是英文可以缩写如下:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;I&#39;</span><span style="color:#F8F8F2;">m a coconut</span><span style="color:#E6DB74;">&#39;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;"> File </span><span style="color:#E6DB74;">&quot;C:\\Coder\\Lesson</span><span style="color:#AE81FF;">\\1</span><span style="color:#E6DB74;">.py&quot;</span><span style="color:#F8F8F2;">, line </span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">    string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;I&#39;</span><span style="color:#F8F8F2;">m a coconut</span><span style="color:#E6DB74;">&#39;</span></span>
<span class="line"><span style="color:#F92672;">                           ^</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">SyntaxError</span><span style="color:#F8F8F2;">: unterminated string literal (detected at line </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为开头是单引号，所以python会寻找下一个出现的单引号进行匹配，而第一次出现的单引号不在字符串末尾，所以导致整个字符串异常。（没有完全包裹字符串内容）</p><p>如何解决上述内容？——使用双引号。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;I&#39;m a coconut&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">I</span><span style="color:#E6DB74;">&#39;m a coconut</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>原因二：（三引号可以原样输出多行代码）</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">我们有时候不仅仅要看选择项以内的答案，也要去思考选择项以外的答案。——AI悦创</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">浅者见浅，深者见深——黄家宝</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">起的最早的是理想主义者，跑的最快的是骗子，而胆子最大的是那些冒险家，害怕错过一切，疯狂往里冲的是韭菜，而真正的成功者，可能还没有入场。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">先实现功能，再去优化，否则一切会很乱。——AI悦创</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">凡是你不能清晰写下来的东西，都是你还没有真正理解的东西</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们要将其放入字符串：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;我们有时候不仅仅要看选择项以内的答案，也要去思考选择项以外的答案。——AI悦创</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">浅者见浅，深者见深——黄家宝</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">起的最早的是理想主义者，跑的最快的是骗子，而胆子最大的是那些冒险家，害怕错过一切，疯狂往里冲的是韭菜，而真正的成功者，可能还没有入场。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">先实现功能，再去优化，否则一切会很乱。——AI悦创</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">凡是你不能清晰写下来的东西，都是你还没有真正理解的东西</span><span style="color:#E6DB74;">&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">File </span><span style="color:#E6DB74;">&quot;C:\\Coder\\Lesson</span><span style="color:#AE81FF;">\\1</span><span style="color:#E6DB74;">.py&quot;</span><span style="color:#F8F8F2;">, line </span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">    string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;我们有时候不仅仅要看选择项以内的答案，也要去思考选择项以外的答案。——AI悦创</span></span>
<span class="line"><span style="color:#F92672;">             ^</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">SyntaxError</span><span style="color:#F8F8F2;">: unterminated string literal (detected at line </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">进程已结束，退出代码为 </span><span style="color:#AE81FF;">1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>多行代码放入双引号，输出会报错。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;我们有时候不仅仅要看选择项以内的答案，也要去思考选择项以外的答案。——AI悦创</span><span style="color:#AE81FF;">\\</span></span>
<span class="line"><span style="color:#AE81FF;">\\</span></span>
<span class="line"><span style="color:#E6DB74;">浅者见浅，深者见深——黄家宝</span><span style="color:#AE81FF;">\\</span></span>
<span class="line"><span style="color:#AE81FF;">\\</span></span>
<span class="line"><span style="color:#E6DB74;">起的最早的是理想主义者，跑的最快的是骗子，而胆子最大的是那些冒险家，害怕错过一切，疯狂往里冲的是韭菜，而真正的成功者，可能还没有入场。</span><span style="color:#AE81FF;">\\</span></span>
<span class="line"><span style="color:#AE81FF;">\\</span></span>
<span class="line"><span style="color:#E6DB74;">先实现功能，再去优化，否则一切会很乱。——AI悦创</span><span style="color:#AE81FF;">\\</span></span>
<span class="line"><span style="color:#AE81FF;">\\</span></span>
<span class="line"><span style="color:#E6DB74;">凡是你不能清晰写下来的东西，都是你还没有真正理解的东西&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">我们有时候不仅仅要看选择项以内的答案，也要去思考选择项以外的答案。——AI悦创浅者见浅，深者见深——黄家宝起的最早的是理想主义者，跑的最快的是骗子，而胆子最大的是那些冒险家，害怕错过一切，疯狂往里冲的是韭菜，而真正的成功者，可能还没有入场。先实现功能，再去优化，否则一切会很乱。——AI悦创凡是你不能清晰写下来的东西，都是你还没有真正理解的东西</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>还是双引号的情况，行后打\\，输出连成一行。</p><p>要想原样输出：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;&#39;&#39;我们有时候不仅仅要看选择项以内的答案，也要去思考选择项以外的答案。——AI悦创</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6DB74;">浅者见浅，深者见深——黄家宝</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6DB74;">起的最早的是理想主义者，跑的最快的是骗子，而胆子最大的是那些冒险家，害怕错过一切，疯狂往里冲的是韭菜，而真正的成功者，可能还没有入场。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6DB74;">先实现功能，再去优化，否则一切会很乱。——AI悦创</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E6DB74;">凡是你不能清晰写下来的东西，都是你还没有真正理解的东&#39;&#39;&#39;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">我们有时候不仅仅要看选择项以内的答案，也要去思考选择项以外的答案。——AI悦创</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">浅者见浅，深者见深——黄家宝</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">起的最早的是理想主义者，跑的最快的是骗子，而胆子最大的是那些冒险家，害怕错过一切，疯狂往里冲的是韭菜，而真正的成功者，可能还没有入场。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">先实现功能，再去优化，否则一切会很乱。——AI悦创</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">凡是你不能清晰写下来的东西，都是你还没有真正理解的东</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">进程已结束，退出代码为 </span><span style="color:#AE81FF;">0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>由此发现，三引号可以原样输出。</p><p>可以从上面的输出可知，原本什么格式，输出就是什么格式。「原样输出」「三个单引号的效果和上面一样」</p><ul><li><strong><span style="color:orange;">三个单引号或者三个双引号，实现原样输出。</span></strong></li><li><strong><span style="color:orange;">多行注释</span></strong></li><li><strong><span style="color:orange;">单双三引号混用</span></strong>（代码略）</li><li><img src="`+o+`" alt="23721ca8bc5620c4e9001d2ad1d0013" tabindex="0" loading="lazy"><figcaption>23721ca8bc5620c4e9001d2ad1d0013</figcaption></li></ul><h2 id="_3-字符串长度" tabindex="-1"><a class="header-anchor" href="#_3-字符串长度"><span>3.字符串长度</span></a></h2><p>如何获取一个字符串长度——使用 len()</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">p </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Hello,Coconut!&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(p))</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">14</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在获取字符串长度时，从数字1开始数。</p><h2 id="_4-字符串中的字符获取" tabindex="-1"><a class="header-anchor" href="#_4-字符串中的字符获取"><span>4.字符串中的字符获取</span></a></h2><h3 id="_4-1-获取单个字符" tabindex="-1"><a class="header-anchor" href="#_4-1-获取单个字符"><span>4.1 获取单个字符</span></a></h3><p>输出c</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;coconut&quot;</span></span>
<span class="line"><span style="color:#88846F;">#获取单个字符</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">c</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>三种输出t的方法</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;coconut&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;coconut&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[</span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;coconut&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[</span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(string) </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-2-提取多个连续的字符串-子字符串" tabindex="-1"><a class="header-anchor" href="#_4-2-提取多个连续的字符串-子字符串"><span>4.2 提取多个连续的字符串[子字符串]</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;coconut&#39;</span></span>
<span class="line"><span style="color:#E6DB74;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E6DB74;">语法: string = &quot;bornforthis&quot;</span></span>
<span class="line"><span style="color:#E6DB74;">select = string[start: end]</span></span>
<span class="line"><span style="color:#E6DB74;">PS: end 记得 +1, 因为最后一个不算</span></span>
<span class="line"><span style="color:#E6DB74;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">:</span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">coconu</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-3-获取多个不连续字符" tabindex="-1"><a class="header-anchor" href="#_4-3-获取多个不连续字符"><span>4.3 获取多个不连续字符</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F44747;">12345678</span></span>
<span class="line"><span style="color:#E6DB74;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#E6DB74;">语法: string = &quot;0123456789&quot;</span></span>
<span class="line"><span style="color:#E6DB74;">select = string[start: end: sep]</span></span>
<span class="line"><span style="color:#E6DB74;">PS: end 记得 +1</span></span>
<span class="line"><span style="color:#E6DB74;">&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">:</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">:</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">0</span><span style="color:#F44747;">2468</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里我们把[0:10:2]换成[ : :2]，发现输出结果还一样。故可知，默认开头和结尾。</p><h3 id="_4-5-字符串倒序" tabindex="-1"><a class="header-anchor" href="#_4-5-字符串倒序"><span>4.5 字符串倒序</span></a></h3><h4 id="_4-5-1-实现" tabindex="-1"><a class="header-anchor" href="#_4-5-1-实现"><span>4.5.1 实现</span></a></h4><p>字符串的第三个位置，控制的是字符提取的方向。默认为正数 1，如果我们改成 -1，则会变成反方向。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>正负控制方向，数字大小控制步长。</p></div><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;bornforthis&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[::</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 输出</span></span>
<span class="line"><span style="color:#F8F8F2;">sihtrofnrob</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-5-2存在的问题" tabindex="-1"><a class="header-anchor" href="#_4-5-2存在的问题"><span>4.5.2存在的问题</span></a></h4><h4 id="_4-5-2-存在的问题" tabindex="-1"><a class="header-anchor" href="#_4-5-2-存在的问题"><span>4.5.2 存在的问题</span></a></h4><div class="hint-container info"><p class="hint-container-title">思考🤔</p><p>上面代码 <code>string[::-1]</code> 前两位省略了什么数字？尝试填写上去。</p></div><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;bornforthis&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">:</span><span style="color:#AE81FF;">11</span><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样不会得到结果也不会报错。</p><p>why？</p><figure><img src="`+i+`" alt="90c25a8d38b54b7d64af82f7ac1366a" tabindex="0" loading="lazy"><figcaption>90c25a8d38b54b7d64af82f7ac1366a</figcaption></figure><p>怎么解决？</p><h4 id="_4-5-3-解决方法" tabindex="-1"><a class="header-anchor" href="#_4-5-3-解决方法"><span>4.5.3 解决方法</span></a></h4><h5 id="_4-5-3-1-方法一-调换位置" tabindex="-1"><a class="header-anchor" href="#_4-5-3-1-方法一-调换位置"><span>4.5.3.1 方法一：调换位置</span></a></h5><ul><li><p>能否解决：可以</p></li><li><p>存在什么问题?少一个字母。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;bornforthis&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[</span><span style="color:#AE81FF;">11</span><span style="color:#F8F8F2;">:</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">sihtrofnro</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>为什么少一个字母？</p><p>——存在一个悖论，因为结束是0，但是0+1时是1，1又代表了从左往右数第二个字母。故而+1是无法解决和实现了。</p><p>但是，我们可以利用不写结尾，得到最后一个缺失的字符。 string[11::-1]。</p><h5 id="_4-5-3-2-方法二-重新开始写结尾" tabindex="-1"><a class="header-anchor" href="#_4-5-3-2-方法二-重新开始写结尾"><span>4.5.3.2 方法二：重新开始写结尾</span></a></h5><p>想想字符串的有序性，从右到左。</p><p>为什么要纠结前面两个空的数字是多少？——为了之后的到某一部分的字符串倒序。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;bornforthis&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">12</span><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">sihtrofnrob</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+t+`" alt="6496cebcba5eb5321684ba37e3a0fda" tabindex="0" loading="lazy"><figcaption>6496cebcba5eb5321684ba37e3a0fda</figcaption></figure><p>小试牛刀：获取rofn</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;bornforthis&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">select </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(select)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-字符串的内置方法" tabindex="-1"><a class="header-anchor" href="#_5-字符串的内置方法"><span>5. 字符串的内置方法</span></a></h2><h3 id="_5-1-upper" tabindex="-1"><a class="header-anchor" href="#_5-1-upper"><span>5.1 .upper（）</span></a></h3><p>将字符串内容全部转成大写。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;taurus&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">upper_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.upper()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(upper_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">TAURUS</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-2-lower" tabindex="-1"><a class="header-anchor" href="#_5-2-lower"><span>5.2 .lower()</span></a></h3><p>将字符串内容全部转成小写。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;SHERRY&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">lower_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.lower()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(lower_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">sherry</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-3-capitalize" tabindex="-1"><a class="header-anchor" href="#_5-3-capitalize"><span>5.3 .capitalize()</span></a></h3><p>将字符串首字母，转化成大写。【只对第一个字母大写，其他的不变】</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;moon in taurus&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">capitalize_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.capitalize()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(capitalize_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">Moon </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> taurus</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-4-title" tabindex="-1"><a class="header-anchor" href="#_5-4-title"><span>5.4 .title()</span></a></h3><p>将字符串中的每个单词的首字母，转换成大写。（不仅如此，它还会把单词中非首个字符的字符转化成小写）</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;moon in taurus&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">title_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.title()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(title_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">Moon In Taurus</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#不管是什么间隔，都会转成首字母大写。</span></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;moon-in-taurus&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">title_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.title()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(title_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">Moon</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">In</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">Taurus</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-5-startswith" tabindex="-1"><a class="header-anchor" href="#_5-5-startswith"><span>5.5 .startswith()</span></a></h3><p>检测字符串是不是以特定字符或单词开头，返回布尔值。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;sherry&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">startswith_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.startswith(</span><span style="color:#E6DB74;">&quot;s&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(startswith_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;sherry&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">startswith_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.startswith(</span><span style="color:#E6DB74;">&quot;a&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(startswith_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">False</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;sherry&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">startswith_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.startswith(</span><span style="color:#E6DB74;">&quot;sw&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(startswith_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">False</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">s1 </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;aaa aB By yH HfdW WE&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">new_s1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> s1.startswith(</span><span style="color:#E6DB74;">&#39;aaa &#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(new_s1)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">True</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_5-6-endswith" tabindex="-1"><a class="header-anchor" href="#_5-6-endswith"><span>5.6 .endswith()</span></a></h3><p>检测字符串是不就是以特定单词或字符结尾，返回布尔值。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;taurus&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">endswith_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.endswith(</span><span style="color:#E6DB74;">&quot;s&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(endswith_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;taurus&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">endswith_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.endswith(</span><span style="color:#E6DB74;">&quot;us&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(endswith_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;taurus&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">endswith_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.endswith(</span><span style="color:#E6DB74;">&quot;u&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(endswith_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">False</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_5-7-count" tabindex="-1"><a class="header-anchor" href="#_5-7-count"><span>5.7 .count()</span></a></h3><p>计算特定字符或单词在目标字符串中存在的次数</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;taurus&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">count_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.count(</span><span style="color:#E6DB74;">&quot;u&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(count_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;taurus&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">count_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.count(</span><span style="color:#E6DB74;">&quot;au&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(count_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;taurus&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">count_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.count(</span><span style="color:#E6DB74;">&quot;d&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(count_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_5-8-find" tabindex="-1"><a class="header-anchor" href="#_5-8-find"><span>5.8 .find()</span></a></h3><p>寻找目标字符或单词在特定字符串中，第一次出现的下标。「也就是出现重复，也只是返回第一次出现的下标」如果是查找单词，那么 find() 返回目标单词的第一个字符的下标。</p><p>如果，查询的字符或单词不存在，则返回 -1。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;taurus&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">find_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.find(</span><span style="color:#E6DB74;">&quot;t&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(find_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;taurus&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">find_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.find(</span><span style="color:#E6DB74;">&quot;b&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(find_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;moonintaurus&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">find_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.find(</span><span style="color:#E6DB74;">&quot;in&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(find_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">4</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;moonintaurus&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">find_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.find(</span><span style="color:#E6DB74;">&quot;for&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(find_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_5-9-index" tabindex="-1"><a class="header-anchor" href="#_5-9-index"><span>5.9 .index()</span></a></h3><p>寻找目标字符或单词在特定字符串中，第一次出现的下标。如果是查找单词，那么 index() 返回目标单词的第一个字符的下标。</p><p>如果，查询的字符或单词不存在，则报错。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;moonintaurus&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">index_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.index(</span><span style="color:#E6DB74;">&quot;i&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(index_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">4</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;moonintaurus&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">index_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.index(</span><span style="color:#E6DB74;">&quot;b&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(index_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">Traceback (most recent call last):</span></span>
<span class="line"><span style="color:#F8F8F2;">  File </span><span style="color:#E6DB74;">&quot;C:\\Coder\\Lesson</span><span style="color:#AE81FF;">\\1</span><span style="color:#E6DB74;">.py&quot;</span><span style="color:#F8F8F2;">, line </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">in</span><span style="color:#F92672;"> &lt;</span><span style="color:#F8F8F2;">module</span><span style="color:#F92672;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    index_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.index(</span><span style="color:#E6DB74;">&quot;b&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">ValueError</span><span style="color:#F8F8F2;">: substring </span><span style="color:#F92672;">not</span><span style="color:#F8F8F2;"> found</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;moonintaurus&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">index_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.index(</span><span style="color:#E6DB74;">&quot;moon&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(index_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;moonintaurus&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">index_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.index(</span><span style="color:#E6DB74;">&quot;sza&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(index_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">Traceback (most recent call last):</span></span>
<span class="line"><span style="color:#F8F8F2;">  File </span><span style="color:#E6DB74;">&quot;C:\\Coder\\Lesson</span><span style="color:#AE81FF;">\\1</span><span style="color:#E6DB74;">.py&quot;</span><span style="color:#F8F8F2;">, line </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">in</span><span style="color:#F92672;"> &lt;</span><span style="color:#F8F8F2;">module</span><span style="color:#F92672;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    index_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.index(</span><span style="color:#E6DB74;">&quot;sza&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">ValueError</span><span style="color:#F8F8F2;">: substring </span><span style="color:#F92672;">not</span><span style="color:#F8F8F2;"> found</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_5-10-isdigit" tabindex="-1"><a class="header-anchor" href="#_5-10-isdigit"><span>5.10 .isdigit()</span></a></h3><p>判断字符串是不是纯数字字符串，字符串中但凡有一个字符是非数字，则返回False</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;20040518&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">isdigit_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.isdigit()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(isdigit_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;2004 0518&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">isdigit_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.isdigit()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(isdigit_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">False</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-11-isalpha" tabindex="-1"><a class="header-anchor" href="#_5-11-isalpha"><span>5.11 .isalpha()</span></a></h3><p>判断字符串是不是纯字母字符串，字符串中但凡有一个非字母的，则返回False</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;taurus&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">isalpha_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.isalpha()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(isalpha_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot; taurus&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">isalpha_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.isalpha()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(isalpha_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">False</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-12-isalnum" tabindex="-1"><a class="header-anchor" href="#_5-12-isalnum"><span>5.12 .isalnum()</span></a></h3><p>判断字符串是不是纯数字或纯字母、纯数字字母字符串，字符串中但凡出现非数字、字母元素，则返回 False。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;1234567&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">isalnum_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.isalnum()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(isalnum_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;moon&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">isalnum_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.isalnum()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(isalnum_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;moon20040518&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">isalnum_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.isalnum()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(isalnum_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;moon 20040518&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">isalnum_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.isalnum()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(isalnum_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">False</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_5-13-isupper" tabindex="-1"><a class="header-anchor" href="#_5-13-isupper"><span>5.13 .isupper()</span></a></h3><p>判断字符串中的字符否全大写，全大写则返回 True，否则返回 False。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;MOON&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">isupper_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.isupper()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(isupper_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;MOON123[]&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">isupper_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.isupper()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(isupper_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;MOOn123[]&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">isupper_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.isupper()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(isupper_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">False</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;moon123[]&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">isupper_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.isupper()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(isupper_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">False</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_5-14-islower" tabindex="-1"><a class="header-anchor" href="#_5-14-islower"><span>5.14 .islower()</span></a></h3><p>判断字符串是不分全小写，全小写则返回 True，否则返回 False。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;moon&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">islower_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.islower()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(islower_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;moon123#@&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">islower_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.islower()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(islower_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;moon123#@IN&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">islower_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.islower()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(islower_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">False</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_5-15-isspace" tabindex="-1"><a class="header-anchor" href="#_5-15-isspace"><span>5.15 .isspace()</span></a></h3><p>判断字符串是否为纯空格，多少个空格都可以。纯空格则返回 True，否则返回 False。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;     &quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">isspace_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.isspace()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(isspace_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">isspace_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.isspace()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(isspace_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">False</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-16-strip" tabindex="-1"><a class="header-anchor" href="#_5-16-strip"><span>5.16 .strip</span></a></h3><p>默认去掉目标字符串的前后空白字符，如果指定参数，则去掉指定字符。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;  moonintaurus   &quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">strip_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.strip()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;原本的字符串&quot;</span><span style="color:#F8F8F2;">,string)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;去掉前后空格的字符串&quot;</span><span style="color:#F8F8F2;">,strip_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">原本的字符串   moonintaurus   </span></span>
<span class="line"><span style="color:#F8F8F2;">去掉前后空格的字符串 moonintaurus</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;---moonintaurus---&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">strip_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.strip(</span><span style="color:#E6DB74;">&quot;-&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;原本的字符串&quot;</span><span style="color:#F8F8F2;">,string)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;去掉前后空格的字符串&quot;</span><span style="color:#F8F8F2;">,strip_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">原本的字符串 </span><span style="color:#F44747;">--</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">moonintaurus</span><span style="color:#F44747;">--</span><span style="color:#F92672;">-</span></span>
<span class="line"><span style="color:#F8F8F2;">去掉前后空格的字符串 moonintaurus</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;--- --moonintaurus-- ---&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">strip_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.strip(</span><span style="color:#E6DB74;">&quot;-&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;原本的字符串&quot;</span><span style="color:#F8F8F2;">,string)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;去掉前后空格的字符串&quot;</span><span style="color:#F8F8F2;">,strip_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">原本的字符串 </span><span style="color:#F44747;">--</span><span style="color:#F92672;">-</span><span style="color:#F44747;"> --</span><span style="color:#F8F8F2;">moonintaurus</span><span style="color:#F44747;">--</span><span style="color:#F44747;"> --</span><span style="color:#F92672;">-</span></span>
<span class="line"><span style="color:#F8F8F2;">去掉前后空格的字符串  </span><span style="color:#F44747;">--</span><span style="color:#F8F8F2;">moonintaurus</span><span style="color:#F44747;">--</span><span style="color:#88846F;"> #可以看到，只能去掉连续的减号</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#如果想要去掉减号和空格呢</span></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;--- --moonintaurus-- ---&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">strip_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.strip(</span><span style="color:#E6DB74;">&quot;- &quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;原本的字符串&quot;</span><span style="color:#F8F8F2;">,string)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;去掉前后空格的字符串&quot;</span><span style="color:#F8F8F2;">,strip_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">原本的字符串 </span><span style="color:#F44747;">--</span><span style="color:#F92672;">-</span><span style="color:#F44747;"> --</span><span style="color:#F8F8F2;">moonintaurus</span><span style="color:#F44747;">--</span><span style="color:#F44747;"> --</span><span style="color:#F92672;">-</span></span>
<span class="line"><span style="color:#F8F8F2;">去掉前后空格的字符串 moonintaurus</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_5-17-lstrip" tabindex="-1"><a class="header-anchor" href="#_5-17-lstrip"><span>5.17 .lstrip()</span></a></h3><p>默认去掉字符串左边的空白字符，如果指定参数，则去掉左边的指定字符。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;   moonintaurus-- ---&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">lstrip_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.lstrip()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;原本的字符串&quot;</span><span style="color:#F8F8F2;">,string)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;去掉前后空格的字符串&quot;</span><span style="color:#F8F8F2;">,lstrip_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">原本的字符串    moonintaurus</span><span style="color:#F44747;">--</span><span style="color:#F44747;"> --</span><span style="color:#F92672;">-</span></span>
<span class="line"><span style="color:#F8F8F2;">去掉前后空格的字符串 moonintaurus</span><span style="color:#F44747;">--</span><span style="color:#F44747;"> --</span><span style="color:#F92672;">-</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;-----moonintaurus-----&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">lstrip_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.lstrip(</span><span style="color:#E6DB74;">&quot;-&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;原本的字符串&quot;</span><span style="color:#F8F8F2;">,string)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;去掉前后空格的字符串&quot;</span><span style="color:#F8F8F2;">,lstrip_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">原本的字符串 </span><span style="color:#F44747;">----</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">moonintaurus</span><span style="color:#F44747;">----</span><span style="color:#F92672;">-</span></span>
<span class="line"><span style="color:#F8F8F2;">去掉前后空格的字符串 moonintaurus</span><span style="color:#F44747;">----</span><span style="color:#F92672;">-</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;--- --moonintaurus-- ---&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">lstrip_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.lstrip(</span><span style="color:#E6DB74;">&quot;- &quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;原本的字符串&quot;</span><span style="color:#F8F8F2;">,string)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;去掉前后空格的字符串&quot;</span><span style="color:#F8F8F2;">,lstrip_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">原本的字符串 </span><span style="color:#F44747;">--</span><span style="color:#F92672;">-</span><span style="color:#F44747;"> --</span><span style="color:#F8F8F2;">moonintaurus</span><span style="color:#F44747;">--</span><span style="color:#F44747;"> --</span><span style="color:#F92672;">-</span></span>
<span class="line"><span style="color:#F8F8F2;">去掉前后空格的字符串 moonintaurus</span><span style="color:#F44747;">--</span><span style="color:#F44747;"> --</span><span style="color:#F92672;">-</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_5-18-rstrip" tabindex="-1"><a class="header-anchor" href="#_5-18-rstrip"><span>5.18 .rstrip()</span></a></h3><p>默认去掉字符串右边的空白字符，如果指定参数，则去掉右边的指定字符。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;   bornforthis   &quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">rstrip_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.rstrip()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;原本的字符串:&quot;</span><span style="color:#F8F8F2;">, string)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;去掉右边空白字符后:&quot;</span><span style="color:#F8F8F2;">, rstrip_string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># ---output---</span></span>
<span class="line"><span style="color:#F8F8F2;">原本的字符串:    bornforthis   </span></span>
<span class="line"><span style="color:#F8F8F2;">去掉右边空白字符后:    bornforthis</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;----bornforthis----&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">rstrip_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.rstrip(</span><span style="color:#E6DB74;">&#39;-&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;原本的字符串:&quot;</span><span style="color:#F8F8F2;">, string)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;去掉右边 &#39;-&#39; 后:&quot;</span><span style="color:#F8F8F2;">, rstrip_string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># ---output---</span></span>
<span class="line"><span style="color:#F8F8F2;">原本的字符串: </span><span style="color:#F44747;">----</span><span style="color:#F8F8F2;">bornforthis</span><span style="color:#F44747;">----</span></span>
<span class="line"><span style="color:#F8F8F2;">去掉右边 </span><span style="color:#E6DB74;">&#39;-&#39;</span><span style="color:#F8F8F2;"> 后: </span><span style="color:#F44747;">----</span><span style="color:#F8F8F2;">bornforthis</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;----bornforthis-- --&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">rstrip_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.rstrip(</span><span style="color:#E6DB74;">&#39;- &#39;</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># 不分先后顺序</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;原本的字符串:&quot;</span><span style="color:#F8F8F2;">, string)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;去掉右边 &#39;- &#39; 后:&quot;</span><span style="color:#F8F8F2;">, rstrip_string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># ---output---</span></span>
<span class="line"><span style="color:#F8F8F2;">原本的字符串: </span><span style="color:#F44747;">----</span><span style="color:#F8F8F2;">bornforthis</span><span style="color:#F44747;">--</span><span style="color:#F44747;"> --</span></span>
<span class="line"><span style="color:#F8F8F2;">去掉右边 </span><span style="color:#E6DB74;">&#39;- &#39;</span><span style="color:#F8F8F2;"> 后: </span><span style="color:#F44747;">----</span><span style="color:#F8F8F2;">bornforthis</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_5-19-replace" tabindex="-1"><a class="header-anchor" href="#_5-19-replace"><span>5.19 .replace()</span></a></h3><p>.replace(old,new,count)第一个位置传入待替换得旧字符，第二个位置传入要替换的新字符，默认替换全部，count控制替换次数。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;   moonintaurus   &quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">replace_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.replace(</span><span style="color:#E6DB74;">&#39; &#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;*&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;原本的字符串&quot;</span><span style="color:#F8F8F2;">,string)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;去掉前后空格的字符串&quot;</span><span style="color:#F8F8F2;">,replace_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">原本的字符串    moonintaurus   </span></span>
<span class="line"><span style="color:#F8F8F2;">去掉前后空格的字符串 </span><span style="color:#F92672;">***</span><span style="color:#F8F8F2;">moonintaurus</span><span style="color:#F92672;">***</span><span style="color:#88846F;">  #默认全都替换掉</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;aiaiai&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">replace_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.replace(</span><span style="color:#E6DB74;">&#39;ai&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;love&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;">#count不用加引号</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;原本的字符串&quot;</span><span style="color:#F8F8F2;">,string)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;去掉前后空格的字符串&quot;</span><span style="color:#F8F8F2;">,replace_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">原本的字符串 aiaiai</span></span>
<span class="line"><span style="color:#F8F8F2;">去掉前后空格的字符串 loveaiai</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_5-20-split" tabindex="-1"><a class="header-anchor" href="#_5-20-split"><span>5.20 .split（）</span></a></h3><p><code>.split(sep,maxsplit)</code>以特定字符进行分割，默认空壳分割。 如果传入参数sep ，则以参数进行分割。返回分割后的列表，maxsplit用于控制分割几次。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;moon in taurus&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">split_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.split()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;原本的字符串&quot;</span><span style="color:#F8F8F2;">,string)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;去掉前后空格的字符串&quot;</span><span style="color:#F8F8F2;">,split_string</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">原本的字符串 moon </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> taurus</span></span>
<span class="line"><span style="color:#F8F8F2;">去掉前后空格的字符串 [</span><span style="color:#E6DB74;">&#39;moon&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;in&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;taurus&#39;</span><span style="color:#F8F8F2;">]    </span><span style="color:#88846F;">#默认空格分割</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#FD971F;font-style:italic;">string</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &quot;moon-in-taurus&quot;</span></span>
<span class="line"><span style="color:#FD971F;font-style:italic;">split_string</span><span style="color:#F92672;"> =</span><span style="color:#F8F8F2;"> string.split(</span><span style="color:#E6DB74;">&#39;-&#39;</span><span style="color:#F8F8F2;">)    </span><span style="color:#88846F;">#以-分割</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;原本的字符串&quot;</span><span style="color:#F8F8F2;">,string)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;去掉前后空格的字符串&quot;</span><span style="color:#F8F8F2;">,split_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">原本的字符串 moon</span><span style="color:#F92672;">-in-</span><span style="color:#F8F8F2;">taurus</span></span>
<span class="line"><span style="color:#F8F8F2;">去掉前后空格的字符串 [</span><span style="color:#E6DB74;">&#39;moon&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;in&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;taurus&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FD971F;font-style:italic;">string</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &quot;moon-in-taurus&quot;</span></span>
<span class="line"><span style="color:#FD971F;font-style:italic;">split_string</span><span style="color:#F92672;"> =</span><span style="color:#F8F8F2;"> string.split(</span><span style="color:#E6DB74;">&#39;-&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;原本的字符串&quot;</span><span style="color:#F8F8F2;">,string)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;去掉前后空格的字符串&quot;</span><span style="color:#F8F8F2;">,split_string)     </span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">原本的字符串 moon</span><span style="color:#F92672;">-in-</span><span style="color:#F8F8F2;">taurus</span></span>
<span class="line"><span style="color:#F8F8F2;">去掉前后空格的字符串 [</span><span style="color:#E6DB74;">&#39;moon&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;in-taurus&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">      </span></span>
<span class="line"><span style="color:#FD971F;font-style:italic;">string</span><span style="color:#F92672;"> =</span><span style="color:#E6DB74;"> &#39;I   am good at playing piano.&#39;</span></span>
<span class="line"><span style="color:#FD971F;font-style:italic;">list_string</span><span style="color:#F92672;"> =</span><span style="color:#F8F8F2;"> string.split(</span><span style="color:#E6DB74;">&#39; &#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(list_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#E6DB74;">&#39;I&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;am&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;good&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;at&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;playing&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;piano.&#39;</span><span style="color:#F8F8F2;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_5-21-rsplit" tabindex="-1"><a class="header-anchor" href="#_5-21-rsplit"><span>5.21 .rsplit()</span></a></h3><p><code>.rsplit(sep, maxsplit)</code> 从字符串右边进行分割，也可以传入参数「sep」，进行指定分割。返回分割后的列表。maxsplit 指定分割次数。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;moon-in-taurus&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">rsplit_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.rsplit(</span><span style="color:#E6DB74;">&#39;-&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;原本的字符串&quot;</span><span style="color:#F8F8F2;">,string)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;去掉前后空格的字符串&quot;</span><span style="color:#F8F8F2;">,rsplit_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">原本的字符串 moon </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> taurus</span></span>
<span class="line"><span style="color:#F8F8F2;">去掉前后空格的字符串 [</span><span style="color:#E6DB74;">&#39;moon&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;in&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;taurus&#39;</span><span style="color:#F8F8F2;">]  </span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;moon-in-taurus&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">rsplit_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string.rsplit(</span><span style="color:#E6DB74;">&#39;-&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;原本的字符串&quot;</span><span style="color:#F8F8F2;">,string)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;去掉前后空格的字符串&quot;</span><span style="color:#F8F8F2;">,rsplit_string</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">原本的字符串 moon</span><span style="color:#F92672;">-in-</span><span style="color:#F8F8F2;">taurus</span></span>
<span class="line"><span style="color:#F8F8F2;">去掉前后空格的字符串 [</span><span style="color:#E6DB74;">&#39;moon-in&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;taurus&#39;</span><span style="color:#F8F8F2;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_5-22-join" tabindex="-1"><a class="header-anchor" href="#_5-22-join"><span>5.22 .join()</span></a></h3><p>以特定字符是字符串间隔。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;moonintaurus&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">join_string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;-&#39;</span><span style="color:#F8F8F2;">.join(string)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;原本的字符串：&quot;</span><span style="color:#F8F8F2;">,string)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;加上间隔的字符串：&quot;</span><span style="color:#F8F8F2;">,join_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">原本的字符串： moonintaurus</span></span>
<span class="line"><span style="color:#F8F8F2;">加上间隔的字符串： m</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">o</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">o</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">n</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">i</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">n</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">t</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">a</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">u</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">r</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">u</span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;">s</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-字符串格式化" tabindex="-1"><a class="header-anchor" href="#_6-字符串格式化"><span>6. 字符串格式化</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Hi Xiaoxianyue,Welcome to Haikou&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#---output---</span></span>
<span class="line"><span style="color:#F8F8F2;">Hi Xiaoxianyue,Welcome to Haikou</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>所存在的问题：需要换一个人名或者地区，就需要重新创建一个全新的字符串。</li><li>我们希望有类似模版，让我们把不同人名，地区填写进去。而不是每个人都从头创建一个新的字符串。</li></ul><p>当然可以使用字符串的加法，大过于复杂冗长。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">str1 </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Hi &quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">str2 </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;,Welcome to &quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">str3 </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;.&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> str1 </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;Billkin&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> str2 </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;Fuzhou&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> str3</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">Hi Billkin,Welcome to Fuzhou.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这时存在一个问题：由于Python中不同的数据类型不可以直接相加，除非强制转换类型为字符串。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;money is&quot;</span><span style="color:#F92672;"> +</span><span style="color:#AE81FF;"> 190</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">Traceback (most recent call last):</span></span>
<span class="line"><span style="color:#F8F8F2;">  File </span><span style="color:#E6DB74;">&quot;C:\\Coder\\Lesson</span><span style="color:#AE81FF;">\\1</span><span style="color:#E6DB74;">.py&quot;</span><span style="color:#F8F8F2;">, line </span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">in</span><span style="color:#F92672;"> &lt;</span><span style="color:#F8F8F2;">module</span><span style="color:#F92672;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;money is&quot;</span><span style="color:#F92672;"> +</span><span style="color:#AE81FF;"> 190</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">TypeError</span><span style="color:#F8F8F2;">: can only concatenate </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">not</span><span style="color:#E6DB74;"> &quot;int&quot;</span><span style="color:#F8F8F2;">) to </span><span style="color:#66D9EF;font-style:italic;">str</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#转换后：</span></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;money is &quot;</span><span style="color:#F92672;"> +</span><span style="color:#66D9EF;font-style:italic;"> str</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">190</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">money </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> 190</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>——format 就应运而生。</p><h3 id="_6-1-format" tabindex="-1"><a class="header-anchor" href="#_6-1-format"><span>6.1 .format</span></a></h3><p>1.单个花括号{}</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Hi </span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">,Welcome to Beijing&quot;</span><span style="color:#F8F8F2;">.format(</span><span style="color:#E6DB74;">&quot;XiaoXianyue&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">Hi XiaoXianyue,Welcome to Beijing</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">template_string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Hi </span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">,Welcome to Beijing&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(template_string.format(</span><span style="color:#E6DB74;">&quot;XiaoXianyue&quot;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">Hi XiaoXianyue,Welcome to Beijing</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.一个花括号以上 [按顺序填入]</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">template_string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Hi </span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">,Welcome to </span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(template_string.format(</span><span style="color:#E6DB74;">&quot;XiaoXianyue&quot;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&quot;Beijing&quot;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">Hi XiaoXianyue,Welcome to Beijing</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Hi </span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">,Welcome to </span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">.format(</span><span style="color:#E6DB74;">&quot;Xiaoxianyue&quot;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&quot;Beijing&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">Hi XiaoXianyue,Welcome to Beijing</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3.多个花括号指定位置</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Hi </span><span style="color:#AE81FF;">{1}</span><span style="color:#E6DB74;">,Welcome to </span><span style="color:#AE81FF;">{0}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">.format(</span><span style="color:#E6DB74;">&quot;Beijing&quot;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&quot;Xiaoxianyue&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">Hi XiaoXianyue,Welcome to Beijing</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Hi </span><span style="color:#AE81FF;">{1}</span><span style="color:#E6DB74;">,Welcome to </span><span style="color:#AE81FF;">{0}</span><span style="color:#E6DB74;">&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string.format(</span><span style="color:#E6DB74;">&quot;Beijing&quot;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&quot;Xiaoxianyue&quot;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">Hi XiaoXianyue,Welcome to Beijing</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>4.参数指定</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Hi </span><span style="color:#AE81FF;">{name}</span><span style="color:#E6DB74;">,Welcome to </span><span style="color:#AE81FF;">{region}</span><span style="color:#E6DB74;">&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string.format(</span><span style="color:#FD971F;font-style:italic;">region</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&quot;Beijing&quot;</span><span style="color:#F8F8F2;">,</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&quot;Xiaoxianyue&quot;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">Hi XiaoXianyue,Welcome to Beijing</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Hi </span><span style="color:#AE81FF;">{name}</span><span style="color:#E6DB74;">,Welcome to </span><span style="color:#AE81FF;">{region}</span><span style="color:#E6DB74;">&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string.format(</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&quot;Xiaoxianyue&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">region</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&quot;Beijing&quot;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">Hi XiaoXianyue,Welcome to Beijing</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">template_string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Hi </span><span style="color:#AE81FF;">{name}</span><span style="color:#E6DB74;">,Welcome to </span><span style="color:#AE81FF;">{region}</span><span style="color:#E6DB74;">&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">new_string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> template_string.format(</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&quot;Xiaoxianyue&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">region</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&quot;Beijing&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(new_string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">Hi XiaoXianyue,Welcome to Beijing</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>5.保留指定小数位。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;my age is </span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">:.3f</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">.format(</span><span style="color:#AE81FF;">19</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">my age </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> 19.000</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;my age is </span><span style="color:#AE81FF;">{</span><span style="color:#66D9EF;font-style:italic;">:.2f</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">.format(</span><span style="color:#AE81FF;">19</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">my age </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> 19.00</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-2-f" tabindex="-1"><a class="header-anchor" href="#_6-2-f"><span>6.2 f</span></a></h3><p>1.直接读取变量</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">name </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Xiaoxianyue&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">region </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Beijing&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> f</span><span style="color:#E6DB74;">&quot;hi </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">,welcome to </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">region</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#88846F;">#与format区别：python3.6+，更简洁，省略了format的模版化</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">Hi XiaoXianyue,Welcome to Beijing</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.保留指定位小数</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">age </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 19</span></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> f</span><span style="color:#E6DB74;">&quot;My age is </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">age</span><span style="color:#66D9EF;font-style:italic;">:.3f</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">my age </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> 19.000</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-3" tabindex="-1"><a class="header-anchor" href="#_6-3"><span>6.3 %</span></a></h3><ul><li>%d: 整数</li><li>%s：字符串</li><li>%f：浮点数</li></ul><p>1.单个位置传入</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;My age is </span><span style="color:#AE81FF;">%d</span><span style="color:#E6DB74;">&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">new_s </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string </span><span style="color:#F92672;">%</span><span style="color:#AE81FF;">19</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(new_s)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;My age is </span><span style="color:#AE81FF;">%d</span><span style="color:#E6DB74;">&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string </span><span style="color:#F92672;">%</span><span style="color:#AE81FF;"> 19</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;My age is </span><span style="color:#AE81FF;">%d</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F92672;"> %</span><span style="color:#AE81FF;"> 19</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">My age </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> 19</span></span>
<span class="line"><span style="color:#F8F8F2;">My age </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> 19</span></span>
<span class="line"><span style="color:#F8F8F2;">My age </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> 19</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.多个位置传入</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;My age is </span><span style="color:#AE81FF;">%d</span><span style="color:#AE81FF;"> %s</span><span style="color:#E6DB74;">&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">new_s </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string </span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">19</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;耶耶耶&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(new_s)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;My age is </span><span style="color:#AE81FF;">%d</span><span style="color:#AE81FF;"> %s</span><span style="color:#E6DB74;">&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string </span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">19</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;耶耶耶&quot;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;My age is </span><span style="color:#AE81FF;">%d</span><span style="color:#AE81FF;"> %s</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F92672;"> %</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">19</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&quot;耶耶耶&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">My age </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> 19</span><span style="color:#F8F8F2;"> 耶耶耶</span></span>
<span class="line"><span style="color:#F8F8F2;">My age </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> 19</span><span style="color:#F8F8F2;"> 耶耶耶</span></span>
<span class="line"><span style="color:#F8F8F2;">My age </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> 19</span><span style="color:#F8F8F2;"> 耶耶耶</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>3.保留小数位</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;My age is </span><span style="color:#AE81FF;">%.3f</span><span style="color:#E6DB74;">&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">new_s </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string </span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">19.8790</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(new_s)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;My age is </span><span style="color:#AE81FF;">%.3f</span><span style="color:#E6DB74;">&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string </span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;"> (</span><span style="color:#AE81FF;">19.12345</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;My age is </span><span style="color:#AE81FF;">%.3f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F92672;"> %</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">19.45678</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(string)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">My age </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> 19.879</span></span>
<span class="line"><span style="color:#F8F8F2;">My age </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> 19.123</span></span>
<span class="line"><span style="color:#F8F8F2;">My age </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> 19.457</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-4-f-和-format-的优缺点" tabindex="-1"><a class="header-anchor" href="#_6-4-f-和-format-的优缺点"><span>6.4 f 和 format，% 的优缺点</span></a></h3><p>format 和 % 都像模版，提前做好模版后面有需要试可以直接使用；</p><p>而 f 就像在银行当中，柜员边问你边登记，不能提前做好模版。</p><h2 id="_7-字符串不可变性" tabindex="-1"><a class="header-anchor" href="#_7-字符串不可变性"><span>7. 字符串不可变性</span></a></h2><p>字符串是不可变的，不可以改变字符串中的任何元素，如需改变字符串中的元素，则需要新建一个字符串。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">s </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Hello World!&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">s[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;a&quot;</span></span>
<span class="line"><span style="color:#88846F;">#报错</span></span>
<span class="line"><span style="color:#F8F8F2;">Traceback (most recent call last):</span></span>
<span class="line"><span style="color:#F8F8F2;">  File </span><span style="color:#E6DB74;">&quot;C:\\Coder\\Lesson</span><span style="color:#AE81FF;">\\1</span><span style="color:#E6DB74;">.py&quot;</span><span style="color:#F8F8F2;">, line </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">in</span><span style="color:#F92672;"> &lt;</span><span style="color:#F8F8F2;">module</span><span style="color:#F92672;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    s[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;a&quot;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">TypeError</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;str&#39;</span><span style="color:#66D9EF;font-style:italic;"> object</span><span style="color:#F8F8F2;"> does </span><span style="color:#F92672;">not</span><span style="color:#F8F8F2;"> support item assignment</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除了使用 replace 还可以使用字符串拼接：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">s </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;Hello World!&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">news </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;a&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> s[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(news)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">aello World!</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-字符串转义" tabindex="-1"><a class="header-anchor" href="#_8-字符串转义"><span>8. 字符串转义</span></a></h2><table><thead><tr><th>转义字符</th><th>含义</th><th>例子</th></tr></thead><tbody><tr><td><code>\\\\</code></td><td>反斜杠符号，为了在字符串中得到 <code>\\</code></td><td><code>s = &quot;bor\\\\nforthis&quot;</code></td></tr><tr><td><code>\\b</code></td><td>退格，类似删除键</td><td><code>s = &quot;bornff\\borthis&quot;</code></td></tr><tr><td><code>\\n</code></td><td>换行</td><td><code>s = &quot;bornfor\\nthis&quot;</code></td></tr><tr><td><code>\\t</code></td><td>制表符</td><td><code>s = &quot;born\\tfor\\tthis&quot;</code></td></tr><tr><td><code>r</code></td><td>取消转义「R 和 r」都可以</td><td><code>s = r&quot;born\\tfor\\tthis&quot;</code></td></tr></tbody></table><p>示例代码：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">s </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;moonin</span><span style="color:#AE81FF;">\\\\</span><span style="color:#E6DB74;">taurus&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(s)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">moonin\\</span><span style="color:#F44747;">taurus</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">s </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;mooninn</span><span style="color:#AE81FF;">\\b</span><span style="color:#E6DB74;">taurus&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(s)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">moonintaurus</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">s </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;moonin</span><span style="color:#AE81FF;">\\n</span><span style="color:#E6DB74;">taurus&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(s)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">moonin</span></span>
<span class="line"><span style="color:#F8F8F2;">taurus</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">s </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;moon</span><span style="color:#AE81FF;">\\t</span><span style="color:#E6DB74;">in</span><span style="color:#AE81FF;">\\t</span><span style="color:#E6DB74;">taurus&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(s)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">moon	</span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;">	taurus    </span><span style="color:#88846F;">#间隔四个空格</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">s </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> r</span><span style="color:#E6DB74;">&quot;moon</span><span style="color:#AE81FF;">\\t</span><span style="color:#E6DB74;">in</span><span style="color:#AE81FF;">\\t</span><span style="color:#E6DB74;">taurus&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(s)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">moon\\</span><span style="color:#F44747;">tin\\ttaurus</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="_9-字符串的连接" tabindex="-1"><a class="header-anchor" href="#_9-字符串的连接"><span>9. 字符串的连接</span></a></h2><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">s1 </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;xiao&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">s2 </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;xianyue&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(s1</span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;">s2)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(s1,s2)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">xiaoxianyue</span></span>
<span class="line"><span style="color:#F8F8F2;">xiao xianyue</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">s1 </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;*-money-&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(s1 </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 10</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F92672;">*-</span><span style="color:#F8F8F2;">money</span><span style="color:#F92672;">-*-</span><span style="color:#F8F8F2;">money</span><span style="color:#F92672;">-*-</span><span style="color:#F8F8F2;">money</span><span style="color:#F92672;">-*-</span><span style="color:#F8F8F2;">money</span><span style="color:#F92672;">-*-</span><span style="color:#F8F8F2;">money</span><span style="color:#F92672;">-*-</span><span style="color:#F8F8F2;">money</span><span style="color:#F92672;">-*-</span><span style="color:#F8F8F2;">money</span><span style="color:#F92672;">-*-</span><span style="color:#F8F8F2;">money</span><span style="color:#F92672;">-*-</span><span style="color:#F8F8F2;">money</span><span style="color:#F92672;">-*-</span><span style="color:#F8F8F2;">money</span><span style="color:#F92672;">-</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">s1 </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;*-money-&quot;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(s1 </span><span style="color:#F92672;">*</span><span style="color:#AE81FF;"> 10</span><span style="color:#F8F8F2;">,</span><span style="color:#FD971F;font-style:italic;">end</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&quot;*&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F92672;">*-</span><span style="color:#F8F8F2;">money</span><span style="color:#F92672;">-*-</span><span style="color:#F8F8F2;">money</span><span style="color:#F92672;">-*-</span><span style="color:#F8F8F2;">money</span><span style="color:#F92672;">-*-</span><span style="color:#F8F8F2;">money</span><span style="color:#F92672;">-*-</span><span style="color:#F8F8F2;">money</span><span style="color:#F92672;">-*-</span><span style="color:#F8F8F2;">money</span><span style="color:#F92672;">-*-</span><span style="color:#F8F8F2;">money</span><span style="color:#F92672;">-*-</span><span style="color:#F8F8F2;">money</span><span style="color:#F92672;">-*-</span><span style="color:#F8F8F2;">money</span><span style="color:#F92672;">-*-</span><span style="color:#F8F8F2;">money</span><span style="color:#F92672;">-*</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="_10-读取用户的输入" tabindex="-1"><a class="header-anchor" href="#_10-读取用户的输入"><span>10. 读取用户的输入</span></a></h2><h3 id="_10-1-input-读取用户的输入" tabindex="-1"><a class="header-anchor" href="#_10-1-input-读取用户的输入"><span>10.1 input()读取用户的输入</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">user_input </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(user_input)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_10-2-input-使用输入提示" tabindex="-1"><a class="header-anchor" href="#_10-2-input-使用输入提示"><span>10.2 input()使用输入提示</span></a></h3><p>但是上面的代码，有点小问题：在运行的时候并不能很直观的知道，程序需要我们输入，何况非程序员用户呢？</p><figure><img src="`+c+`" alt="0718bfcdda7aaae1be241b287e08df8" tabindex="0" loading="lazy"><figcaption>0718bfcdda7aaae1be241b287e08df8</figcaption></figure><p>如何解决？——输入提示</p><p>input()函数里面支持我们写入字符串进行提示。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">s </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Enter you name: &#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;user&#39;s name:&quot;</span><span style="color:#F8F8F2;">, s)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">Enter you name: xxy</span></span>
<span class="line"><span style="color:#F8F8F2;">user</span><span style="color:#E6DB74;">&#39;s name: xxy</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+r+`" alt="image-20240320135643853" tabindex="0" loading="lazy"><figcaption>image-20240320135643853</figcaption></figure><h3 id="_10-3-input-的特点" tabindex="-1"><a class="header-anchor" href="#_10-3-input-的特点"><span>10.3 input 的特点</span></a></h3><h4 id="_10-3-1-input-得到的类型皆为字符串" tabindex="-1"><a class="header-anchor" href="#_10-3-1-input-得到的类型皆为字符串"><span>10.3.1 input（）得到的类型皆为字符串</span></a></h4><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;:&gt;&gt;&gt;&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#F8F8F2;">bornforthis</span></span>
<span class="line"><span style="color:#F8F8F2;">Out[</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">str</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;:&gt;&gt;&gt;&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#AE81FF;">12</span></span>
<span class="line"><span style="color:#F8F8F2;">Out[</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">str</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;:&gt;&gt;&gt;&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#AE81FF;">12.1</span></span>
<span class="line"><span style="color:#F8F8F2;">Out[</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">str</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;:&gt;&gt;&gt;&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">Out[</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">str</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;:&gt;&gt;&gt;&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">]  </span></span>
<span class="line"><span style="color:#F8F8F2;">Out[</span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">str</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;:&gt;&gt;&gt;&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#F8F8F2;">{</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">Out[</span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">str</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;:&gt;&gt;&gt;&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">19</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">20</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">Out[</span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">str</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;:&gt;&gt;&gt;&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#AE81FF;">True</span></span>
<span class="line"><span style="color:#F8F8F2;">Out[</span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">str</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>通过上面的代码示例，我们可以知道：通过 input() 获取用户输入，得到的数据类型都是字符串。得知 input() 的特点后，如何解决这个问题呢？——用户如何实现：直接输入原有的类型并得到原有的类型。、</p><h4 id="_10-3-2-方法一-强制类型转化" tabindex="-1"><a class="header-anchor" href="#_10-3-2-方法一-强制类型转化"><span>10.3.2 方法一：强制类型转化</span></a></h4><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]: n </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;&gt;&gt;&gt;&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#AE81FF;">12</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(n)</span></span>
<span class="line"><span style="color:#F8F8F2;">Out[</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">int</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#但这种方法存在一些问题</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#列表不行</span></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">]: s </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> list</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;:&gt;&gt;&gt;&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">]: s  </span></span>
<span class="line"><span style="color:#F8F8F2;">Out[</span><span style="color:#AE81FF;">8</span><span style="color:#F8F8F2;">]: [</span><span style="color:#E6DB74;">&#39;[&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;1&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;,&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;2&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;,&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;3&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;,&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;4&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;]&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#元组也不行</span></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">11</span><span style="color:#F8F8F2;">]: t </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> tuple</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;:&gt;&gt;&gt;&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">12</span><span style="color:#F8F8F2;">]: t</span></span>
<span class="line"><span style="color:#F8F8F2;">Out[</span><span style="color:#AE81FF;">12</span><span style="color:#F8F8F2;">]: (</span><span style="color:#E6DB74;">&#39;(&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;1&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;,&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;2&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;,&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;3&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;)&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><ul><li>适合：数字【整数，浮点数】，字符串，布尔型</li><li>不适合：列表，元组，字典，集合</li></ul><h4 id="_10-3-3-使用eval" tabindex="-1"><a class="header-anchor" href="#_10-3-3-使用eval"><span>10.3.3 使用eval()</span></a></h4><ol><li>eval()的妙用</li></ol><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">#全部测试：</span></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">28</span><span style="color:#F8F8F2;">]: s </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> eval</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;:&gt;&gt;&gt;&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#AE81FF;">12</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">29</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(s), s</span></span>
<span class="line"><span style="color:#F8F8F2;">Out[</span><span style="color:#AE81FF;">29</span><span style="color:#F8F8F2;">]: (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">12</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">30</span><span style="color:#F8F8F2;">]: s </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> eval</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;:&gt;&gt;&gt;&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#F8F8F2;">[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">31</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(s), s</span></span>
<span class="line"><span style="color:#F8F8F2;">Out[</span><span style="color:#AE81FF;">31</span><span style="color:#F8F8F2;">]: (</span><span style="color:#66D9EF;font-style:italic;">list</span><span style="color:#F8F8F2;">, [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">32</span><span style="color:#F8F8F2;">]: s </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> eval</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;:&gt;&gt;&gt;&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">33</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(s), s</span></span>
<span class="line"><span style="color:#F8F8F2;">Out[</span><span style="color:#AE81FF;">33</span><span style="color:#F8F8F2;">]: (</span><span style="color:#66D9EF;font-style:italic;">tuple</span><span style="color:#F8F8F2;">, (</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">34</span><span style="color:#F8F8F2;">]: s </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> eval</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;:&gt;&gt;&gt;&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#F8F8F2;">{</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">35</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(s), s</span></span>
<span class="line"><span style="color:#F8F8F2;">Out[</span><span style="color:#AE81FF;">35</span><span style="color:#F8F8F2;">]: (</span><span style="color:#66D9EF;font-style:italic;">set</span><span style="color:#F8F8F2;">, {</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">36</span><span style="color:#F8F8F2;">]: s </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> eval</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;:&gt;&gt;&gt;&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#AE81FF;">True</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">37</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(s), s</span></span>
<span class="line"><span style="color:#F8F8F2;">Out[</span><span style="color:#AE81FF;">37</span><span style="color:#F8F8F2;">]: (</span><span style="color:#66D9EF;font-style:italic;">bool</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">38</span><span style="color:#F8F8F2;">]: s </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> eval</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;:&gt;&gt;&gt;&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">39</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(s), s</span></span>
<span class="line"><span style="color:#F8F8F2;">Out[</span><span style="color:#AE81FF;">39</span><span style="color:#F8F8F2;">]: (</span><span style="color:#66D9EF;font-style:italic;">dict</span><span style="color:#F8F8F2;">, {</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">})</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><ol start="2"><li>eval()伴随着的问题</li></ol><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">24</span><span style="color:#F8F8F2;">]: S </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> eval</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;:&gt;&gt;&gt;&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#F8F8F2;">string</span></span>
<span class="line"><span style="color:#F44747;">--------------------------------------------------------------------------</span><span style="color:#F92672;">-</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">NameError</span><span style="color:#F8F8F2;">                                 Traceback (most recent call last)</span></span>
<span class="line"><span style="color:#F8F8F2;">Cell In[</span><span style="color:#AE81FF;">24</span><span style="color:#F8F8F2;">], line </span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F44747;">----</span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;"> S </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> eval</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;:&gt;&gt;&gt;&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">File </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;">string</span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;">:</span><span style="color:#AE81FF;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">NameError</span><span style="color:#F8F8F2;">: name </span><span style="color:#E6DB74;">&#39;string&#39;</span><span style="color:#F92672;"> is</span><span style="color:#F92672;"> not</span><span style="color:#F8F8F2;"> defined</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>从上面的代码可以得知，eval 大概率实现的是去掉字符串左右两边的引号。「这个地方 eval 或许不是按我说的实现，但是为了让你们更好理解原理，先这样来。」</p><p><strong>所以，为什么会导致上面的报错呢？</strong></p><p>第一步：获取用户输入：s = eval(input(&#39;:&gt;&gt;&gt;&#39;))</p><p>第二步：这一步骤出现了错误。其中 input 会得到 &#39;string&#39;，而通过 eval 转换之后，去掉了‘’，string就变成了一个“四不像”（严格来说类似于变量）。所以把它读取成了一个变量。但是我们实际上我们在我们之前的代码中，并没有创建 string 这个变量。</p><p>第三步：报错，当然没有通过上面的分析也可以大概预料到问题，因为报错很直观：NameError: name &#39;string&#39; is not defined 。</p><p>所以，<strong>解决方法</strong>很直白：</p><ol><li><p>在获取用户输入之前直接提前创建一个叫做 string 的变量；「显然，不是我们想要的」</p></li><li><p>输入的时，有意加上单引号或者双引号、三引号。bingo！</p></li></ol><p>解决方法具体如下：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">50</span><span style="color:#F8F8F2;">]: string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;hello this string&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">51</span><span style="color:#F8F8F2;">]: s </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> eval</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;:&gt;&gt;&gt;&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#F8F8F2;">string</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">52</span><span style="color:#F8F8F2;">]: s</span></span>
<span class="line"><span style="color:#F8F8F2;">Out[</span><span style="color:#AE81FF;">52</span><span style="color:#F8F8F2;">]: </span><span style="color:#E6DB74;">&#39;hello this string&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">53</span><span style="color:#F8F8F2;">]: num </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 12</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">54</span><span style="color:#F8F8F2;">]: s </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> eval</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;:&gt;&gt;&gt;&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#F8F8F2;">num</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">55</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(s), s</span></span>
<span class="line"><span style="color:#F8F8F2;">Out[</span><span style="color:#AE81FF;">55</span><span style="color:#F8F8F2;">]: (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">12</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">56</span><span style="color:#F8F8F2;">]: s </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> eval</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;:&gt;&gt;&gt;&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#E6DB74;">&#39;string&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">57</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">(s), s</span></span>
<span class="line"><span style="color:#F8F8F2;">Out[</span><span style="color:#AE81FF;">57</span><span style="color:#F8F8F2;">]: (</span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;string&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><ol start="3"><li>eval()小技巧。</li></ol><p>任务要求：获取用户输入，实现两位的加减乘除。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">In [</span><span style="color:#AE81FF;">30</span><span style="color:#F8F8F2;">]: </span><span style="color:#66D9EF;">eval</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;:&gt;&gt;&gt;&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#AE81FF;">2</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#F8F8F2;">Out[</span><span style="color:#AE81FF;">30</span><span style="color:#F8F8F2;">]: </span><span style="color:#AE81FF;">1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_11-小试牛刀" tabindex="-1"><a class="header-anchor" href="#_11-小试牛刀"><span>11. 小试牛刀</span></a></h2><p>获取用户输入来看两个整数，得到两个整数的和。</p><p>要求：</p><ul><li>只能使用一个input函数。</li><li>用户输入格式：num1 num2</li><li>输出计算结果。</li></ul><p>方法一：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">num1 </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;&quot;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">num2 </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;&quot;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(num1 </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> num2)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#AE81FF;">2</span></span>
<span class="line"><span style="color:#AE81FF;">3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>很显然，上面的输出格式并不是我们想要的，并且使用了两个输入函数。</p><p>那怎么实现我们想要的输出（两数字在同一行，中间有空格分割），并且只使用一个input函数？</p><ol><li><p>在同一行，说明我们只能定义一个字符串。</p></li><li><p>那如何把两个输入的字符分隔开？我们前面有记录.split()的功能，把字符串内部用空格分割开。</p></li></ol><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">num </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">new_n </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> num.split()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(new_n[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">]) </span><span style="color:#F92672;">+</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(new_n[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">]))</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#AE81FF;"> 2</span></span>
<span class="line"><span style="color:#AE81FF;">3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>方法二：用eval实现</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">num </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> eval</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">().replace(</span><span style="color:#E6DB74;">&quot; &quot;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&quot;+&quot;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(num)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">1</span><span style="color:#AE81FF;"> 2</span></span>
<span class="line"><span style="color:#AE81FF;">3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>在之前eval的妙用中，我们可以看到，eval中的输入如果是’1+2‘（带上运算符）的，会直接算出结果。</li></ol><p>所以不需要上一步的 print(int(new_n[0]) + int(new_n[1]))此类步骤实现运算。</p><ol start="2"><li>输入是空格不是加号，我们就要用replace将用户输入的空格变成加号来进行最后的运算。</li></ol>`,232)]))}const m=n(F,[["render",d]]),b=JSON.parse('{"path":"/zh/python1v1/String.html","title":"04-字符串","lang":"zh-CN","frontmatter":{"title":"04-字符串","icon":"python","date":"2023-12-21T14:49:25.000Z","author":"XiaoXianYue","isOriginal":true,"category":["课堂笔记"],"tag":["课堂笔记"],"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"feed":false,"seo":false,"head":[]},"git":{"createdTime":1710254826000,"updatedTime":1733574622000,"contributors":[{"name":"Xiaoxianyue","username":"Xiaoxianyue","email":"2310219843@qq.com","commits":10,"url":"https://github.com/Xiaoxianyue"}]},"readingTime":{"minutes":21.4,"words":6421},"filePathRelative":"zh/python1v1/String.md","localizedDate":"2023年12月21日"}');export{m as comp,b as data};
