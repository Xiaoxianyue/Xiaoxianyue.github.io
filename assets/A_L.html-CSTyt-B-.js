import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as l,o as e}from"./app-DT5duD8C.js";const p={};function o(i,s){return e(),a("div",null,s[0]||(s[0]=[l(`<h2 id="_1-匿名方法" tabindex="-1"><a class="header-anchor" href="#_1-匿名方法"><span>1. 匿名方法</span></a></h2><ul><li>匿名方法与委托密切相关。</li><li>匿名方法用于创建委托的副本</li><li>匿名方法不能独立存在</li><li>匿名方法的定义以委托关键字开始：</li></ul><h3 id="_1-1-委托匿名方法的两种实现" tabindex="-1"><a class="header-anchor" href="#_1-1-委托匿名方法的两种实现"><span>1.1 委托匿名方法的两种实现：</span></a></h3><ol><li>声明委托类型并声明具有匹配签名的方法：</li></ol><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;text-decoration:underline;">MessageHandler</span><span style="color:#F8F8F2;"> handler </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> delegate</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;"> mes)</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(mes)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#A6E22E;">handler</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;hello Sherry!&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">delegate</span><span style="color:#F8F8F2;"> void MessageHandler(</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;"> message)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>匿名方法的另一个例子是将委托所代表的参数作为参数进行转移</li></ol><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">showmessage</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;hello&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">delegate</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;"> mes)</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(mes);</span></span>
<span class="line"><span style="color:#F8F8F2;">});</span></span>
<span class="line"><span style="color:#F92672;">static</span><span style="color:#F92672;"> void</span><span style="color:#A6E22E;"> showmessage</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;"> message , </span><span style="color:#A6E22E;text-decoration:underline;">MessageHandler</span><span style="color:#F8F8F2;"> handler)</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#A6E22E;">   handler</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">$&quot;showmessage: {</span><span style="color:#F8F8F2;">message</span><span style="color:#E6DB74;">}&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">delegate</span><span style="color:#F92672;"> void</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">MessageHandler</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;"> mes);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-参数" tabindex="-1"><a class="header-anchor" href="#_1-2-参数"><span>1.2 参数</span></a></h3><p>匿名方法 -如果匿名方法使用参数，这些参数必须与委托的参数相匹配。如果匿名方法不需要参数，则带参数的括号会降低：</p><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span> </span><span style="color:#A6E22E;text-decoration:underline;">MessageHandler</span><span style="color:#F8F8F2;"> handler </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> delegate</span><span style="color:#F8F8F2;"> </span></span>
<span class="line"><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F8F8F2;">      Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Anonymous method&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;"> };</span></span>
<span class="line"><span style="color:#A6E22E;"> handler</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;hello world!&quot;</span><span style="color:#F8F8F2;">); </span><span style="color:#88846F;">// Anonymous method</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;"> delegate</span><span style="color:#F92672;"> void</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">MessageHandler</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;"> message);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>与传统方法一样，匿名也可以返回结果：</p><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;text-decoration:underline;">Operation</span><span style="color:#F8F8F2;"> operation </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> delegate</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> x, </span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> y)</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> x </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> y;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#A6E22E;"> operation</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(result);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">delegate</span><span style="color:#F92672;"> int</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Operation</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> x,</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> y)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>匿名方法可以访问外部定义的所有变量。</p><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> z </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 8</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#A6E22E;text-decoration:underline;">Operation</span><span style="color:#F8F8F2;"> operation </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> delegate</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> x, </span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> y)</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> x </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> y </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> z;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#A6E22E;"> operation</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(result);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">delegate</span><span style="color:#F92672;"> int</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Operation</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> x,</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> y)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面这个代码详细展现了使用命名方法调用委托和使用匿名方法调用委托：</p><div class="language-c# line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="c#" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">using</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">System</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">delegate</span><span style="color:#F92672;"> void</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">NumberChanger</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> n);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">namespace</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">DelegateAppl</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TestDelegate</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F92672;">        static</span><span style="color:#F92672;"> int</span><span style="color:#F8F8F2;"> num </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 10</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">        public</span><span style="color:#F92672;"> static</span><span style="color:#F92672;"> void</span><span style="color:#A6E22E;"> AddNum</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> p)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#F8F8F2;">            num </span><span style="color:#F92672;">+=</span><span style="color:#F8F8F2;"> p;</span></span>
<span class="line"><span style="color:#F8F8F2;">            Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Named Method: {0}&quot;</span><span style="color:#F8F8F2;">, num);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">        public</span><span style="color:#F92672;"> static</span><span style="color:#F92672;"> void</span><span style="color:#A6E22E;"> MultNum</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> q)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#F8F8F2;">            num </span><span style="color:#F92672;">*=</span><span style="color:#F8F8F2;"> q;</span></span>
<span class="line"><span style="color:#F8F8F2;">            Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Named Method: {0}&quot;</span><span style="color:#F8F8F2;">, num);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">        static</span><span style="color:#F92672;"> void</span><span style="color:#A6E22E;"> Main</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;">[] args)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#88846F;">            // 使用匿名方法创建委托实例</span></span>
<span class="line"><span>            </span><span style="color:#A6E22E;text-decoration:underline;">NumberChanger</span><span style="color:#F8F8F2;"> nc </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> delegate</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> x)</span></span>
<span class="line"><span style="color:#F8F8F2;">            {</span></span>
<span class="line"><span style="color:#F8F8F2;">               Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Anonymous Method: {0}&quot;</span><span style="color:#F8F8F2;">, x);</span></span>
<span class="line"><span style="color:#F8F8F2;">            };</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span></span>
<span class="line"><span style="color:#88846F;">            // 使用匿名方法调用委托</span></span>
<span class="line"><span style="color:#A6E22E;">            nc</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">10</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">            // 使用命名方法实例化委托</span></span>
<span class="line"><span style="color:#F8F8F2;">            nc </span><span style="color:#F92672;">=</span><span style="color:#F92672;">  new</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">NumberChanger</span><span style="color:#F8F8F2;">(AddNum);</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span></span>
<span class="line"><span style="color:#88846F;">            // 使用命名方法调用委托</span></span>
<span class="line"><span style="color:#A6E22E;">            nc</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">            // 使用另一个命名方法实例化委托</span></span>
<span class="line"><span style="color:#F8F8F2;">            nc </span><span style="color:#F92672;">=</span><span style="color:#F92672;">  new</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">NumberChanger</span><span style="color:#F8F8F2;">(MultNum);</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span></span>
<span class="line"><span style="color:#88846F;">            // 使用命名方法调用委托</span></span>
<span class="line"><span style="color:#A6E22E;">            nc</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">            Console.</span><span style="color:#A6E22E;">ReadKey</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_1-3-microsoft" tabindex="-1"><a class="header-anchor" href="#_1-3-microsoft"><span>1.3 Microsoft</span></a></h3><p>以下两个使用匿名方法来实现委托的例子，可以看到，方法在类里面，创建一个类的实例，再调用委托等于类中实例化的方法，是委托重要的使用方法。</p><div class="language-c# line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="c#" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">// Declare a delegate</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">delegate</span><span style="color:#F92672;"> void</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">MultiplyCallback</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> i, </span><span style="color:#F92672;">double</span><span style="color:#F8F8F2;"> j);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">MathClass</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F92672;">    static</span><span style="color:#F92672;"> void</span><span style="color:#A6E22E;"> Main</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span>        </span><span style="color:#A6E22E;text-decoration:underline;">MathClass</span><span style="color:#F8F8F2;"> m </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">MathClass</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // Delegate instantiation using &quot;MultiplyNumbers&quot;</span></span>
<span class="line"><span>        </span><span style="color:#A6E22E;text-decoration:underline;">MultiplyCallback</span><span style="color:#F8F8F2;"> d </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> m.MultiplyNumbers;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // Invoke the delegate object.</span></span>
<span class="line"><span style="color:#F8F8F2;">        Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Invoking the delegate using &#39;MultiplyNumbers&#39;:&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;=</span><span style="color:#AE81FF;"> 5</span><span style="color:#F8F8F2;">; i</span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#A6E22E;">            d</span><span style="color:#F8F8F2;">(i, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // Keep the console window open in debug mode.</span></span>
<span class="line"><span style="color:#F8F8F2;">        Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Press any key to exit.&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        Console.</span><span style="color:#A6E22E;">ReadKey</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    // Declare the associated method.</span></span>
<span class="line"><span style="color:#F92672;">    void</span><span style="color:#A6E22E;"> MultiplyNumbers</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> m, </span><span style="color:#F92672;">double</span><span style="color:#F8F8F2;"> n)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        Console.</span><span style="color:#A6E22E;">Write</span><span style="color:#F8F8F2;">(m </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> n </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot; &quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#88846F;">/* Output:</span></span>
<span class="line"><span style="color:#88846F;">    Invoking the delegate using &#39;MultiplyNumbers&#39;:</span></span>
<span class="line"><span style="color:#88846F;">    2 4 6 8 10</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><div class="language-c# line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="c#" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">// Declare a delegate</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">delegate</span><span style="color:#F92672;"> void</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Callback</span><span style="color:#F8F8F2;">();M</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">SampleClass</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#F92672;"> void</span><span style="color:#A6E22E;"> InstanceMethod</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;A message from the instance method.&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    static</span><span style="color:#F92672;"> public</span><span style="color:#F92672;"> void</span><span style="color:#A6E22E;"> StaticMethod</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F8F8F2;">        Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;A message from the static method.&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TestSampleClass</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F92672;">    static</span><span style="color:#F92672;"> void</span><span style="color:#A6E22E;"> Main</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        var</span><span style="color:#F8F8F2;"> sc </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">SampleClass</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // Map the delegate to the instance method:</span></span>
<span class="line"><span>        </span><span style="color:#A6E22E;text-decoration:underline;">Callback</span><span style="color:#F8F8F2;"> d </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> sc.InstanceMethod;</span></span>
<span class="line"><span style="color:#A6E22E;">        d</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // Map to the static method:</span></span>
<span class="line"><span style="color:#F8F8F2;">        d </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> SampleClass.StaticMethod;</span></span>
<span class="line"><span style="color:#A6E22E;">        d</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#88846F;">/* Output:</span></span>
<span class="line"><span style="color:#88846F;">    A message from the instance method.</span></span>
<span class="line"><span style="color:#88846F;">    A message from the static method.</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="_2-lambda" tabindex="-1"><a class="header-anchor" href="#_2-lambda"><span>2. Lambda</span></a></h2><h3 id="_2-1-lambda-表达式" tabindex="-1"><a class="header-anchor" href="#_2-1-lambda-表达式"><span>2.1 Lambda 表达式</span></a></h3><ul><li>Lambda 表达式代表匿名方法的简化记录</li><li>Lambda 表达式允许创建简洁的简洁方法，这些方法可以返回一些值，并可以作为参数传递给其他方法</li><li>要创建一个 lambda 表达式，你需要在 lambda 运算符 =&gt; 的左侧指定输入参数（如果有的话），并将表达式或语句块放在另一侧：</li></ul><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">(list_parameters) </span><span style="color:#F92672;">=&gt;</span><span style="color:#F8F8F2;"> expression</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;text-decoration:underline;">Message</span><span style="color:#F8F8F2;"> hello </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> () </span><span style="color:#F92672;">=&gt;</span><span style="color:#F8F8F2;"> Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Hello&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#A6E22E;"> hello</span><span style="color:#F8F8F2;">();       </span><span style="color:#88846F;">// Hello</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;"> delegate</span><span style="color:#F92672;"> void</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Message</span><span style="color:#F8F8F2;">();</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-参数" tabindex="-1"><a class="header-anchor" href="#_2-2-参数"><span>2.2 参数</span></a></h3><h4 id="_2-2-1-参数类型" tabindex="-1"><a class="header-anchor" href="#_2-2-1-参数类型"><span>2.2.1 参数类型</span></a></h4><p>不需要定义类型：</p><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span> </span><span style="color:#A6E22E;text-decoration:underline;">Operation</span><span style="color:#F8F8F2;"> sum </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (x, y) </span><span style="color:#F92672;">=&gt;</span><span style="color:#F8F8F2;"> Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">$&quot;{</span><span style="color:#F8F8F2;">x</span><span style="color:#E6DB74;">} + {</span><span style="color:#F8F8F2;">y</span><span style="color:#E6DB74;">} = {</span><span style="color:#F8F8F2;">x</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> y</span><span style="color:#E6DB74;">}&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#A6E22E;"> sum</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">22</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">14</span><span style="color:#F8F8F2;">);    </span><span style="color:#88846F;">// 22 + 14 = 36</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;"> delegate</span><span style="color:#F92672;"> void</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Operation</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> x, </span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> y);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>在隐式类型 var 的情况下：</strong></p><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> sum </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> x,</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> y) </span><span style="color:#F92672;">=&gt;</span><span style="color:#F8F8F2;"> Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">$&quot;{</span><span style="color:#F8F8F2;">x</span><span style="color:#E6DB74;">} + {</span><span style="color:#F8F8F2;">y</span><span style="color:#E6DB74;">} = {</span><span style="color:#F8F8F2;">x</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> y</span><span style="color:#E6DB74;">}&quot;</span><span style="color:#F8F8F2;">);   </span><span style="color:#88846F;">//Error!</span></span>
<span class="line"><span style="color:#A6E22E;"> sum</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">22</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">14</span><span style="color:#F8F8F2;">);    </span><span style="color:#88846F;">// 22 + 14 = 36</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;"> delegate</span><span style="color:#F92672;"> void</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Operation</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> x, </span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> y);</span></span>
<span class="line"><span style="color:#88846F;">//如果是var sum = (x,y)=&gt;...不行！因为隐式类型必须明确类型。</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-2-2-参数个数和设置默认参数" tabindex="-1"><a class="header-anchor" href="#_2-2-2-参数个数和设置默认参数"><span>2.2.2 参数个数和设置默认参数</span></a></h4><p>当 Lambda 是唯一参数时，省略括号：</p><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;text-decoration:underline;">printHandler</span><span style="color:#F8F8F2;"> print </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> message</span><span style="color:#F92672;">=&gt;</span><span style="color:#F8F8F2;">Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(message);</span></span>
<span class="line"><span style="color:#A6E22E;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Hello&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#A6E22E;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;sherry&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">delegate</span><span style="color:#F92672;"> void</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">printHandler</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;"> message)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们也可以设置一个默认参数值：</p><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> welcome </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;"> message </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;hello&quot;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">=&gt;</span><span style="color:#F8F8F2;"> Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(message);</span></span>
<span class="line"><span style="color:#A6E22E;">welcome</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;hello world&quot;</span><span style="color:#F8F8F2;">); </span><span style="color:#88846F;">// hello world printed </span></span>
<span class="line"><span style="color:#A6E22E;">welcome</span><span style="color:#F8F8F2;">();              </span><span style="color:#88846F;">// hello printed</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-2-3-lambda-参数返回" tabindex="-1"><a class="header-anchor" href="#_2-2-3-lambda-参数返回"><span>2.2.3 Lambda 参数返回</span></a></h4><p>Lambda 表达式可返回结果 -返回的结果可在 lambda 操作符后指定：</p><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> sum </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> x, </span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> y) </span><span style="color:#F92672;">=&gt;</span><span style="color:#F8F8F2;"> x </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> y;</span></span>
<span class="line"><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> result1 </span><span style="color:#F92672;">=</span><span style="color:#A6E22E;"> sum</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(result1);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;text-decoration:underline;">Operation</span><span style="color:#F8F8F2;"> muliple </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (x , y)</span><span style="color:#F92672;">=&gt;</span><span style="color:#F8F8F2;"> x </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> y;</span></span>
<span class="line"><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> result2 </span><span style="color:#F92672;">=</span><span style="color:#A6E22E;"> muliple</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(result2);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">delegate</span><span style="color:#F92672;"> int</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Operation</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> x, </span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> y);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>-当 Lambda 有多个表达式或 {} 内有一个表达式时，使用运算符 return：</p><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">var</span><span style="color:#F8F8F2;"> substract </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> x, </span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> y) </span><span style="color:#F92672;">=&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> (x </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> y) </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> x </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> y;</span></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F92672;"> return</span><span style="color:#F8F8F2;"> y </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> x;</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> result1 </span><span style="color:#F92672;">=</span><span style="color:#A6E22E;"> substract</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> result2 </span><span style="color:#F92672;">=</span><span style="color:#A6E22E;"> substract</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">16</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(result1); </span></span>
<span class="line"><span style="color:#F8F8F2;">Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(result2);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3-action-adding-removing" tabindex="-1"><a class="header-anchor" href="#_2-3-action-adding-removing"><span>2.3 action adding &amp; removing</span></a></h3><p>Lambda 代表一个委托，因此功能与添加/删除操作相同：</p><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;"> var</span><span style="color:#F8F8F2;"> hello </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> () </span><span style="color:#F92672;">=&gt;</span><span style="color:#F8F8F2;"> Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;the CUC&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;"> var</span><span style="color:#F8F8F2;"> message </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> () </span><span style="color:#F92672;">=&gt;</span><span style="color:#F8F8F2;"> Console.</span><span style="color:#A6E22E;">Write</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Hello &quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;"> message </span><span style="color:#F92672;">+=</span><span style="color:#F8F8F2;"> () </span><span style="color:#F92672;">=&gt;</span><span style="color:#F8F8F2;"> Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;World&quot;</span><span style="color:#F8F8F2;">); </span><span style="color:#88846F;">//add anonymous </span></span>
<span class="line"><span style="color:#88846F;">//lambda expression</span></span>
<span class="line"><span style="color:#F8F8F2;"> message </span><span style="color:#F92672;">+=</span><span style="color:#F8F8F2;"> hello;   </span><span style="color:#88846F;">// add lambda expression fromhello</span></span>
<span class="line"><span style="color:#F8F8F2;"> message </span><span style="color:#F92672;">+=</span><span style="color:#F8F8F2;"> Print;   </span><span style="color:#88846F;">// add method</span></span>
<span class="line"><span style="color:#F8F8F2;"> message</span><span style="color:#F92672;">?</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;">Invoke</span><span style="color:#F8F8F2;">();</span><span style="color:#88846F;">// if nothing more to add /remove</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Lambda代表一个委托，所以参数传递是一致的</p><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;"> int</span><span style="color:#A6E22E;"> Sum</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;">[] numbers, </span><span style="color:#A6E22E;text-decoration:underline;">IsEqual</span><span style="color:#F8F8F2;"> func) </span></span>
<span class="line"><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#F92672;">     int</span><span style="color:#F8F8F2;"> result </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">     foreach</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> numbers)     </span></span>
<span class="line"><span style="color:#F8F8F2;">     {</span></span>
<span class="line"><span style="color:#F92672;">         if</span><span style="color:#F8F8F2;"> (</span><span style="color:#A6E22E;">func</span><span style="color:#F8F8F2;">(i))</span></span>
<span class="line"><span style="color:#F8F8F2;">         result </span><span style="color:#F92672;">+=</span><span style="color:#F8F8F2;"> i;</span></span>
<span class="line"><span style="color:#F8F8F2;">     }</span></span>
<span class="line"><span style="color:#F92672;">     return</span><span style="color:#F8F8F2;"> result;</span></span>
<span class="line"><span style="color:#F8F8F2;"> }</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;"> delegate</span><span style="color:#F92672;"> bool</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">IsEqual</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> x);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>•方法的返回类型是委托<br> •Lambda表达式对应于该委托：</p><div class="language-c# line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="c#" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;text-decoration:underline;">Operation</span><span style="color:#A6E22E;"> SelectOperation</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;text-decoration:underline;">OperationType</span><span style="color:#F8F8F2;"> opType)</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F92672;">    switch</span><span style="color:#F8F8F2;">(opType)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F92672;">        case</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">OperationType</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;text-decoration:underline;">Add</span><span style="color:#F8F8F2;">: </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;">(x,y)</span><span style="color:#F92672;">=&gt;</span><span style="color:#F8F8F2;"> x </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> y;</span></span>
<span class="line"><span style="color:#F92672;">        case</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">OperationType</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;text-decoration:underline;">subtract</span><span style="color:#F8F8F2;">: </span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;">(x,y)</span><span style="color:#F92672;">=&gt;</span><span style="color:#F8F8F2;"> x </span><span style="color:#F92672;">-</span><span style="color:#F8F8F2;"> y;</span></span>
<span class="line"><span style="color:#F92672;">        default</span><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">return</span><span style="color:#F8F8F2;"> (x, y) </span><span style="color:#F92672;">=&gt;</span><span style="color:#F8F8F2;"> x </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> y;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        </span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">enum</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">OperationType</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F8F8F2;">    Add, subtract,multiple</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">delegate</span><span style="color:#F92672;"> int</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Operation</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> x, </span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> y);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="_3-怎么声明一个委托的总结" tabindex="-1"><a class="header-anchor" href="#_3-怎么声明一个委托的总结"><span>3. 怎么声明一个委托的总结</span></a></h2><ol><li>声明委托类型并声明具有匹配签名的方法：</li></ol><div class="language-c# line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="c#" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">delegate</span><span style="color:#F92672;"> int</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Operation</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> x, </span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> y);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Progarm</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F92672;">    static</span><span style="color:#F92672;"> void</span><span style="color:#A6E22E;"> Main</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;">[] args)</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span>        </span><span style="color:#A6E22E;text-decoration:underline;">Operation</span><span style="color:#F8F8F2;"> operation1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Add;</span></span>
<span class="line"><span style="color:#F92672;">        int</span><span style="color:#F8F8F2;"> x </span><span style="color:#F92672;">=</span><span style="color:#A6E22E;"> operation1</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(x);</span></span>
<span class="line"></span>
<span class="line"><span>        </span><span style="color:#A6E22E;text-decoration:underline;">Operation</span><span style="color:#F8F8F2;"> operation2 </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Operation</span><span style="color:#F8F8F2;">(Multiple);</span></span>
<span class="line"><span style="color:#F92672;">        int</span><span style="color:#F8F8F2;"> y </span><span style="color:#F92672;">=</span><span style="color:#A6E22E;"> operation</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(y);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">        int</span><span style="color:#A6E22E;"> Add</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> x, </span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> y) </span><span style="color:#F92672;">=&gt;</span><span style="color:#F8F8F2;"> x </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> y;</span></span>
<span class="line"><span style="color:#F92672;">        int</span><span style="color:#A6E22E;"> Multiple</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> x, </span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> y) </span><span style="color:#F92672;">=&gt;</span><span style="color:#F8F8F2;"> x </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> y;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><ol start="2"><li>声明一个匿名方法</li></ol><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;text-decoration:underline;">Operation</span><span style="color:#F8F8F2;"> operation </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> delegate</span><span style="color:#F8F8F2;"> (</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> x, </span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> y)</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> x </span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> y;</span></span>
<span class="line"><span style="color:#F8F8F2;">};</span></span>
<span class="line"><span style="color:#A6E22E;">operation</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">delegate</span><span style="color:#F92672;"> int</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Operation</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> x,</span><span style="color:#F92672;">int</span><span style="color:#F8F8F2;"> y);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>使用Lamber</li></ol><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">// Instantiate NotifyCallback by using a lambda expression.</span></span>
<span class="line"><span style="color:#A6E22E;text-decoration:underline;">NotifyCallback</span><span style="color:#F8F8F2;"> del4 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> name </span><span style="color:#F92672;">=&gt;</span><span style="color:#F8F8F2;">  { Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">$&quot;Notification received for: {</span><span style="color:#F8F8F2;">name</span><span style="color:#E6DB74;">}&quot;</span><span style="color:#F8F8F2;">); };</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-1-例子" tabindex="-1"><a class="header-anchor" href="#_3-1-例子"><span>3.1 例子</span></a></h3><p>观察下面的例子</p><div class="language-c# line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="c#" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">// A set of classes for handling a bookstore:</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">namespace</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Bookstore</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F92672;">    using</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">System</span><span style="color:#F8F8F2;">.</span><span style="color:#A6E22E;text-decoration:underline;">Collections</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    // Describes a book in the book list:</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#66D9EF;font-style:italic;"> struct</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Book</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F92672;">        public</span><span style="color:#F92672;"> string</span><span style="color:#F8F8F2;"> Title;        </span><span style="color:#88846F;">// Title of the book.</span></span>
<span class="line"><span style="color:#F92672;">        public</span><span style="color:#F92672;"> string</span><span style="color:#F8F8F2;"> Author;       </span><span style="color:#88846F;">// Author of the book.</span></span>
<span class="line"><span style="color:#F92672;">        public</span><span style="color:#F92672;"> decimal</span><span style="color:#F8F8F2;"> Price;       </span><span style="color:#88846F;">// Price of the book.</span></span>
<span class="line"><span style="color:#F92672;">        public</span><span style="color:#F92672;"> bool</span><span style="color:#F8F8F2;"> Paperback;      </span><span style="color:#88846F;">// Is it paperback?</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">        public</span><span style="color:#A6E22E;"> Book</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;"> title, </span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;"> author, </span><span style="color:#F92672;">decimal</span><span style="color:#F8F8F2;"> price, </span><span style="color:#F92672;">bool</span><span style="color:#F8F8F2;"> paperBack)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#F8F8F2;">            Title </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> title;</span></span>
<span class="line"><span style="color:#F8F8F2;">            Author </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> author;</span></span>
<span class="line"><span style="color:#F8F8F2;">            Price </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> price;</span></span>
<span class="line"><span style="color:#F8F8F2;">            Paperback </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> paperBack;</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    // Declare a delegate type for processing a book:</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#66D9EF;font-style:italic;"> delegate</span><span style="color:#F92672;"> void</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">ProcessBookCallback</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;text-decoration:underline;">Book</span><span style="color:#F8F8F2;"> book);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    // Maintains a book database.</span></span>
<span class="line"><span style="color:#F92672;">    public</span><span style="color:#66D9EF;font-style:italic;"> class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">BookDB</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#88846F;">        // List of all books in the database:</span></span>
<span class="line"><span>        </span><span style="color:#A6E22E;text-decoration:underline;">ArrayList</span><span style="color:#F8F8F2;"> list </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">ArrayList</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // Add a book to the database:</span></span>
<span class="line"><span style="color:#F92672;">        public</span><span style="color:#F92672;"> void</span><span style="color:#A6E22E;"> AddBook</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;"> title, </span><span style="color:#F92672;">string</span><span style="color:#F8F8F2;"> author, </span><span style="color:#F92672;">decimal</span><span style="color:#F8F8F2;"> price, </span><span style="color:#F92672;">bool</span><span style="color:#F8F8F2;"> paperBack)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#F8F8F2;">            list.</span><span style="color:#A6E22E;">Add</span><span style="color:#F8F8F2;">(</span><span style="color:#F92672;">new</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Book</span><span style="color:#F8F8F2;">(title, author, price, paperBack));</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // Call a passed-in delegate on each paperback book to process it:</span></span>
<span class="line"><span style="color:#F92672;">        public</span><span style="color:#F92672;"> void</span><span style="color:#A6E22E;"> ProcessPaperbackBooks</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;text-decoration:underline;">ProcessBookCallback</span><span style="color:#F8F8F2;"> processBook)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#F92672;">            foreach</span><span style="color:#F8F8F2;"> (</span><span style="color:#A6E22E;text-decoration:underline;">Book</span><span style="color:#F8F8F2;"> b </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> list)</span></span>
<span class="line"><span style="color:#F8F8F2;">            {</span></span>
<span class="line"><span style="color:#F92672;">                if</span><span style="color:#F8F8F2;"> (b.Paperback)</span></span>
<span class="line"><span style="color:#88846F;">                    // Calling the delegate:</span></span>
<span class="line"><span style="color:#A6E22E;">                    processBook</span><span style="color:#F8F8F2;">(b);</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">// Using the Bookstore classes:</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">namespace</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">BookTestClient</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span></span>
<span class="line"><span style="color:#F92672;">    using</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Bookstore</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    // Class to total and average prices of books:</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">PriceTotaller</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#F92672;">        int</span><span style="color:#F8F8F2;"> countBooks </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">        decimal</span><span style="color:#F8F8F2;"> priceBooks </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0.0m</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">        internal</span><span style="color:#F92672;"> void</span><span style="color:#A6E22E;"> AddBookToTotal</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;text-decoration:underline;">Book</span><span style="color:#F8F8F2;"> book)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#F8F8F2;">            countBooks </span><span style="color:#F92672;">+=</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">            priceBooks </span><span style="color:#F92672;">+=</span><span style="color:#F8F8F2;"> book.Price;</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">        internal</span><span style="color:#F92672;"> decimal</span><span style="color:#A6E22E;"> AveragePrice</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#F8F8F2;"> priceBooks </span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;"> countBooks;</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    // Class to test the book database:</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Test</span></span>
<span class="line"><span style="color:#F8F8F2;">    {</span></span>
<span class="line"><span style="color:#88846F;">        // Print the title of the book.</span></span>
<span class="line"><span style="color:#F92672;">        static</span><span style="color:#F92672;"> void</span><span style="color:#A6E22E;"> PrintTitle</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;text-decoration:underline;">Book</span><span style="color:#F8F8F2;"> b)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#F8F8F2;">            Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">$&quot;   {</span><span style="color:#F8F8F2;">b</span><span style="color:#E6DB74;">.</span><span style="color:#F8F8F2;">Title</span><span style="color:#E6DB74;">}&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // Execution starts here.</span></span>
<span class="line"><span style="color:#F92672;">        static</span><span style="color:#F92672;"> void</span><span style="color:#A6E22E;"> Main</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span>            </span><span style="color:#A6E22E;text-decoration:underline;">BookDB</span><span style="color:#F8F8F2;"> bookDB </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">BookDB</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">            // Initialize the database with some books:</span></span>
<span class="line"><span style="color:#A6E22E;">            AddBooks</span><span style="color:#F8F8F2;">(bookDB);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">            // Print all the titles of paperbacks:</span></span>
<span class="line"><span style="color:#F8F8F2;">            Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Paperback Book Titles:&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">            // Create a new delegate object associated with the static</span></span>
<span class="line"><span style="color:#88846F;">            // method Test.PrintTitle:</span></span>
<span class="line"><span style="color:#F8F8F2;">            bookDB.</span><span style="color:#A6E22E;">ProcessPaperbackBooks</span><span style="color:#F8F8F2;">(PrintTitle);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">            // Get the average price of a paperback by using</span></span>
<span class="line"><span style="color:#88846F;">            // a PriceTotaller object:</span></span>
<span class="line"><span>            </span><span style="color:#A6E22E;text-decoration:underline;">PriceTotaller</span><span style="color:#F8F8F2;"> totaller </span><span style="color:#F92672;">=</span><span style="color:#F92672;"> new</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">PriceTotaller</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">            // Create a new delegate object associated with the nonstatic</span></span>
<span class="line"><span style="color:#88846F;">            // method AddBookToTotal on the object totaller:</span></span>
<span class="line"><span style="color:#F8F8F2;">            bookDB.</span><span style="color:#A6E22E;">ProcessPaperbackBooks</span><span style="color:#F8F8F2;">(totaller.AddBookToTotal);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">            Console.</span><span style="color:#A6E22E;">WriteLine</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Average Paperback Book Price: \${0:#.##}&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F8F8F2;">                    totaller.</span><span style="color:#A6E22E;">AveragePrice</span><span style="color:#F8F8F2;">());</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        // Initialize the book database with some test books:</span></span>
<span class="line"><span style="color:#F92672;">        static</span><span style="color:#F92672;"> void</span><span style="color:#A6E22E;"> AddBooks</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;text-decoration:underline;">BookDB</span><span style="color:#F8F8F2;"> bookDB)</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span></span>
<span class="line"><span style="color:#F8F8F2;">            bookDB.</span><span style="color:#A6E22E;">AddBook</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;The C Programming Language&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;Brian W. Kernighan and Dennis M. Ritchie&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">19.95m</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">            bookDB.</span><span style="color:#A6E22E;">AddBook</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;The Unicode Standard 2.0&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;The Unicode Consortium&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">39.95m</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">            bookDB.</span><span style="color:#A6E22E;">AddBook</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;The MS-DOS Encyclopedia&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;Ray Duncan&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">129.95m</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">false</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">            bookDB.</span><span style="color:#A6E22E;">AddBook</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Dogbert&#39;s Clues for the Clueless&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;Scott Adams&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">12.00m</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">true</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#88846F;">/* Output:</span></span>
<span class="line"><span style="color:#88846F;">Paperback Book Titles:</span></span>
<span class="line"><span style="color:#88846F;">   The C Programming Language</span></span>
<span class="line"><span style="color:#88846F;">   The Unicode Standard 2.0</span></span>
<span class="line"><span style="color:#88846F;">   Dogbert&#39;s Clues for the Clueless</span></span>
<span class="line"><span style="color:#88846F;">Average Paperback Book Price: $23.97</span></span>
<span class="line"><span style="color:#88846F;">*/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div>`,58)]))}const r=n(p,[["render",o]]),F=JSON.parse('{"path":"/zh/OOP/A_L.html","title":"Anonymous Methods and Lambda Expressions","lang":"zh-CN","frontmatter":{"title":"Anonymous Methods and Lambda Expressions","icon":"c","date":"2024-05-07T09:35:42.000Z","author":"XiaoXianYue","isOriginal":true,"category":["C#","大二下"],"tag":["C#","大二下"],"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"description":"1. 匿名方法 匿名方法与委托密切相关。 匿名方法用于创建委托的副本 匿名方法不能独立存在 匿名方法的定义以委托关键字开始： 1.1 委托匿名方法的两种实现： 声明委托类型并声明具有匹配签名的方法： 匿名方法的另一个例子是将委托所代表的参数作为参数进行转移 1.2 参数 匿名方法 -如果匿名方法使用参数，这些参数必须与委托的参数相匹配。如果匿名方法不需...","head":[["meta",{"property":"og:url","content":"https://bougiemoonintaurus/zh/OOP/A_L.html"}],["meta",{"property":"og:site_name","content":"奶酪奶酪"}],["meta",{"property":"og:title","content":"Anonymous Methods and Lambda Expressions"}],["meta",{"property":"og:description","content":"1. 匿名方法 匿名方法与委托密切相关。 匿名方法用于创建委托的副本 匿名方法不能独立存在 匿名方法的定义以委托关键字开始： 1.1 委托匿名方法的两种实现： 声明委托类型并声明具有匹配签名的方法： 匿名方法的另一个例子是将委托所代表的参数作为参数进行转移 1.2 参数 匿名方法 -如果匿名方法使用参数，这些参数必须与委托的参数相匹配。如果匿名方法不需..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-20T04:18:35.000Z"}],["meta",{"property":"article:author","content":"XiaoXianYue"}],["meta",{"property":"article:tag","content":"C#"}],["meta",{"property":"article:tag","content":"大二下"}],["meta",{"property":"article:published_time","content":"2024-05-07T09:35:42.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-20T04:18:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Anonymous Methods and Lambda Expressions\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-07T09:35:42.000Z\\",\\"dateModified\\":\\"2024-05-20T04:18:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XiaoXianYue\\"}]}"]]},"git":{"createdTime":1701251856000,"updatedTime":1716178715000,"contributors":[{"name":"Xiaoxianyue","username":"Xiaoxianyue","email":"2310219843@qq.com","commits":11,"url":"https://github.com/Xiaoxianyue"}]},"readingTime":{"minutes":6.33,"words":1900},"filePathRelative":"zh/OOP/A_L.md","localizedDate":"2024年5月7日","excerpt":"<h2>1. 匿名方法</h2>\\n<ul>\\n<li>匿名方法与委托密切相关。</li>\\n<li>匿名方法用于创建委托的副本</li>\\n<li>匿名方法不能独立存在</li>\\n<li>匿名方法的定义以委托关键字开始：</li>\\n</ul>\\n<h3>1.1 委托匿名方法的两种实现：</h3>\\n<ol>\\n<li>声明委托类型并声明具有匹配签名的方法：</li>\\n</ol>\\n<div class=\\"language-c# line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"c#\\" style=\\"background-color:#272822;color:#F8F8F2\\"><pre class=\\"shiki monokai vp-code\\"><code><span class=\\"line\\"><span style=\\"color:#A6E22E;text-decoration:underline\\">MessageHandler</span><span style=\\"color:#F8F8F2\\"> handler </span><span style=\\"color:#F92672\\">=</span><span style=\\"color:#66D9EF;font-style:italic\\"> delegate</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#F92672\\">string</span><span style=\\"color:#F8F8F2\\"> mes)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">{</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">    Console.</span><span style=\\"color:#A6E22E\\">WriteLine</span><span style=\\"color:#F8F8F2\\">(mes)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#F8F8F2\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"color:#A6E22E\\">handler</span><span style=\\"color:#F8F8F2\\">(</span><span style=\\"color:#E6DB74\\">\\"hello Sherry!\\"</span><span style=\\"color:#F8F8F2\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"color:#66D9EF;font-style:italic\\">delegate</span><span style=\\"color:#F8F8F2\\"> void MessageHandler(</span><span style=\\"color:#F92672\\">string</span><span style=\\"color:#F8F8F2\\"> message)</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{r as comp,F as data};
