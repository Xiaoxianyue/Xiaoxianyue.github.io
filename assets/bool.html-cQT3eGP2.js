import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as t,o as e}from"./app-B0uqhGXV.js";const l="/assets/image-20240810220334282-CzXD_hfO.png",n="/assets/ce117e60cfb82a8886333af10311710-DhCphdra.png",h="/assets/17fc2e885037a27e7a6293ca984e112-Ciuvrkjn.png",r={};function d(p,i){return e(),a("div",null,i[0]||(i[0]=[t('<h2 id="_1-简介" tabindex="-1"><a class="header-anchor" href="#_1-简介"><span>1. 简介</span></a></h2><p>意义：表示判断中的是与否。一般用于条件测试中。</p><img src="'+l+'" alt="image-20240810220334282" style="zoom:50%;"><p>两种结果的解释：</p><figure><img src="'+n+`" alt="ce117e60cfb82a8886333af10311710" tabindex="0" loading="lazy"><figcaption>ce117e60cfb82a8886333af10311710</figcaption></figure><ul><li><p>True ：所有的非空</p></li><li><p>False：只有强制转换才会是 False ，其余是以上形式。在条件判断中类型为空，也会判断为False。</p></li></ul><h2 id="_2-逻辑运算符" tabindex="-1"><a class="header-anchor" href="#_2-逻辑运算符"><span>2. 逻辑运算符</span></a></h2><p><strong>用于检测两个或两个以上的条件是否满足。</strong></p><p>逻辑运算只存在于布尔类型中。</p><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>and，逻辑“与”</td><td>当运算符两边的两个运算对象都为 true ，结果为 true</td></tr><tr><td>or，逻辑“或”</td><td>当运算符两边的运算对象其中有一个为 true ，结果为true</td></tr><tr><td>not， 逻辑“非”</td><td>用于反转运算对象的状态</td></tr></tbody></table><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">In [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> and</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> False</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> or</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> not</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> False</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Out[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">5</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">In [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> and</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> False</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> or</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> True</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Out[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">6</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">In [</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">False</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> or</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> False</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> or</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> not</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> False</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">Out[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">7</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-布尔表达式" tabindex="-1"><a class="header-anchor" href="#_3-布尔表达式"><span>3. 布尔表达式</span></a></h2><table><thead><tr><th>exp</th><th>bool</th><th>value</th><th>Return value</th></tr></thead><tbody><tr><td>3 and 5</td><td>True and True</td><td>True</td><td>5</td></tr><tr><td>3 or 5</td><td>True or True</td><td>True</td><td>3</td></tr><tr><td>0 or 5</td><td>False or True</td><td>True</td><td>5</td></tr><tr><td>3 and not 5</td><td>True and False</td><td>False</td><td><strong>False</strong></td></tr></tbody></table><ul><li>为什么第一行 return 5? ：因为第一个是True不能保证第二个是True，但是返回第二个能说明第一个一定是True。</li></ul><h3 id="_3-1-表达式的应用——条件测试" tabindex="-1"><a class="header-anchor" href="#_3-1-表达式的应用——条件测试"><span>3.1 表达式的应用——条件测试</span></a></h3><ul><li>检查当前变量是否与一个特定值相等/不相等</li><li>比较数字的大小</li><li>检查特定值是否在某序列里</li></ul><h3 id="_3-2-表达式的应用——多条件检查" tabindex="-1"><a class="header-anchor" href="#_3-2-表达式的应用——多条件检查"><span>3.2 表达式的应用——多条件检查</span></a></h3><figure><img src="`+h+'" alt="17fc2e885037a27e7a6293ca984e112" tabindex="0" loading="lazy"><figcaption>17fc2e885037a27e7a6293ca984e112</figcaption></figure>',18)]))}const c=s(r,[["render",d],["__file","bool.html.vue"]]),g=JSON.parse('{"path":"/zh/python1v1/bool.html","title":"09-布尔值","lang":"zh-CN","frontmatter":{"title":"09-布尔值","icon":"python","date":"2024-08-10T21:58:15.000Z","author":"XiaoXianYue","isOriginal":true,"category":["课堂笔记"],"tag":["课堂笔记"],"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"1. 简介","slug":"_1-简介","link":"#_1-简介","children":[]},{"level":2,"title":"2. 逻辑运算符","slug":"_2-逻辑运算符","link":"#_2-逻辑运算符","children":[]},{"level":2,"title":"3. 布尔表达式","slug":"_3-布尔表达式","link":"#_3-布尔表达式","children":[{"level":3,"title":"3.1 表达式的应用——条件测试","slug":"_3-1-表达式的应用——条件测试","link":"#_3-1-表达式的应用——条件测试","children":[]},{"level":3,"title":"3.2 表达式的应用——多条件检查","slug":"_3-2-表达式的应用——多条件检查","link":"#_3-2-表达式的应用——多条件检查","children":[]}]}],"git":{"createdTime":1723302148000,"updatedTime":1723302148000,"contributors":[{"name":"Xiaoxianyue","email":"2310219843@qq.com","commits":1}]},"readingTime":{"minutes":1.41,"words":424},"filePathRelative":"zh/python1v1/bool.md","localizedDate":"2024年8月10日"}');export{c as comp,g as data};
