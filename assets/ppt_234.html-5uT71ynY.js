import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as s,o as t}from"./app-C47WHpp-.js";const l="/assets/image-20241019154943556-BijwOLsY.png",n="/assets/image-20241019155104808-CitmWFH6.png",o="/assets/image-20241019155246626-CMsymbot.png",r="/assets/image-20241019155254558-ejdBftUf.png",p="/assets/image-20241019155848651-B3c09qU8.png",m="/assets/image-20241019161340318-Bp1amAqc.png",g="/assets/image-20241019161351143-CNVOqw2f.png",c="/assets/image-20241019161505940-DGgtIFWQ.png",h="/assets/image-20241019162330650-fAP2KVPw.png",d="/assets/image-20241019164243255-B2M8q94R.png",u="/assets/image-20241019165504835-Be2BzuZV.png",_="/assets/image-20241019165540375-CdLbwf0A.png",f="/assets/image-20241019170121720-2BkBGPg-.png",y="/assets/image-20241019170203691-DYiETr9T.png",b="/assets/image-20241019172743772-BNaTJbSG.png",v="/assets/image-20241019172752048-DsUVeEHq.png",z="/assets/image-20241019172807075-hPBmbsDV.png",x="/assets/image-20241019172815692-CA-WJtyf.png",k="/assets/image-20241019172928948-DxlkY9Vz.png",w="/assets/image-20241019173019346-Ca5IGSgH.png",D="/assets/image-20241019173955473-vwMp_Ooe.png",C="/assets/image-20241019174504654-59Yeeedo.png",B="/assets/image-20241019175215611-BDVyEif7.png",T="/assets/image-20241019175743050-DXPR_haR.png",L="/assets/image-20241019180846416-G5zl3cYK.png",I="/assets/image-20241019205337196-GW-juyjl.png",S="/assets/image-20241019204211533-fNJ4HnJ4.png",F="/assets/image-20241019204343497-Dx8cnmDI.png",G="/assets/image-20241019204520304-Cmh9xikc.png",N="/assets/image-20241019181538087-DnmWzKfX.png",P="/assets/image-20241019181549003-BPEh7-YP.png",j="/assets/image-20241019181643048-CTFarY7N.png",q="/assets/image-20241019181930747-jyaaJP8K.png",V="/assets/image-20241019182121668-BdiXpJLq.png",W="/assets/image-20241019195759714-B4We9vXc.png",A="/assets/image-20241019195808814-DWILC7cj.png",M="/assets/image-20241019200329033-4HcShBjq.png",H="/assets/image-20241019200149982-22CwzEvH.png",E="/assets/image-20241019200318982-DNl-0ZsH.png",X="/assets/image-20241019200611073-CdL1k1hw.png",Y="/assets/image-20241019200920120-izAVJCc7.png",R="/assets/image-20241019200959726-CA8oshjS.png",J="/assets/image-20241019201037059-DMGpINAE.png",U="/assets/image-20241019202626156-DkXYpebD.png",K="/assets/image-20241019202636332-5EQKXRnF.png",O="/assets/image-20241019202643803-BCxfR6Wu.png",Z="/assets/image-20241019202908138-iXK3HNPP.png",Q="/assets/image-20241019203050878-BUnm6bIj.png",$="/assets/image-20241019203252993-CDyDkKYi.png",ee="/assets/image-20241019203510203-iVGs3sor.png",ie="/assets/image-20241019205649327-Cvj1z1vH.png",ae="/assets/image-20241019205705447-BKRCzsFG.png",se="/assets/image-20241019210016286-ZXaiMVzj.png",te="/assets/image-20241019210429481-h9Bz3UjL.png",le="/assets/image-20241019211458915-BdMpUmq5.png",ne="/assets/image-20241020132358863-4-3ZxI-_.png",oe="/assets/image-20241020133312970-CmNiZwRY.png",re="/assets/image-20241020133321926-D7i0UYhc.png",pe="/assets/image-20241020133420710-CVBTnrT3.png",me="/assets/image-20241020133817599-Bb83LT3s.png",ge="/assets/image-20241020133836095-DaSgNgQP.png",ce="/assets/image-20241020134526396-BBgsJsFU.png",he="/assets/image-20241020135426445-DvNMRxfW.png",de="/assets/image-20241020135513377-D5r24I8I.png",ue="/assets/image-20241020141524392-Bjd2mmId.png",_e="/assets/image-20241020142124828-BEVJ_6ee.png",fe="/assets/image-20241020144041564-DBbAHa6X.png",ye="/assets/image-20241020144140873-DaJC5lNU.png",be="/assets/image-20241020143503472-Cgbst9vu.png",ve="/assets/image-20241020144448016-C-uk5KF5.png",ze="/assets/image-20241020144513741-he6Ztma3.png",xe={};function ke(we,e){return t(),a("div",null,e[0]||(e[0]=[s('<h2 id="lecture-2-what-is-image" tabindex="-1"><a class="header-anchor" href="#lecture-2-what-is-image"><span>Lecture 2 What is Image？</span></a></h2><h3 id="_1-image-in-computer" tabindex="-1"><a class="header-anchor" href="#_1-image-in-computer"><span>1. Image in computer</span></a></h3><ul><li><p>Signal： A (multi-dimensional)function that contains information about a phenomenon.</p><ul><li><p>Signals can be：</p><ul><li><p>Continuous: light</p></li><li><p>Discrete（离散的）: measurement（量度） of a light</p></li><li><p>Sampling: reduction of continuous signal to a discrete signal</p></li><li><p>Any phenomenon : Light; Heat; Gravity</p></li></ul></li></ul></li><li><p>Sampling： Sampling in 1D takes a function and returns a vector whose elements are</p><p>values of that function at the sample points.（一维采样会获取一个函数，并返回一个元素为该函数在采样点上的值的向量。）</p><ul><li><p>1 D：</p><p>![image-20241019154920292](./ppt 234.assets/image-20241019154920292.png)</p></li><li><p>2 D：</p><img src="'+l+'" alt="image-20241019154943556" style="zoom:67%;"></li></ul></li></ul><h3 id="_2-2d-image" tabindex="-1"><a class="header-anchor" href="#_2-2d-image"><span>2. 2D image：</span></a></h3><img src="'+n+'" alt="image-20241019155104808" style="zoom:50%;"><p>To be more specific:</p><img src="'+o+'" alt="image-20241019155246626" style="zoom:33%;"><img src="'+r+'" alt="image-20241019155254558" style="zoom:33%;"><h4 id="_2-1-resolution-分辨率" tabindex="-1"><a class="header-anchor" href="#_2-1-resolution-分辨率"><span>2.1 Resolution 分辨率</span></a></h4><img src="'+p+'" alt="image-20241019155848651" style="zoom:33%;"><h4 id="_2-2-dimensionality-of-an-image" tabindex="-1"><a class="header-anchor" href="#_2-2-dimensionality-of-an-image"><span>2.2 Dimensionality of an Image</span></a></h4><ul><li><p>An image of size 1000x1000 with 8-bit quantization per pixel = 256 values ^ (1000 x 1000)</p></li><li><p>All images ever created of size 1000x1000</p></li><li><p>Computer vision as making sense of an extremely high-dimensional data. ‘natural’ images are a subspace.</p></li></ul><h4 id="_2-3-images-in-python" tabindex="-1"><a class="header-anchor" href="#_2-3-images-in-python"><span>2.3 Images in Python</span></a></h4><img src="'+m+'" alt="image-20241019161340318" style="zoom:50%;"><p>​ <img src="'+g+'" alt="image-20241019161351143" style="zoom:50%;"></p><ul><li><p>WITH COLOR?</p><img src="'+c+'" alt="image-20241019161505940" style="zoom:50%;"></li></ul><h3 id="_3-color" tabindex="-1"><a class="header-anchor" href="#_3-color"><span>3. Color</span></a></h3><h4 id="_3-1-spectra-of-light-sources" tabindex="-1"><a class="header-anchor" href="#_3-1-spectra-of-light-sources"><span>3.1 Spectra of Light Sources</span></a></h4><img src="'+h+'" alt="image-20241019162330650" style="zoom:50%;"><h4 id="_3-2-linear-color-spaces-cie-xyz" tabindex="-1"><a class="header-anchor" href="#_3-2-linear-color-spaces-cie-xyz"><span>3.2 Linear color spaces: CIE XYZ</span></a></h4><ul><li><p>Primaries are <em>imaginary</em>, but matching functions are everywhere positive</p></li><li><p>The 𝑌 parameter corresponds to brightness or <em>luminance</em></p></li></ul><img src="'+d+'" alt="image-20241019164243255" style="zoom:50%;"><h2 id="lecture-3-image-filter" tabindex="-1"><a class="header-anchor" href="#lecture-3-image-filter"><span>Lecture 3 Image Filter</span></a></h2><img src="'+u+'" alt="image-20241019165504835" style="zoom:50%;"><img src="'+_+'" alt="image-20241019165540375" style="zoom:50%;"><h3 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h3><h3 id="_1-point-processing" tabindex="-1"><a class="header-anchor" href="#_1-point-processing"><span>1. point processing</span></a></h3><ul><li><p>Example</p><img src="'+f+'" alt="image-20241019170121720" style="zoom:50%;"></li><li><p>data changes (actually)</p></li></ul><img src="'+y+'" alt="image-20241019170203691" style="zoom:50%;"><h3 id="_2-linear-shift-invariant-filtering-线性位移不变的图像滤波" tabindex="-1"><a class="header-anchor" href="#_2-linear-shift-invariant-filtering-线性位移不变的图像滤波"><span>2. Linear shift-invariant filtering ( 线性位移不变的图像滤波 )</span></a></h3><ul><li><p>Replace each pixel by a <strong>linear</strong> combination of its <strong>neighbors</strong> (and possibly itself).</p></li><li><p>The combination is determined by the filter’s <strong>kernel</strong>.</p></li><li><p>The same kernel is <em>shifted</em> to all pixel locations so that all pixels use the same linear combination of their neighbors.</p></li></ul><h4 id="_2-1-let-s-run-the-box-filter" tabindex="-1"><a class="header-anchor" href="#_2-1-let-s-run-the-box-filter"><span>2.1 Let’s run the box filter</span></a></h4><img src="'+b+'" alt="image-20241019172743772" style="zoom:50%;"><img src="'+v+'" alt="image-20241019172752048" style="zoom:50%;"><img src="'+z+'" alt="image-20241019172807075" style="zoom:50%;"><img src="'+x+'" alt="image-20241019172815692" style="zoom:50%;"><h4 id="_2-2-convolution-卷积" tabindex="-1"><a class="header-anchor" href="#_2-2-convolution-卷积"><span>2.2 Convolution 卷积</span></a></h4><ul><li><p><strong>1D :</strong></p><ul><li><strong>definition</strong></li></ul><img src="'+k+'" alt="image-20241019172928948" style="zoom:33%;"><ul><li><p><strong>example</strong></p><img src="'+w+'" alt="image-20241019173019346" style="zoom:33%;"></li></ul></li><li><p><strong>2D :</strong></p><ul><li><p><strong>definition</strong></p><p>![image-20241019173200007](./ppt 234.assets/image-20241019173200007.png)</p></li></ul></li><li><p><strong>Convolution vs correlation of 2D:</strong></p><p>Convolution: notice the flip</p><p>Correlation: notice the lack of flip</p><ul><li><p>Definition:</p><img src="'+D+'" alt="image-20241019173955473" style="zoom:67%;"></li></ul></li></ul><img src="'+C+'" alt="image-20241019174504654" style="zoom:50%;"><h4 id="_2-3-separable-filters" tabindex="-1"><a class="header-anchor" href="#_2-3-separable-filters"><span>2.3 Separable filters</span></a></h4><p>A 2D filter is separable if it can be written as the product of a “column” and a “row”.</p><img src="'+B+'" alt="image-20241019175215611" style="zoom:33%;"><ul><li><p>2D convolution with a separable filter is equivalent to two 1D convolutions (with the</p><p>“column” and “row” filters).</p></li></ul><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>可分离滤波会大大增加过滤器的效率。</p><p>If the image has M x M pixels and the filter kernel has size N x N:</p><p>• What is the cost of convolution with a non-separable filter? M2 x N2</p><p>• What is the cost of convolution with a separable filter? 2 x N x M2</p></div><ul><li><p>Example:</p><img src="'+T+'" alt="image-20241019175743050" style="zoom:33%;"></li></ul><h4 id="_2-4-gaussion-filter" tabindex="-1"><a class="header-anchor" href="#_2-4-gaussion-filter"><span>2.4 Gaussion filter</span></a></h4><img src="'+L+'" alt="image-20241019180846416" style="zoom:67%;"><img src="'+I+'" alt="image-20241019205337196" style="zoom:50%;"><h4 id="_2-5-2d-gaussion" tabindex="-1"><a class="header-anchor" href="#_2-5-2d-gaussion"><span>2.5 2D Gaussion</span></a></h4><ul><li>Standard deviation ![image-20241019203834104](./ppt 234.assets/image-20241019203834104.png): determines extent of smoothing.</li></ul><img src="'+S+'" alt="image-20241019204211533" style="zoom:50%;"><p>可视化：</p><img src="'+F+'" alt="image-20241019204343497" style="zoom:50%;"><ul><li><p>The Gaussian function has infinite support, but discrete filters use finite kernels</p><img src="'+G+'" alt="image-20241019204520304" style="zoom:50%;"></li></ul><h4 id="_2-6-other-filters" tabindex="-1"><a class="header-anchor" href="#_2-6-other-filters"><span>2.6 Other filters</span></a></h4><img src="'+N+'" alt="image-20241019181538087" style="zoom:50%;"><img src="'+P+'" alt="image-20241019181549003" style="zoom:50%;"><img src="'+j+'" alt="image-20241019181643048" style="zoom:50%;"><p>最后一个就是我们常说的：锐化。</p><h3 id="_3-image-gradients" tabindex="-1"><a class="header-anchor" href="#_3-image-gradients"><span>3. Image gradients</span></a></h3><p>图像的检测是不连续的。（discontinue）</p><img src="'+q+'" alt="image-20241019181930747" style="zoom:33%;"><p>怎么检测我们的不连续性？Derivative，导数。</p><img src="'+V+'" alt="image-20241019182121668" style="zoom:50%;"><p>或者我们可以用其他变换公式：</p><img src="'+W+'" alt="image-20241019195759714" style="zoom:50%;"><img src="'+A+'" alt="image-20241019195808814" style="zoom:67%;"><h4 id="_3-1-sober-filter" tabindex="-1"><a class="header-anchor" href="#_3-1-sober-filter"><span>3.1 Sober filter</span></a></h4><img src="'+M+'" alt="image-20241019200329033" style="zoom:67%;"><p>blurring: 使模糊</p><ul><li><p>Horizontal Sober filter: 水平</p><img src="'+H+'" alt="image-20241019200149982" style="zoom:67%;"></li><li><p>Vertical Sober filter: 垂直</p><img src="'+E+'" alt="image-20241019200318982" style="zoom:67%;"></li><li><p>To be more specific:</p><img src="'+X+'" alt="image-20241019200611073" style="zoom:50%;"></li></ul><h4 id="_3-2-computing-image-gradients" tabindex="-1"><a class="header-anchor" href="#_3-2-computing-image-gradients"><span>3.2 Computing image gradients</span></a></h4><ol><li><p>Your filters?</p><img src="'+Y+'" alt="image-20241019200920120" style="zoom:50%;"></li><li><p>Convolve with the image to compute derivatives.</p></li></ol><img src="'+R+'" alt="image-20241019200959726" style="zoom:67%;"><ol start="3"><li>Form the image gradient, and compute its direction and amplitude.</li></ol><img src="'+J+'" alt="image-20241019201037059" style="zoom:67%;"><h4 id="_3-3-how-do-you-find-the-edge-of-this-signal-没看懂。。" tabindex="-1"><a class="header-anchor" href="#_3-3-how-do-you-find-the-edge-of-this-signal-没看懂。。"><span>3.3 How do you find the edge of this signal? 没看懂。。</span></a></h4><img src="'+U+'" alt="image-20241019202626156" style="zoom:50%;"><img src="'+K+'" alt="image-20241019202636332" style="zoom:50%;"><img src="'+O+'" alt="image-20241019202643803" style="zoom:50%;"><h4 id="_3-4-laplace-filter" tabindex="-1"><a class="header-anchor" href="#_3-4-laplace-filter"><span>3.4 Laplace filter</span></a></h4><p>Basically a second derivative filter.</p><ul><li>We can use finite differences to derive it, as with first derivative filter.</li></ul><p><strong>一阶：导一次</strong></p><p><strong>二阶：导两次</strong></p><img src="'+Z+'" alt="image-20241019202908138" style="zoom:50%;"><ul><li>As with derivative, we can combine Laplace filtering with Gaussian filtering</li></ul><p>LoG :</p><img src="'+Q+'" alt="image-20241019203050878" style="zoom:67%;"><ul><li>LoG output are “zero crossings” at edges</li></ul><img src="'+$+'" alt="image-20241019203252993" style="zoom:33%;"><ul><li><p>可视化：</p><img src="'+ee+'" alt="image-20241019203510203" style="zoom:50%;"></li></ul><h3 id="_4-none-linear-filtering" tabindex="-1"><a class="header-anchor" href="#_4-none-linear-filtering"><span>4. None-linear Filtering</span></a></h3><ul><li><p>Gaussian filtering is appropriate for <em>additive, zero-mean</em> noise (assuming nearby pixels share the same value)</p><img src="'+ie+'" alt="image-20241019205649327" style="zoom:50%;"></li><li><p>What about <em>impulse</em> or <em>shot noise,</em> i.e.<em>,</em> when some pixels are arbitrarily replaced by spurious values?</p></li></ul><p>​ <img src="'+ae+'" alt="image-20241019205705447" style="zoom:50%;"></p><h4 id="_4-1-what-it-is" tabindex="-1"><a class="header-anchor" href="#_4-1-what-it-is"><span>4.1 What it is?</span></a></h4><p><strong>Linear filters</strong>: their response of a sum of two signals is the same as the sum of the individual responses. This is equivalent to saying that each output pixel is a weighted summation of some number of input pixels.</p><p><strong>Non-linear: A non-linear combination of neighboring pixels.</strong></p><h4 id="_4-2-median-filtering" tabindex="-1"><a class="header-anchor" href="#_4-2-median-filtering"><span>4.2 Median filtering</span></a></h4><img src="'+se+'" alt="image-20241019210016286" style="zoom:50%;"><p>Median filter, which selects the median value from each pixel’s neighborhood.</p><p>![image-20241019210216889](./ppt 234.assets/image-20241019210216889.png)</p><p>α-trimmed mean: averages together all of the pixels except for the α fraction that are the smallest and the largest.</p><p>![image-20241019210229342](./ppt 234.assets/image-20241019210229342.png)</p><p>中值滤波器是线性的吗？</p><img src="'+te+'" alt="image-20241019210429481" style="zoom:50%;"><h4 id="_4-3-bilateral-filtering" tabindex="-1"><a class="header-anchor" href="#_4-3-bilateral-filtering"><span>4.3 Bilateral filtering</span></a></h4><p>In the bilateral filter, the output pixel value depends on a weighted combination of neighboring pixel values.</p><p>在双边滤波器中，输出像素值取决于相邻像素值的加权组合。</p><h4 id="_4-4-guided-image-filtering" tabindex="-1"><a class="header-anchor" href="#_4-4-guided-image-filtering"><span>4.4 Guided image filtering</span></a></h4><img src="'+le+'" alt="image-20241019211458915" style="zoom:50%;"><h2 id="lecture-4-spatial-pyramids" tabindex="-1"><a class="header-anchor" href="#lecture-4-spatial-pyramids"><span>Lecture 4 <strong>Spatial Pyramids</strong></span></a></h2><h3 id="_1-the-gaussian-pyramid" tabindex="-1"><a class="header-anchor" href="#_1-the-gaussian-pyramid"><span>1. The Gaussian pyramid</span></a></h3><ol><li>Blur input image with a Gaussian (actually, binomial) low-pass filter.</li></ol><img src="'+ne+'" alt="image-20241020132358863" style="zoom:50%;"><h3 id="_2-the-laplacian-pyramid" tabindex="-1"><a class="header-anchor" href="#_2-the-laplacian-pyramid"><span>2. The Laplacian Pyramid</span></a></h3><img src="'+oe+'" alt="image-20241020133312970" style="zoom:33%;"><img src="'+re+'" alt="image-20241020133321926" style="zoom:33%;"><ul><li>可以编码可以解码：</li></ul><img src="'+pe+'" alt="image-20241020133420710" style="zoom:33%;"><ul><li><p>application：</p><p>• Texture synthesis</p><p>• Image compression</p><p>• Noise removal</p><p>• Computing image features (e.g., SIFT)</p><p>• Image Blending…</p></li></ul><h3 id="_3-steerable-pyramid" tabindex="-1"><a class="header-anchor" href="#_3-steerable-pyramid"><span>3. Steerable pyramid</span></a></h3><img src="'+me+'" alt="image-20241020133817599" style="zoom:33%;"><img src="'+ge+'" alt="image-20241020133836095" style="zoom:33%;"><ul><li><p>Application</p><p>• Texture synthesis</p><p>• Noise removal</p><p>• Motion analysis</p><p>• Motion synthesis, motion magnification</p></li></ul><h3 id="_4-fourier-series-傅里叶" tabindex="-1"><a class="header-anchor" href="#_4-fourier-series-傅里叶"><span>4. Fourier series（傅里叶）</span></a></h3><h4 id="_4-1-basic-building-block" tabindex="-1"><a class="header-anchor" href="#_4-1-basic-building-block"><span>4.1 Basic building block</span></a></h4><p>![image-20241020134434669](./ppt 234.assets/image-20241020134434669.png)</p><ul><li>我们知道：</li></ul><img src="'+ce+'" alt="image-20241020134526396" style="zoom:80%;"><ul><li><p>EXAMPLE:</p><img src="'+he+'" alt="image-20241020135426445" style="zoom:25%;"></li><li><p>对于这样一个函数我们怎么合成？</p><img src="'+de+'" alt="image-20241020135513377" style="zoom:25%;"><ul><li><p>![image-20241020135732753](./ppt 234.assets/image-20241020135732753.png)</p></li><li><p>![image-20241020135742491](./ppt 234.assets/image-20241020135742491.png)</p></li><li><p>![image-20241020135754492](./ppt 234.assets/image-20241020135754492.png)</p></li><li><p>How would you express this mathematically? infinite sum of sine waves</p><p>正弦波的无穷和。</p><p>![image-20241020135916255](./ppt 234.assets/image-20241020135916255.png)</p></li></ul></li></ul><h4 id="_4-2-frequency-domain" tabindex="-1"><a class="header-anchor" href="#_4-2-frequency-domain"><span>4.2 Frequency domain</span></a></h4><img src="'+ue+'" alt="image-20241020141524392" style="zoom:50%;"><h4 id="_4-3-fourier-transform" tabindex="-1"><a class="header-anchor" href="#_4-3-fourier-transform"><span>4.3 Fourier Transform</span></a></h4><h5 id="_4-3-1-1d" tabindex="-1"><a class="header-anchor" href="#_4-3-1-1d"><span>4.3.1 1D</span></a></h5><img src="'+_e+'" alt="image-20241020142124828" style="zoom:50%;"><p>也可以写成：</p><p>![image-20241020142257229](./ppt 234.assets/image-20241020142257229.png)</p><p>![image-20241020142445712](./ppt 234.assets/image-20241020142445712.png)</p><h5 id="_4-3-2-2d" tabindex="-1"><a class="header-anchor" href="#_4-3-2-2d"><span>4.3.2 2D</span></a></h5><p>To represent 2D signals 𝑓(𝑥, 𝑦), we need to extend our 1D basis functions to two variables:</p><img src="'+fe+'" alt="image-20241020144041564" style="zoom:33%;"><img src="'+ye+'" alt="image-20241020144140873" style="zoom:67%;"><p><strong>Symmetry</strong>: the Fourier transform of a real-valued image has coefficients that come in pairs, with 𝐹(𝑢, 𝑣) being the complex conjugate of 𝐹(−𝑢,−𝑣)</p><h4 id="_4-4-vector-projection" tabindex="-1"><a class="header-anchor" href="#_4-4-vector-projection"><span>4.4 Vector Projection</span></a></h4><ul><li><p>什么是矢量投影</p><img src="'+be+'" alt="image-20241020143503472" style="zoom:50%;"></li></ul><h4 id="_4-5-the-convolution-theorem" tabindex="-1"><a class="header-anchor" href="#_4-5-the-convolution-theorem"><span>4.5 The convolution theorem</span></a></h4><ul><li><p>The Fourier transform of the convolution of two functions is the product of their Fourier transforms:</p><img src="'+ve+'" alt="image-20241020144448016" style="zoom:33%;"></li><li><p>The inverse Fourier transform of the product of two Fourier transforms isthe convolution</p><p>of the two inverse Fourier transforms:</p><img src="'+ze+'" alt="image-20241020144513741" style="zoom:33%;"></li></ul>',148)]))}const Be=i(xe,[["render",ke],["__file","ppt_234.html.vue"]]),Te=JSON.parse('{"path":"/zh/Computer_Vision/ppt_234.html","title":"计算机视觉","lang":"zh-CN","frontmatter":{"title":"计算机视觉","icon":"python","date":"2024-10-18T18:29:05.000Z","author":"XiaoXianYue","isOriginal":true,"category":["大三上","计算机视觉"],"tag":["大三上","计算机视觉"],"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"feed":false,"seo":false,"head":[]},"headers":[{"level":2,"title":"Lecture 2 What is Image？","slug":"lecture-2-what-is-image","link":"#lecture-2-what-is-image","children":[{"level":3,"title":"1. Image in computer","slug":"_1-image-in-computer","link":"#_1-image-in-computer","children":[]},{"level":3,"title":"2.  2D image：","slug":"_2-2d-image","link":"#_2-2d-image","children":[{"level":4,"title":"2.1 Resolution 分辨率","slug":"_2-1-resolution-分辨率","link":"#_2-1-resolution-分辨率","children":[]},{"level":4,"title":"2.2 Dimensionality of an Image","slug":"_2-2-dimensionality-of-an-image","link":"#_2-2-dimensionality-of-an-image","children":[]},{"level":4,"title":"2.3 Images in Python","slug":"_2-3-images-in-python","link":"#_2-3-images-in-python","children":[]}]},{"level":3,"title":"3. Color","slug":"_3-color","link":"#_3-color","children":[{"level":4,"title":"3.1 Spectra of Light Sources","slug":"_3-1-spectra-of-light-sources","link":"#_3-1-spectra-of-light-sources","children":[]},{"level":4,"title":"3.2 Linear color spaces: CIE XYZ","slug":"_3-2-linear-color-spaces-cie-xyz","link":"#_3-2-linear-color-spaces-cie-xyz","children":[]}]}]},{"level":2,"title":"Lecture 3 Image Filter","slug":"lecture-3-image-filter","link":"#lecture-3-image-filter","children":[{"level":3,"title":"","slug":"","link":"#","children":[]},{"level":3,"title":"1. point processing","slug":"_1-point-processing","link":"#_1-point-processing","children":[]},{"level":3,"title":"2. Linear shift-invariant filtering ( 线性位移不变的图像滤波 )","slug":"_2-linear-shift-invariant-filtering-线性位移不变的图像滤波","link":"#_2-linear-shift-invariant-filtering-线性位移不变的图像滤波","children":[{"level":4,"title":"2.1 Let’s run the box filter","slug":"_2-1-let-s-run-the-box-filter","link":"#_2-1-let-s-run-the-box-filter","children":[]},{"level":4,"title":"2.2 Convolution 卷积","slug":"_2-2-convolution-卷积","link":"#_2-2-convolution-卷积","children":[]},{"level":4,"title":"2.3 Separable filters","slug":"_2-3-separable-filters","link":"#_2-3-separable-filters","children":[]},{"level":4,"title":"2.4 Gaussion filter","slug":"_2-4-gaussion-filter","link":"#_2-4-gaussion-filter","children":[]},{"level":4,"title":"2.5 2D Gaussion","slug":"_2-5-2d-gaussion","link":"#_2-5-2d-gaussion","children":[]},{"level":4,"title":"2.6 Other filters","slug":"_2-6-other-filters","link":"#_2-6-other-filters","children":[]}]},{"level":3,"title":"3. Image gradients","slug":"_3-image-gradients","link":"#_3-image-gradients","children":[{"level":4,"title":"3.1 Sober filter","slug":"_3-1-sober-filter","link":"#_3-1-sober-filter","children":[]},{"level":4,"title":"3.2 Computing image gradients","slug":"_3-2-computing-image-gradients","link":"#_3-2-computing-image-gradients","children":[]},{"level":4,"title":"3.3 How do you find the edge of this signal? 没看懂。。","slug":"_3-3-how-do-you-find-the-edge-of-this-signal-没看懂。。","link":"#_3-3-how-do-you-find-the-edge-of-this-signal-没看懂。。","children":[]},{"level":4,"title":"3.4 Laplace filter","slug":"_3-4-laplace-filter","link":"#_3-4-laplace-filter","children":[]}]},{"level":3,"title":"4.  None-linear Filtering","slug":"_4-none-linear-filtering","link":"#_4-none-linear-filtering","children":[{"level":4,"title":"4.1 What it is?","slug":"_4-1-what-it-is","link":"#_4-1-what-it-is","children":[]},{"level":4,"title":"4.2 Median filtering","slug":"_4-2-median-filtering","link":"#_4-2-median-filtering","children":[]},{"level":4,"title":"4.3 Bilateral filtering","slug":"_4-3-bilateral-filtering","link":"#_4-3-bilateral-filtering","children":[]},{"level":4,"title":"4.4 Guided image filtering","slug":"_4-4-guided-image-filtering","link":"#_4-4-guided-image-filtering","children":[]}]}]},{"level":2,"title":"Lecture 4 Spatial Pyramids","slug":"lecture-4-spatial-pyramids","link":"#lecture-4-spatial-pyramids","children":[{"level":3,"title":"1. The Gaussian pyramid","slug":"_1-the-gaussian-pyramid","link":"#_1-the-gaussian-pyramid","children":[]},{"level":3,"title":"2. The Laplacian Pyramid","slug":"_2-the-laplacian-pyramid","link":"#_2-the-laplacian-pyramid","children":[]},{"level":3,"title":"3. Steerable pyramid","slug":"_3-steerable-pyramid","link":"#_3-steerable-pyramid","children":[]},{"level":3,"title":"4. Fourier series（傅里叶）","slug":"_4-fourier-series-傅里叶","link":"#_4-fourier-series-傅里叶","children":[{"level":4,"title":"4.1 Basic building block","slug":"_4-1-basic-building-block","link":"#_4-1-basic-building-block","children":[]},{"level":4,"title":"4.2 Frequency domain","slug":"_4-2-frequency-domain","link":"#_4-2-frequency-domain","children":[]},{"level":4,"title":"4.3 Fourier Transform","slug":"_4-3-fourier-transform","link":"#_4-3-fourier-transform","children":[{"level":5,"title":"4.3.1 1D","slug":"_4-3-1-1d","link":"#_4-3-1-1d","children":[]},{"level":5,"title":"4.3.2 2D","slug":"_4-3-2-2d","link":"#_4-3-2-2d","children":[]}]},{"level":4,"title":"4.4 Vector Projection","slug":"_4-4-vector-projection","link":"#_4-4-vector-projection","children":[]},{"level":4,"title":"4.5 The convolution theorem","slug":"_4-5-the-convolution-theorem","link":"#_4-5-the-convolution-theorem","children":[]}]}]}],"git":{"createdTime":1729412976000,"updatedTime":1730679093000,"contributors":[{"name":"Xiaoxianyue","email":"2310219843@qq.com","commits":1}]},"readingTime":{"minutes":6.55,"words":1966},"filePathRelative":"zh/Computer_Vision/ppt_234.md","localizedDate":"2024年10月18日"}');export{Be as comp,Te as data};
