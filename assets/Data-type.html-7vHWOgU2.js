import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,d as t}from"./app-BREbkeuk.js";const p="/assets/46714d20f0d9b1d503a18e12c17a3d7-wls8d-yD.png",e="/assets/46714d20f0d9b1d503a18e12c17a3d7-wls8d-yD.png",o={},c=t('<figure><img src="'+p+`" alt="46714d20f0d9b1d503a18e12c17a3d7" tabindex="0" loading="lazy"><figcaption>46714d20f0d9b1d503a18e12c17a3d7</figcaption></figure><h2 id="_1-数字型" tabindex="-1"><a class="header-anchor" href="#_1-数字型" aria-hidden="true">#</a> 1.数字型</h2><h3 id="_1-1代码示例" tabindex="-1"><a class="header-anchor" href="#_1-1代码示例" aria-hidden="true">#</a> 1.1代码示例</h3><p>1.整型</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>int_num <span class="token operator">=</span> <span class="token number">1</span>
t <span class="token operator">=</span> <span class="token builtin">type</span><span class="token punctuation">(</span>int_num<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>int_num<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;int num type is:&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;直接检测数据类型，并输出:&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span>int_num<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">#output</span>
<span class="token number">1</span>
<span class="token builtin">int</span> num <span class="token builtin">type</span> <span class="token keyword">is</span><span class="token punctuation">:</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;int&#39;</span><span class="token operator">&gt;</span>
直接检测数据类型，并输出<span class="token punctuation">:</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;int&#39;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2.浮点数</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>float_num <span class="token operator">=</span> <span class="token number">1.5</span>
t <span class="token operator">=</span> <span class="token builtin">type</span><span class="token punctuation">(</span>float_num<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>float_num<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;int float type is:&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;直接检测数据类型，并输出:&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span>float_num<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">#output</span>
<span class="token number">1.5</span>
<span class="token builtin">float</span> num <span class="token builtin">type</span> <span class="token keyword">is</span><span class="token punctuation">:</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;float&#39;</span><span class="token operator">&gt;</span>
直接检测数据类型，并输出<span class="token punctuation">:</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;float&#39;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-字符串" tabindex="-1"><a class="header-anchor" href="#_2-字符串" aria-hidden="true">#</a> 2.字符串</h3><h4 id="_2-1-代码示例" tabindex="-1"><a class="header-anchor" href="#_2-1-代码示例" aria-hidden="true">#</a> 2.1 代码示例</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>string <span class="token operator">=</span> <span class="token string">&quot;Hello&quot;</span>
t <span class="token operator">=</span> <span class="token builtin">type</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;string type is:&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;直接检测数据类型，并输出:&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span><span class="token builtin">type</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">#output</span>
Hello
string <span class="token builtin">type</span> <span class="token keyword">is</span><span class="token punctuation">:</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;str&#39;</span><span class="token operator">&gt;</span>
直接检测数据类型，并输出<span class="token punctuation">:</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;str&#39;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-2-三大特性" tabindex="-1"><a class="header-anchor" href="#_2-2-三大特性" aria-hidden="true">#</a> 2.2 三大特性</h4><p>1.有序性</p><p>​ 1.从左到右，下标是从0开始</p><p>​ 2.从右到左，下标是从-1开始</p><p>​ 3.引号里出现的都要算一个下标</p><p>2.不可变性</p><p>​ 1.字符串被创建出来后就不允许被改变；</p><p>​ 2.我们说的不可变，指在代码运行的过程中，不能有对字符串的修改，添加，删除之类的操作</p><p>3.任意字符：</p><p>​ 1.键盘上可以输入的字符，都可以是字符串的元素</p><p>​ 2.字符放到字符串里，都将成为字符串类型。也就是：里面的每一个元素都可以称为：子字符；</p><h2 id="_3-列表" tabindex="-1"><a class="header-anchor" href="#_3-列表" aria-hidden="true">#</a> 3.列表</h2><h3 id="_3-1-代码示例" tabindex="-1"><a class="header-anchor" href="#_3-1-代码示例" aria-hidden="true">#</a> 3.1 代码示例</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>lst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;Hello LCY&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1.1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&quot;look&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;book&quot;</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">&quot;汉堡包&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">]</span>
t <span class="token operator">=</span> <span class="token builtin">type</span><span class="token punctuation">(</span>lst<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>lst<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;lst type is:&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span> t<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;直接诶监测数据类型，并输出：&gt;&gt;&gt;&quot;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token punctuation">(</span>lst<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment">#output</span>
<span class="token punctuation">[</span><span class="token string">&#39;Hello LCY&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1.1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token string">&#39;look&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;book&#39;</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">&#39;汉堡包&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token boolean">False</span><span class="token punctuation">]</span>
lst <span class="token builtin">type</span> <span class="token keyword">is</span><span class="token punctuation">:</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;list&#39;</span><span class="token operator">&gt;</span>
直接诶监测数据类型，并输出：<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">&#39;list&#39;</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-三大特性" tabindex="-1"><a class="header-anchor" href="#_3-2-三大特性" aria-hidden="true">#</a> 3.2 三大特性</h3><p>1.有序性</p><p>​ 1.从左到右，下标是从0开始</p><p>​ 2.从右到左，下标是从-1开始</p><p>​ 3.列表里每个元素都要算一个下标</p><p>​ 1.比如：<code>lst = [&quot;aiyuechuang&quot;,12];</code></p><p>​ 2.<code>12</code>是下标1（从左到右），也是-1（从右到左）；</p><p>2.可变性：在程序运行·中，l列表可以改变[添加，删除，修改]</p><p>3.任意数据类型：这里说的任意数据类型，指的是Python中所有数据类型</p><details class="hint-container details"><summary>Python 所拥有的数据类型</summary><figure><img src="`+e+'" alt="46714d20f0d9b1d503a18e12c17a3d7" tabindex="0" loading="lazy"><figcaption>46714d20f0d9b1d503a18e12c17a3d7</figcaption></figure></details>',34),l=[c];function i(u,r){return s(),a("div",null,l)}const g=n(o,[["render",i],["__file","Data-type.html.vue"]]);export{g as default};
