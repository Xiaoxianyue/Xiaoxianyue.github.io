import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c,a as s,e as F,b as r,w as a,r as i,o as y,d as n}from"./app-wJZTzokE.js";const d="/assets/f6b36bf3cf1903eb3156497ed846a42-sdwr6-ze.png",u="/assets/image-20240809093712114-_lCmdxIr.png",E="/assets/image-20240809094406242-BypO0FO3.png",v={};function m(D,l){const p=i("CodeTabs");return y(),c("div",null,[l[18]||(l[18]=s("h2",{id:"如何创建一个电话簿",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#如何创建一个电话簿"},[s("span",null,"如何创建一个电话簿")])],-1)),l[19]||(l[19]=s("img",{src:d,alt:"f6b36bf3cf1903eb3156497ed846a42",style:{zoom:"50%"}},null,-1)),F(p,{id:"4",data:[{id:"Solution 1:"},{id:"Solution 2:"}]},{title0:a(({value:o,isActive:e})=>l[0]||(l[0]=[n("Solution 1:")])),title1:a(({value:o,isActive:e})=>l[1]||(l[1]=[n("Solution 2:")])),tab0:a(({value:o,isActive:e})=>l[2]||(l[2]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"lst1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," ["),s("span",{style:{color:"#E6DB74"}},"'李雷'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'韩梅梅'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'大卫'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'Mr.liu'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'Bornforthis'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'Alexa'"),s("span",{style:{color:"#F8F8F2"}},"]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"lst2 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," ["),s("span",{style:{color:"#E6DB74"}},"'123456'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'132456'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'154389'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'131452'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'180595'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'131559'"),s("span",{style:{color:"#F8F8F2"}},"]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"a "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF"}}," input"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'请输入你要查询的人的名称：'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"num "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," lst1.index(a)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"phone_num "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," lst2[num]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(phone_num)")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:a(({value:o,isActive:e})=>l[3]||(l[3]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"lst1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," ["),s("span",{style:{color:"#E6DB74"}},"'李雷'"),s("span",{style:{color:"#F8F8F2"}},","),s("span",{style:{color:"#E6DB74"}},"'123456'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'韩梅梅'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'132456'"),s("span",{style:{color:"#F8F8F2"}},","),s("span",{style:{color:"#E6DB74"}},"'大卫'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'154389'"),s("span",{style:{color:"#F8F8F2"}},","),s("span",{style:{color:"#E6DB74"}},"'Mr.liu'"),s("span",{style:{color:"#F8F8F2"}},","),s("span",{style:{color:"#E6DB74"}},"'131452'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'Bornforthis'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'180595'"),s("span",{style:{color:"#F8F8F2"}},","),s("span",{style:{color:"#E6DB74"}},"'Alexa'"),s("span",{style:{color:"#F8F8F2"}},","),s("span",{style:{color:"#E6DB74"}},"'131559'"),s("span",{style:{color:"#F8F8F2"}},"]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"a "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF"}}," input"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'请输入你要查询的人的名称：'"),s("span",{style:{color:"#F8F8F2"}},")")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"num "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," lst1.index(a)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"phone_num "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," lst1[num"),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},"]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(phone_num)")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),l[20]||(l[20]=r(`<p><strong>我们能不能用字典简单快捷地实现这个功能？</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">telephone_number </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> { </span><span style="color:#E6DB74;">&#39;李雷&#39;</span><span style="color:#F8F8F2;">:</span><span style="color:#E6DB74;">&#39;123456&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;韩梅梅&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;132456&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&#39;大卫&#39;</span><span style="color:#F8F8F2;">:</span><span style="color:#E6DB74;">&#39;154389&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&#39;Mr.liu&#39;</span><span style="color:#F8F8F2;">:</span><span style="color:#E6DB74;">&#39;131452&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;Bornforthis&#39;</span><span style="color:#F8F8F2;">:</span><span style="color:#E6DB74;">&#39;180595&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&#39;Alexa&#39;</span><span style="color:#F8F8F2;">:</span><span style="color:#E6DB74;">&#39;131559&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">search_name </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Enter your name: &#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">phone_num </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> telephone_number[search_name]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(phone_num)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>引出了我们今天要学习的内容：字典</strong></p><h2 id="_1-字典结构" tabindex="-1"><a class="header-anchor" href="#_1-字典结构"><span>1. 字典结构</span></a></h2><ul><li><p>用<code>{}</code>表示字典</p></li><li><p>字典内每个元素由两个元素组成： key 和 value：<code>{key1: value1, key2: value2, …}</code></p></li><li><p>各项用逗号隔开</p></li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">telephone_number </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> { </span><span style="color:#E6DB74;">&#39;李雷&#39;</span><span style="color:#F8F8F2;">:</span><span style="color:#E6DB74;">&#39;123456&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;韩梅梅&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;132456&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&#39;大卫&#39;</span><span style="color:#F8F8F2;">:</span><span style="color:#E6DB74;">&#39;154389&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&#39;Mr.liu&#39;</span><span style="color:#F8F8F2;">:</span><span style="color:#E6DB74;">&#39;131452&#39;</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>key 和 value 是一一对应的。同一个键只有一个对应的值。</li><li>键的类型是不可变的。</li><li>value 的类型是任意的。</li></ul><p>观察下列代码：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">names </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {[</span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">]: </span><span style="color:#E6DB74;">&#39;李雷&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;numbers&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;1234&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;Shelly&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;bool&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;int&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(names)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">Traceback (most recent call last):</span></span>
<span class="line"><span style="color:#F8F8F2;">  File </span><span style="color:#E6DB74;">&quot;C:\\Coder\\Lesson\\d.py&quot;</span><span style="color:#F8F8F2;">, line </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">in</span><span style="color:#F92672;"> &lt;</span><span style="color:#F8F8F2;">module</span><span style="color:#F92672;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    names </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {[</span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">]: </span><span style="color:#E6DB74;">&#39;李雷&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;numbers&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;1234&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;Shelly&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;bool&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;int&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">TypeError</span><span style="color:#F8F8F2;">: unhashable </span><span style="color:#66D9EF;font-style:italic;">type</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;list&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">相关信息</p><p>这里第一个 key ([‘name’])是列表（可变元素），而字典的键是不可变的，所以会报错。</p></div><p>观察下列代码：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">names </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;李雷&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;numbers&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;1234&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;Shelly&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;bool&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;int&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(names)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;Shelly&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;numbers&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;1234&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;bool&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;int&#39;</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>如果有几个名称类型一模一样的 key 则默认输出最后一个 key</p><p>可以理解为覆盖。</p></div><h2 id="_2-字典的创建方法" tabindex="-1"><a class="header-anchor" href="#_2-字典的创建方法"><span>2. 字典的创建方法</span></a></h2><h3 id="_2-1-方法一" tabindex="-1"><a class="header-anchor" href="#_2-1-方法一"><span>2.1 方法一</span></a></h3><p>根据其他序列创建新字典。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">message </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [(</span><span style="color:#E6DB74;">&#39;lilei&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">98</span><span style="color:#F8F8F2;">),(</span><span style="color:#E6DB74;">&#39;hanmeimei&#39;</span><span style="color:#F8F8F2;">,</span><span style="color:#AE81FF;">99</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#F8F8F2;">list_to_list </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> dict</span><span style="color:#F8F8F2;">(message)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(list_to_list)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;lilei&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">98</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;hanmeimei&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">99</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-方法二" tabindex="-1"><a class="header-anchor" href="#_2-2-方法二"><span>2.2 方法二</span></a></h3><p>根据关键字参数创建新字典</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">d </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> dict</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">lilei</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 98</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">hanmeimei</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 99</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(d)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;lilei&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">98</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;hanmeimei&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">99</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>缺点：key 只能是字符串，不能是数字，元组等等。局限了字典的功能。</p><h2 id="_3-访问字典数据" tabindex="-1"><a class="header-anchor" href="#_3-访问字典数据"><span>3. 访问字典数据</span></a></h2><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">grade </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;leon&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;98&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;shelly&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(grade[</span><span style="color:#E6DB74;">&#39;leon&#39;</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">98</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>但是当 key 不存在时</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">grade </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;leon&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;98&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;shelly&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;int&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(grade[</span><span style="color:#E6DB74;">&#39;Mary&#39;</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">Traceback (most recent call last):</span></span>
<span class="line"><span style="color:#F8F8F2;">  File </span><span style="color:#E6DB74;">&quot;C:\\Coder\\Lesson\\d.py&quot;</span><span style="color:#F8F8F2;">, line </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">in</span><span style="color:#F92672;"> &lt;</span><span style="color:#F8F8F2;">module</span><span style="color:#F92672;">&gt;</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(grade[</span><span style="color:#E6DB74;">&#39;Mary&#39;</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">KeyError</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;Mary&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>会报错。</p><p>我们不希望报错，而希望返回空。</p><h3 id="_3-1-get" tabindex="-1"><a class="header-anchor" href="#_3-1-get"><span>3.1 .get()</span></a></h3><p>当使用 get 方法时，需要提供一个 key ，方法会返回与该键关联的值。如果键在字典中不存在，get 方法将返回 None，或者你可以指定一个默认值，如果键不存在返回这个默认值。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">value </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> dictionary.get(key, default_value)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li>key: 你想检索的键</li><li>default_value ：如果键不存在时返回的值。不提供则默认为None。</li></ul><p>如下：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">grade </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;leon&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;98&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;shelly&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;int&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(grade.get(</span><span style="color:#E6DB74;">&#39;Jack&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;ahho&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">ahho</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-更新字典数据" tabindex="-1"><a class="header-anchor" href="#_4-更新字典数据"><span>4. 更新字典数据</span></a></h2><p>字典修改或添加的原则：有则改之，无则加勉 [无则添加]</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">grade </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;leon&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;98&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;shelly&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;int&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">grade[</span><span style="color:#E6DB74;">&#39;leon&#39;</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;99&#39;</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(grade)</span></span>
<span class="line"><span style="color:#F8F8F2;">grade[</span><span style="color:#E6DB74;">&#39;shy&#39;</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 100</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(grade)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;leon&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;shelly&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;int&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;leon&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;shelly&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;int&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;shy&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-字典的删除" tabindex="-1"><a class="header-anchor" href="#_5-字典的删除"><span>5. 字典的删除</span></a></h2><p>元素的删除：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">grade </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;leon&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;98&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;shelly&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;int&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F92672;">del</span><span style="color:#F8F8F2;"> grade[</span><span style="color:#E6DB74;">&#39;shelly&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(grade)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;leon&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;98&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;int&#39;</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>字典的清空（空字典）：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">grade </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;leon&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;98&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;shelly&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;int&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">grade.clear()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(grade)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">{}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>字典的消除：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">grade </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;leon&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;98&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;shelly&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;int&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F92672;">del</span><span style="color:#F8F8F2;"> grade</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(grade)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">Traceback (most recent call last):</span></span>
<span class="line"><span style="color:#F8F8F2;">  File </span><span style="color:#E6DB74;">&quot;C:\\Coder\\Lesson\\d.py&quot;</span><span style="color:#F8F8F2;">, line </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#F92672;">in</span><span style="color:#F92672;"> &lt;</span><span style="color:#F8F8F2;">module</span><span style="color:#F92672;">&gt;</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(grade)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">NameError</span><span style="color:#F8F8F2;">: name </span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F92672;"> is</span><span style="color:#F92672;"> not</span><span style="color:#F8F8F2;"> defined</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-嵌套" tabindex="-1"><a class="header-anchor" href="#_6-嵌套"><span>6. 嵌套</span></a></h2><p>将一系列字典存储在列表中，或将列表作为值存储在字典中。</p><ul><li>字典列表</li><li>在字典中存储列表</li><li>在字典中存储字典</li></ul>`,46)),F(p,{id:"180",data:[{id:"字典列表"},{id:"在字典中存储列表"},{id:"在字典中存储字典"}]},{title0:a(({value:o,isActive:e})=>l[4]||(l[4]=[n("字典列表")])),title1:a(({value:o,isActive:e})=>l[5]||(l[5]=[n("在字典中存储列表")])),title2:a(({value:o,isActive:e})=>l[6]||(l[6]=[n("在字典中存储字典")])),tab0:a(({value:o,isActive:e})=>l[7]||(l[7]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"student1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#E6DB74"}},"'name1'"),s("span",{style:{color:"#F8F8F2"}},":"),s("span",{style:{color:"#E6DB74"}},"'John'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'age1'"),s("span",{style:{color:"#F8F8F2"}},":"),s("span",{style:{color:"#AE81FF"}},"18"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'grade1'"),s("span",{style:{color:"#F8F8F2"}},":"),s("span",{style:{color:"#AE81FF"}},"99"),s("span",{style:{color:"#F8F8F2"}},"}")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"student2 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#E6DB74"}},"'name2'"),s("span",{style:{color:"#F8F8F2"}},":"),s("span",{style:{color:"#E6DB74"}},"'Hank'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'age2'"),s("span",{style:{color:"#F8F8F2"}},":"),s("span",{style:{color:"#AE81FF"}},"20"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'grade2'"),s("span",{style:{color:"#F8F8F2"}},":"),s("span",{style:{color:"#AE81FF"}},"100"),s("span",{style:{color:"#F8F8F2"}},"}")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"student3 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#E6DB74"}},"'name3'"),s("span",{style:{color:"#F8F8F2"}},":"),s("span",{style:{color:"#E6DB74"}},"'shelly'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'age3'"),s("span",{style:{color:"#F8F8F2"}},":"),s("span",{style:{color:"#AE81FF"}},"20"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'grade3'"),s("span",{style:{color:"#F8F8F2"}},":"),s("span",{style:{color:"#AE81FF"}},"120"),s("span",{style:{color:"#F8F8F2"}},"}")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"students "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," [student1, student2, student3]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"shelly_grade "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," students["),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},"]["),s("span",{style:{color:"#E6DB74"}},"'grade3'"),s("span",{style:{color:"#F8F8F2"}},"]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(shelly_grade)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(students)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#output")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"120")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"[{"),s("span",{style:{color:"#E6DB74"}},"'name1'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'John'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'age1'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"18"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'grade1'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"99"),s("span",{style:{color:"#F8F8F2"}},"}, {"),s("span",{style:{color:"#E6DB74"}},"'name2'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'Hank'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'age2'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"20"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'grade2'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"100"),s("span",{style:{color:"#F8F8F2"}},"}, {"),s("span",{style:{color:"#E6DB74"}},"'name3'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'shelly'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'age3'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"20"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'grade3'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"120"),s("span",{style:{color:"#F8F8F2"}},"}]")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:a(({value:o,isActive:e})=>l[8]||(l[8]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"f_class "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    'Leon'"),s("span",{style:{color:"#F8F8F2"}},": ["),s("span",{style:{color:"#E6DB74"}},"'math'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'physics'"),s("span",{style:{color:"#F8F8F2"}},"],")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    'shelly'"),s("span",{style:{color:"#F8F8F2"}},": ["),s("span",{style:{color:"#E6DB74"}},"'biology'"),s("span",{style:{color:"#F8F8F2"}},"],")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    'Hank'"),s("span",{style:{color:"#F8F8F2"}},": ["),s("span",{style:{color:"#E6DB74"}},"'English'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'chemicals'"),s("span",{style:{color:"#F8F8F2"}},"]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(f_class)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Leon_favorite "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," f_class["),s("span",{style:{color:"#E6DB74"}},"'Leon'"),s("span",{style:{color:"#F8F8F2"}},"]["),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},"]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(Leon_favorite)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#output")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"{"),s("span",{style:{color:"#E6DB74"}},"'Leon'"),s("span",{style:{color:"#F8F8F2"}},": ["),s("span",{style:{color:"#E6DB74"}},"'math'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'physics'"),s("span",{style:{color:"#F8F8F2"}},"], "),s("span",{style:{color:"#E6DB74"}},"'shelly'"),s("span",{style:{color:"#F8F8F2"}},": ["),s("span",{style:{color:"#E6DB74"}},"'biology'"),s("span",{style:{color:"#F8F8F2"}},"], "),s("span",{style:{color:"#E6DB74"}},"'Hank'"),s("span",{style:{color:"#F8F8F2"}},": ["),s("span",{style:{color:"#E6DB74"}},"'English'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'chemicals'"),s("span",{style:{color:"#F8F8F2"}},"]}")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"math")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab2:a(({value:o,isActive:e})=>l[9]||(l[9]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"student1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#E6DB74"}},'"name"'),s("span",{style:{color:"#F8F8F2"}},":"),s("span",{style:{color:"#E6DB74"}},"'Mike'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'grade'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'99'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'实验班'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"True"),s("span",{style:{color:"#F8F8F2"}},"}")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(student1)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"class1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    'Mike'"),s("span",{style:{color:"#F8F8F2"}},": {"),s("span",{style:{color:"#E6DB74"}},"'grade'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'99'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'试验班'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"True"),s("span",{style:{color:"#F8F8F2"}},"},")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},"    'Shelly'"),s("span",{style:{color:"#F8F8F2"}},": {"),s("span",{style:{color:"#E6DB74"}},"'grade'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'100'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'实验班'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"False"),s("span",{style:{color:"#F8F8F2"}},"}")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"}")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(class1)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Shelly "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," class1["),s("span",{style:{color:"#E6DB74"}},"'Shelly'"),s("span",{style:{color:"#F8F8F2"}},"]["),s("span",{style:{color:"#E6DB74"}},"'实验班'"),s("span",{style:{color:"#F8F8F2"}},"]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(Shelly)")]),n(`
`),s("span",{class:"line"}),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#output")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"{"),s("span",{style:{color:"#E6DB74"}},"'name'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'Mike'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'grade'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'99'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'实验班'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"True"),s("span",{style:{color:"#F8F8F2"}},"}")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"{"),s("span",{style:{color:"#E6DB74"}},"'Mike'"),s("span",{style:{color:"#F8F8F2"}},": {"),s("span",{style:{color:"#E6DB74"}},"'grade'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'99'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'试验班'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"True"),s("span",{style:{color:"#F8F8F2"}},"}, "),s("span",{style:{color:"#E6DB74"}},"'Shelly'"),s("span",{style:{color:"#F8F8F2"}},": {"),s("span",{style:{color:"#E6DB74"}},"'grade'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'100'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'实验班'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"False"),s("span",{style:{color:"#F8F8F2"}},"}}")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"False")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),_:1}),l[21]||(l[21]=r(`<h2 id="_7-字典的常见方法" tabindex="-1"><a class="header-anchor" href="#_7-字典的常见方法"><span>7. 字典的常见方法</span></a></h2><h3 id="_7-1-删除字典元素" tabindex="-1"><a class="header-anchor" href="#_7-1-删除字典元素"><span>7.1 删除字典元素</span></a></h3><h4 id="_7-1-1-pop" tabindex="-1"><a class="header-anchor" href="#_7-1-1-pop"><span>7.1.1 .pop()</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">student1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&quot;name&quot;</span><span style="color:#F8F8F2;">:</span><span style="color:#E6DB74;">&#39;Mike&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;实验班&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(student1)</span></span>
<span class="line"><span style="color:#F8F8F2;">student1.pop(</span><span style="color:#E6DB74;">&#39;实验班&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(student1)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;Mike&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;实验班&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;Mike&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_7-1-2-del" tabindex="-1"><a class="header-anchor" href="#_7-1-2-del"><span>7.1.2 del</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">student1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&quot;name&quot;</span><span style="color:#F8F8F2;">:</span><span style="color:#E6DB74;">&#39;Mike&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;实验班&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(student1)</span></span>
<span class="line"><span style="color:#F92672;">del</span><span style="color:#F8F8F2;"> student1[</span><span style="color:#E6DB74;">&#39;实验班&#39;</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(student1)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;Mike&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;实验班&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;Mike&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-2-popitem" tabindex="-1"><a class="header-anchor" href="#_7-2-popitem"><span>7.2 .popitem()</span></a></h3><p>用于移除并返回字典中的最后一个键值对。该方法会修改原字典，且删除的是最后插入的键值对。</p><p>关键点：</p><ol><li><p>删除最后一项： popitem 从字典中移除并返回最后插入的键对值</p></li><li><p>返回值：返回一个包含键和值的元组 <code>(key,value)</code></p></li><li><p>修改原字典：会使原字典发生改变</p></li><li><p>空字典报错：如果字典为空，调用 popitem 会引发 KeyError 异常</p></li></ol><p>popitem 方法是处理字典中最后插入项的有效工具，特别适用于需要按插入顺序删除和访问键值对的情况。</p><p>需要注意的是：如果字典为空，调用此方法会发生异常，因此在使用前最好检查是否为空或使用 try-except进行错误处理。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">student1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&quot;name&quot;</span><span style="color:#F8F8F2;">:</span><span style="color:#E6DB74;">&#39;Mike&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;实验班&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(student1)</span></span>
<span class="line"><span style="color:#F8F8F2;">del_val </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> student1.popitem()</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(del_val)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;Mike&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;实验班&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;实验班&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;Mike&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-3-keys" tabindex="-1"><a class="header-anchor" href="#_7-3-keys"><span>7.3 .keys()</span></a></h3><p>返回字典的所有 key 值</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">student1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&quot;name&quot;</span><span style="color:#F8F8F2;">:</span><span style="color:#E6DB74;">&#39;Mike&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;实验班&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(student1)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(student1.keys())</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">list</span><span style="color:#F8F8F2;">(student1.keys()))</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;Mike&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;实验班&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">dict_keys([</span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;实验班&#39;</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;实验班&#39;</span><span style="color:#F8F8F2;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-4-values" tabindex="-1"><a class="header-anchor" href="#_7-4-values"><span>7.4 .values()</span></a></h3><p>返回字典的所有 value 值</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">student1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&quot;name&quot;</span><span style="color:#F8F8F2;">:</span><span style="color:#E6DB74;">&#39;Mike&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;实验班&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(student1)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(student1.values())</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">list</span><span style="color:#F8F8F2;">(student1.values()))</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;Mike&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;实验班&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">dict_values([</span><span style="color:#E6DB74;">&#39;Mike&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#E6DB74;">&#39;Mike&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-5-items" tabindex="-1"><a class="header-anchor" href="#_7-5-items"><span>7.5 .items()</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">student1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&quot;name&quot;</span><span style="color:#F8F8F2;">:</span><span style="color:#E6DB74;">&#39;Mike&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;实验班&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(student1)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(student1.items())</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">list</span><span style="color:#F8F8F2;">(student1.items()))</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;Mike&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;实验班&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">dict_items([(</span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;Mike&#39;</span><span style="color:#F8F8F2;">), (</span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">), (</span><span style="color:#E6DB74;">&#39;实验班&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">)])</span></span>
<span class="line"><span style="color:#F8F8F2;">[(</span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;Mike&#39;</span><span style="color:#F8F8F2;">), (</span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">), (</span><span style="color:#E6DB74;">&#39;实验班&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">)]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对比这两种方法：</p>`,22)),F(p,{id:"270",data:[{id:"创建字典的方法一"},{id:".items()"}]},{title0:a(({value:o,isActive:e})=>l[10]||(l[10]=[n("创建字典的方法一")])),title1:a(({value:o,isActive:e})=>l[11]||(l[11]=[n(".items()")])),tab0:a(({value:o,isActive:e})=>l[12]||(l[12]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"message "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," [("),s("span",{style:{color:"#E6DB74"}},"'lilei'"),s("span",{style:{color:"#F8F8F2"}},","),s("span",{style:{color:"#AE81FF"}},"98"),s("span",{style:{color:"#F8F8F2"}},"),("),s("span",{style:{color:"#E6DB74"}},"'hanmeimei'"),s("span",{style:{color:"#F8F8F2"}},","),s("span",{style:{color:"#AE81FF"}},"99"),s("span",{style:{color:"#F8F8F2"}},")]")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"list_to_list "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," dict"),s("span",{style:{color:"#F8F8F2"}},"(message)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(list_to_list)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#output")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"{"),s("span",{style:{color:"#E6DB74"}},"'lilei'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"98"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'hanmeimei'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"99"),s("span",{style:{color:"#F8F8F2"}},"}")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:a(({value:o,isActive:e})=>l[13]||(l[13]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"message "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#E6DB74"}},"'lilei'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"98"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'hanmeimei'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"99"),s("span",{style:{color:"#F8F8F2"}},"}")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"list"),s("span",{style:{color:"#F8F8F2"}},"(message.items()))")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#output")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"[("),s("span",{style:{color:"#E6DB74"}},"'lilei'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"98"),s("span",{style:{color:"#F8F8F2"}},"), ("),s("span",{style:{color:"#E6DB74"}},"'hanmeimei'"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"99"),s("span",{style:{color:"#F8F8F2"}},")]")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),l[22]||(l[22]=s("p",null,"通过输出结果，可发现这两种方法互为逆方法",-1)),l[23]||(l[23]=s("h3",{id:"_7-6-判断字典是否存在某值",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_7-6-判断字典是否存在某值"},[s("span",null,"7.6 判断字典是否存在某值")])],-1)),l[24]||(l[24]=s("p",null,"判断 key 在不在字典中",-1)),F(p,{id:"287",data:[{id:"默认情况是判断 key 在不在字典"},{id:"也可以实现纯粹的判断"}]},{title0:a(({value:o,isActive:e})=>l[14]||(l[14]=[n("默认情况是判断 key 在不在字典")])),title1:a(({value:o,isActive:e})=>l[15]||(l[15]=[n("也可以实现纯粹的判断")])),tab0:a(({value:o,isActive:e})=>l[16]||(l[16]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"message "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#E6DB74"}},"'lilei'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"98"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'hanmeimei'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"99"),s("span",{style:{color:"#F8F8F2"}},"}")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'lilei'"),s("span",{style:{color:"#F92672"}}," in"),s("span",{style:{color:"#F8F8F2"}}," message)")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#output")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"True")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),tab1:a(({value:o,isActive:e})=>l[17]||(l[17]=[s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"message "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," {"),s("span",{style:{color:"#E6DB74"}},"'lilei'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"98"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#E6DB74"}},"'hanmeimei'"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#AE81FF"}},"99"),s("span",{style:{color:"#F8F8F2"}},"}")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},"'lilei'"),s("span",{style:{color:"#F92672"}}," in"),s("span",{style:{color:"#F8F8F2"}}," message.keys())")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"#output")]),n(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"True")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),l[25]||(l[25]=r(`<p>判断 value 在不在字典中</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">message </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;lilei&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">98</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;hanmeimei&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">99</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">98</span><span style="color:#F92672;"> in</span><span style="color:#F8F8F2;"> message.values())</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#AE81FF;">True</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-7-update" tabindex="-1"><a class="header-anchor" href="#_7-7-update"><span>7.7 .update()</span></a></h3><p>.update()是字典对象的一个重要方法，它允许你更新字典的内容，通过添加新的键值对或修改现有的键值对。</p><p>更新字典：你可以使用另一个字典来更新一个字典。这将添加新的键值对到原始字典中，并覆盖任何现有的键的值。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">student1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&quot;name&quot;</span><span style="color:#F8F8F2;">:</span><span style="color:#E6DB74;">&#39;Mike&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;实验班&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">more_info </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;age&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">19</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">student1.update(more_info)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(student1)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;Mike&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;实验班&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;age&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">19</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以使用关键字参数来进行修改</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">student1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&quot;name&quot;</span><span style="color:#F8F8F2;">:</span><span style="color:#E6DB74;">&#39;Mike&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;实验班&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">student1.update(</span><span style="color:#FD971F;font-style:italic;">grade</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">实验班</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> False</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(student1)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;Mike&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;实验班&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">False</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以传递一个可迭代对象，比如元组列表，其中每个元素都是一个键对值。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">student1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&quot;name&quot;</span><span style="color:#F8F8F2;">:</span><span style="color:#E6DB74;">&#39;Mike&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;实验班&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">data_list </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [(</span><span style="color:#E6DB74;">&#39;age&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">20</span><span style="color:#F8F8F2;">), (</span><span style="color:#E6DB74;">&#39;class&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">), (</span><span style="color:#E6DB74;">&#39;gender&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;male&#39;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#F8F8F2;">student1.update(data_list)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(student1)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;Mike&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;grade&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;99&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;实验班&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;age&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">20</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;class&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;gender&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;male&#39;</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-小试牛刀" tabindex="-1"><a class="header-anchor" href="#_8-小试牛刀"><span>8. 小试牛刀</span></a></h2><p>获取用户输入两组数据：列表、元组</p><p>不能使用 eval</p><p>对目标字典进行操作。</p><p>TODO: 列表数组为 key，元组数据为 Value</p><p><code>dict1 = {&#39;a&#39;: 1, &#39;b&#39;: 2, &#39;c&#39;: 3, &#39;d&#39;: 4, &#39;e&#39;: 5, &#39;f&#39;: 6}</code></p><p><code>Eneter your list:&gt;&gt;&gt;a/b/c</code></p><p><code>Eneter your value:&gt;&gt;&gt;13-14-19</code></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">key </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Enter your list:&gt;&gt;&gt;&#39;</span><span style="color:#F8F8F2;">).replace(</span><span style="color:#E6DB74;">&#39; &#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">).split(</span><span style="color:#E6DB74;">&#39;/&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">value </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Enter your value:&gt;&gt;&gt;&#39;</span><span style="color:#F8F8F2;">).replace(</span><span style="color:#E6DB74;">&#39; &#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;&#39;</span><span style="color:#F8F8F2;">).split(</span><span style="color:#E6DB74;">&#39;-&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">int_value </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> list</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">map</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">,value))</span></span>
<span class="line"><span style="color:#F8F8F2;">zipped </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> zip</span><span style="color:#F8F8F2;">(key, int_value)</span></span>
<span class="line"><span style="color:#F8F8F2;">dictionary </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> dict</span><span style="color:#F8F8F2;">(zipped)</span></span>
<span class="line"><span style="color:#F8F8F2;">goal_dic </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;d&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;e&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;f&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">goal_dic.update(dictionary)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(goal_dic)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">Enter your </span><span style="color:#66D9EF;font-style:italic;">list</span><span style="color:#F8F8F2;">:</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#F8F8F2;">a</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">b</span><span style="color:#F92672;">/</span><span style="color:#F8F8F2;">c</span></span>
<span class="line"><span style="color:#F8F8F2;">Enter your value:</span><span style="color:#F92672;">&gt;&gt;&gt;</span><span style="color:#AE81FF;">12</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">13</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">14</span></span>
<span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">12</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">13</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">14</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;d&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;e&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;f&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9-字典的排序" tabindex="-1"><a class="header-anchor" href="#_9-字典的排序"><span>9. 字典的排序</span></a></h2><h3 id="_9-1-sorted" tabindex="-1"><a class="header-anchor" href="#_9-1-sorted"><span>9.1 sorted()</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;d&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">sorted_data </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> sorted</span><span style="color:#F8F8F2;">(data.items())</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(sorted_data)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">[(</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">), (</span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">), (</span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">), (</span><span style="color:#E6DB74;">&#39;d&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">)]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以字母顺序来排序。</p><h3 id="_9-2-lambda" tabindex="-1"><a class="header-anchor" href="#_9-2-lambda"><span>9.2 lambda</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;d&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">sorted_data </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> sorted</span><span style="color:#F8F8F2;">(data.items())</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(sorted_data)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">[(</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">), (</span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">), (</span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">), (</span><span style="color:#E6DB74;">&#39;d&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">)]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面这个例子，我们希望以数字顺序来排序。</p><p><strong>引入lambda。</strong></p><p>以 value 排序：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;d&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">sorted_data </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> sorted</span><span style="color:#F8F8F2;">(data.items(), </span><span style="color:#FD971F;font-style:italic;">key</span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;">lambda</span><span style="color:#FD971F;font-style:italic;"> item</span><span style="color:#F8F8F2;">: item[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(sorted_data)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">[(</span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">), (</span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">), (</span><span style="color:#E6DB74;">&#39;d&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">), (</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">)]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以 key 排序：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;d&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">sorted_data </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> sorted</span><span style="color:#F8F8F2;">(data.items(), </span><span style="color:#FD971F;font-style:italic;">key</span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;">lambda</span><span style="color:#FD971F;font-style:italic;"> item</span><span style="color:#F8F8F2;">: item[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(sorted_data)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">[(</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">), (</span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">), (</span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">), (</span><span style="color:#E6DB74;">&#39;d&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">)]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>拓展：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">lst </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [(</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;c3&#39;</span><span style="color:#F8F8F2;">), (</span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;a1&#39;</span><span style="color:#F8F8F2;">), (</span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b2&#39;</span><span style="color:#F8F8F2;">)]</span></span>
<span class="line"><span style="color:#F8F8F2;">sorted_data </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> sorted</span><span style="color:#F8F8F2;">(lst, </span><span style="color:#FD971F;font-style:italic;">key</span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;">lambda</span><span style="color:#FD971F;font-style:italic;"> item</span><span style="color:#F8F8F2;">: item[</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(sorted_data)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">[(</span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;a1&#39;</span><span style="color:#F8F8F2;">), (</span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b2&#39;</span><span style="color:#F8F8F2;">), (</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;c3&#39;</span><span style="color:#F8F8F2;">)]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为什么这里不需要 .items() 了？</p><p>根据7.5里面的对比我们发现：</p><div class="hint-container important"><p class="hint-container-title">重要</p><p>.items() 可以把字典<code>{‘a’:1,’b’:2}</code>的形式转换成元组列表形式<code>[(&#39;a&#39;,1),(&#39;b&#39;,2)]</code>。而这里已经给的是元组列表的形式了。不需要再用 .items() 进行转换了。</p></div><h3 id="_9-3-例题" tabindex="-1"><a class="header-anchor" href="#_9-3-例题"><span>9.3 例题</span></a></h3><h4 id="_1" tabindex="-1"><a class="header-anchor" href="#_1"><span>1.</span></a></h4><p><strong>描述</strong>：给定一个字典，其中键是学生的名字，值是一个元组，包含学生的年龄和他们的成绩。编写一个程序，该程序返回按成绩（grade）从小到大排序的学生名单。</p><p><strong>示例输入</strong>：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">students </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#E6DB74;">    &#39;Alice&#39;</span><span style="color:#F8F8F2;">: (</span><span style="color:#AE81FF;">20</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">85</span><span style="color:#F8F8F2;">), </span><span style="color:#88846F;"># name: (age, grade)</span></span>
<span class="line"><span style="color:#E6DB74;">    &#39;Bob&#39;</span><span style="color:#F8F8F2;">: (</span><span style="color:#AE81FF;">22</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">90</span><span style="color:#F8F8F2;">),</span></span>
<span class="line"><span style="color:#E6DB74;">    &#39;Charlie&#39;</span><span style="color:#F8F8F2;">: (</span><span style="color:#AE81FF;">21</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">88</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例输出</strong>：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#E6DB74;">&#39;Alice&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;Charlie&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;Bob&#39;</span><span style="color:#F8F8F2;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Solution:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">students </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#E6DB74;">    &#39;Alice&#39;</span><span style="color:#F8F8F2;">: (</span><span style="color:#AE81FF;">20</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">85</span><span style="color:#F8F8F2;">), </span><span style="color:#88846F;"># name: (age, grade)</span></span>
<span class="line"><span style="color:#E6DB74;">    &#39;Bob&#39;</span><span style="color:#F8F8F2;">: (</span><span style="color:#AE81FF;">22</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">90</span><span style="color:#F8F8F2;">),</span></span>
<span class="line"><span style="color:#E6DB74;">    &#39;Charlie&#39;</span><span style="color:#F8F8F2;">: (</span><span style="color:#AE81FF;">21</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">88</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">sorted_data </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> sorted</span><span style="color:#F8F8F2;">(students.items(), </span><span style="color:#FD971F;font-style:italic;">key</span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;">lambda</span><span style="color:#FD971F;font-style:italic;"> item</span><span style="color:#F8F8F2;">: item[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">][</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">list</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">dict</span><span style="color:#F8F8F2;">(sorted_data).keys()))</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">[</span><span style="color:#E6DB74;">&#39;Alice&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;Charlie&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;Bob&#39;</span><span style="color:#F8F8F2;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10-字典的深浅拷贝" tabindex="-1"><a class="header-anchor" href="#_10-字典的深浅拷贝"><span>10. 字典的深浅拷贝</span></a></h2><h3 id="_10-1-浅拷贝" tabindex="-1"><a class="header-anchor" href="#_10-1-浅拷贝"><span>10.1 浅拷贝</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">original </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">: [</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]}</span></span>
<span class="line"><span style="color:#F8F8F2;">after </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> original.copy()</span></span>
<span class="line"><span style="color:#F8F8F2;">after[</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 19</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;After: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">after</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;Original: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">original</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">After: {</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">19</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">: [</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]}</span></span>
<span class="line"><span style="color:#F8F8F2;">Original: {</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">: [</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="`+u+`" alt="image-20240809093712114" style="zoom:50%;"><h3 id="_10-2-深拷贝" tabindex="-1"><a class="header-anchor" href="#_10-2-深拷贝"><span>10.2 深拷贝</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> copy</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">original </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">: [</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]}</span></span>
<span class="line"><span style="color:#F8F8F2;">after </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> copy.deepcopy(original)</span></span>
<span class="line"><span style="color:#F8F8F2;">after[</span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 4</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;After: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">after</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;Original: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">original</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">After: {</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">Original: {</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">: [</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">]}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="`+E+`" alt="image-20240809094406242" style="zoom:50%;"><ul><li><p><strong>浅拷贝</strong>：复制对象，但不复制对象中的嵌套对象。修改浅拷贝的嵌套对象会影响到原始对象。</p></li><li><p><strong>深拷贝</strong>：递归复制对象及其所有嵌套对象。修改深拷贝的任何部分都不会影响原始对象。</p></li></ul><h3 id="_10-3-例题" tabindex="-1"><a class="header-anchor" href="#_10-3-例题"><span>10.3 例题</span></a></h3><p><strong>描述</strong>：给定两个字典，编写一个程序，将这两个字典合并成一个。如果同一个键在两个字典中都有，则它的值应为两个字典中的值相加。假设字典中的值都是整数。</p><p><strong>示例输入</strong>：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">dict1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">dict2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;d&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>示例输出</strong>：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">{</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;d&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Solution:</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">dict1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;a&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">dict2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;b&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;c&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;d&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">merged_dict </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> dict1.copy()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> key, value </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> dict2.items():</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> key </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> merged_dict:</span></span>
<span class="line"><span style="color:#F8F8F2;">        merged_dict[key] </span><span style="color:#F92672;">+=</span><span style="color:#F8F8F2;"> value</span></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        merged_dict[key] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> value</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(merged_dict)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(dict1)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,61))])}const B=t(v,[["render",m]]),g=JSON.parse('{"path":"/zh/python1v1/Dictionary.html","title":"07-字典","lang":"zh-CN","frontmatter":{"title":"07-字典","icon":"python","date":"2024-08-07T10:24:21.000Z","author":"XiaoXianYue","isOriginal":true,"category":["课堂笔记"],"tag":["课堂笔记"],"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"feed":false,"seo":false,"head":[]},"git":{"createdTime":1723003670000,"updatedTime":1723431709000,"contributors":[{"name":"Xiaoxianyue","username":"Xiaoxianyue","email":"2310219843@qq.com","commits":5,"url":"https://github.com/Xiaoxianyue"}]},"readingTime":{"minutes":9.36,"words":2807},"filePathRelative":"zh/python1v1/Dictionary.md","localizedDate":"2024年8月7日"}');export{B as comp,g as data};
