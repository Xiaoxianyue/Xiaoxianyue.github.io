import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,b as l,o as e}from"./app-COYsNQIt.js";const o="/assets/image-20250306181350302-D-6LoUhv.png",p="/assets/image-20250306181315763-CUxOPA1Z.png",t="/assets/image-20250306181633373-oHpZPuFU.png",i="/assets/image-20250306181753489-Cr9FGpYc.png",c="/assets/image-20250306181823864-dd8GrLgK.png",r="/assets/image-20250306213305249-Czj-9yOx.png",F="/assets/image-20250306213642167-kXdxCLvk.png",d="/assets/image-20250306214402940-ChWWSkpm.png",y="/assets/image-20250306214522087-Cza1C7UK.png",m="/assets/image-20250306153323820-jTIQyrsi.png",u="/assets/image-20250306173254790-DLKOJejp.png",h="/assets/image-20250306173504496-BUCbphaw.png",v="/assets/image-20250306171333171-DvXb1RYK.png",g="/assets/image-20250306172957777-DkfYlYcH.png",b="/assets/image-20250306173639863-C-xZms88.png",D={};function _(f,s){return e(),n("div",null,s[0]||(s[0]=[l('<h2 id="task-01" tabindex="-1"><a class="header-anchor" href="#task-01"><span>Task 01</span></a></h2><blockquote><p>用大模型辅助了解判别动态网页和静态网页的方法，并简要总结</p></blockquote><h3 id="_1-url" tabindex="-1"><a class="header-anchor" href="#_1-url"><span>1. URL</span></a></h3><ul><li>静态网页以 <code>.html</code>或者<code>.htm</code>结尾，如：<code>https://top.zhan.com/toefl/listen/alltpo.html</code></li></ul><img src="'+o+'" alt="image-20250306181350302" style="zoom:50%;"><ul><li>动态网页的URL通常带有参数，如 <code>https://www.ctrip.com/?allianceid=564348&amp;sid=18845228</code></li></ul><img src="'+p+'" alt="image-20250306181315763" style="zoom:25%;"><h3 id="_2-html-内容" tabindex="-1"><a class="header-anchor" href="#_2-html-内容"><span>2. HTML 内容</span></a></h3><ul><li>静态网页的 HTML 内容是完整的。静态网页的内容固定，不会根据用户的操作或输入发生变化。</li></ul><img src="'+t+'" alt="image-20250306181633373" style="zoom:25%;"><ul><li>动态网页的源代码是动态生成。这就意味着，同一个 URL，右键查看源代码后，源代码内容却不一样，这是由于动态 HTML 网页代码是JavaScript或后端代码动态生成的。动态网页通常会根据用户操作（如搜索、登录、提交表单）返回不同的内容。如下图所示：</li></ul><img src="'+i+'" alt="image-20250306181753489" style="zoom:25%;"><img src="'+c+'" alt="image-20250306181823864" style="zoom:25%;"><h3 id="_3-尝试离线访问" tabindex="-1"><a class="header-anchor" href="#_3-尝试离线访问"><span>3. 尝试离线访问：</span></a></h3><ul><li>静态网页可以直接保存HTML文件并在本地打开，内容不会改变。</li><li>动态网页通常依赖服务器端数据和逻辑，离线打开时功能可能失效。</li></ul><h4 id="验证静态网站" tabindex="-1"><a class="header-anchor" href="#验证静态网站"><span>验证静态网站</span></a></h4><p>接下来我们来进行验证，依旧是使用上面两个 URL：</p><ul><li>首先在静态网页上右键，选择另存为，桌面上出现文件夹：</li></ul><img src="'+r+'" alt="image-20250306213305249" style="zoom:33%;"><ul><li>关闭网络，点开下面的后缀为 <code>.html</code> 的文件，看看能不能访问：</li></ul><img src="'+F+'" alt="image-20250306213642167" style="zoom:50%;"><ul><li>可以看到，网页可以正常打开，但是内容也有些显示不全，有可能是因为网站部分图片、CSS 样式、JavaScript 代码 托管在 CDN（内容分发网络）。</li></ul><h4 id="验证动态网站" tabindex="-1"><a class="header-anchor" href="#验证动态网站"><span>验证动态网站</span></a></h4><ul><li>同样网页另存为：</li></ul><img src="'+d+'" alt="image-20250306214402940" style="zoom:50%;"><ul><li>关闭网络，点击看看：</li></ul><img src="'+y+'" alt="image-20250306214522087" style="zoom:67%;"><ul><li>一些动态滑动的内容和弹窗不见了，但是保留了一定的静态内容，比如一些酒店推荐。</li></ul><h4 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h4><ul><li>这种方法不太适用于判断网站是否静态，因为静态网站上可能也存在无法另存的内容，动态网站上可能也有静态内容，所以单独用这种方法不太可靠，还需结合其他方法判断。</li></ul><h2 id="task-02" tabindex="-1"><a class="header-anchor" href="#task-02"><span>Task 02</span></a></h2><h3 id="获取动态加载内容" tabindex="-1"><a class="header-anchor" href="#获取动态加载内容"><span>获取动态加载内容</span></a></h3><ul><li><p>在开发者工具中，切换到 <strong>Network</strong> 选项卡。</p></li><li><p>确保勾选了 <strong>XHR</strong> 或 <strong>Fetch</strong> 过滤器，以便只显示动态加载的请求。</p></li><li><p>查找返回 JSON 数据的请求（通常以 <code>.json</code> 结尾，或响应头中包含 <code>Content-Type: application/json</code>）。</p></li></ul><img src="'+m+`" alt="image-20250306153323820" style="zoom:25%;"><h3 id="代码" tabindex="-1"><a class="header-anchor" href="#代码"><span>代码</span></a></h3><p>天猫网页的URL</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> requests</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> json</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">url </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;https://h5api.m.tmall.com/h5/mtop.tmall.kangaroo.core.service.route.aldlampservicefixedresv2/1.0/?jsv=2.7.2&amp;appKey=12574478&amp;t=1741245548145&amp;sign=2cf6ed7f5a70184d34fcb1aded410b0c&amp;api=mtop.tmall.kangaroo.core.service.route.aldlampservicefixedresv2&amp;type=originaljson&amp;v=1.0&amp;dataType=jsonp&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">headers </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#E6DB74;">    &#39;User-Agent&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36 Edg/133.0.0.0&#39;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">response </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> requests.get(url, </span><span style="color:#FD971F;font-style:italic;">headers</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">headers)</span></span>
<span class="line"><span style="color:#88846F;"># print(response.text)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> response.status_code </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 200</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">    try</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> response.json()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">        with</span><span style="color:#66D9EF;"> open</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;website_data.json&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;w&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">encoding</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&quot;utf-8&quot;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">as</span><span style="color:#F8F8F2;"> file:</span></span>
<span class="line"><span style="color:#F8F8F2;">            json.dump(data, file, </span><span style="color:#FD971F;font-style:italic;">indent</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">ensure_ascii</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">False</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;JSON数据已成功保存到 website_data.json&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    except</span><span style="color:#F8F8F2;"> json.JSONDecodeError:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;响应内容不是JSON格式！&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;请求失败，状态码：</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">response.status_code</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="结果" tabindex="-1"><a class="header-anchor" href="#结果"><span>结果</span></a></h3><p>目录下出现了一个叫 <code>website_data.json</code>的文件：</p><img src="`+u+'" alt="image-20250306173254790" style="zoom:50%;"><p>文件内容：</p><img src="'+h+`" alt="image-20250306173504496" style="zoom:33%;"><h3 id="读取文件" tabindex="-1"><a class="header-anchor" href="#读取文件"><span>读取文件</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> json</span></span>
<span class="line"><span style="color:#F92672;">with</span><span style="color:#66D9EF;"> open</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;website_data.json&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;r&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">encoding</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&quot;utf-8&quot;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">as</span><span style="color:#F8F8F2;"> file:</span></span>
<span class="line"><span style="color:#F8F8F2;">    loaded_data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> json.load(file)</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;从文件中读取的 JSON 数据：&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(json.dumps(loaded_data, </span><span style="color:#FD971F;font-style:italic;">indent</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">ensure_ascii</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">False</span><span style="color:#F8F8F2;">))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><img src="`+v+`" alt="image-20250306171333171" style="zoom:33%;"><h3 id="写文件" tabindex="-1"><a class="header-anchor" href="#写文件"><span>写文件</span></a></h3><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> json</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">info </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#E6DB74;">    &#39;Name&#39;</span><span style="color:#F8F8F2;">:</span><span style="color:#E6DB74;">&quot;Json 中国&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#E6DB74;">    &quot;url&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&quot;http://www.json.org.cn&quot;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#E6DB74;">    &quot;links&quot;</span><span style="color:#F8F8F2;">:[</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span><span style="color:#E6DB74;">&quot;name&quot;</span><span style="color:#F8F8F2;">:</span><span style="color:#E6DB74;">&quot;Google&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;url&#39;</span><span style="color:#F8F8F2;">:</span><span style="color:#E6DB74;">&#39;http://www.google.com&#39;</span><span style="color:#F8F8F2;">},</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span><span style="color:#E6DB74;">&quot;name&quot;</span><span style="color:#F8F8F2;">:</span><span style="color:#E6DB74;">&quot;Facebook&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;url&#39;</span><span style="color:#F8F8F2;">:</span><span style="color:#E6DB74;">&#39;http://www.facebook.com&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">    ]</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">with</span><span style="color:#66D9EF;"> open</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;website_data.json&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;w&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">encoding</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;utf-8&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">as</span><span style="color:#F8F8F2;"> fp:</span></span>
<span class="line"><span style="color:#F8F8F2;">    json.dump(info, fp, </span><span style="color:#FD971F;font-style:italic;">indent</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">ensure_ascii</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">False</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;JSON 数据已成功写入 jsonfile.json&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">with</span><span style="color:#66D9EF;"> open</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;website_data.json&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;r&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">encoding</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;utf-8&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">as</span><span style="color:#F8F8F2;"> fp:</span></span>
<span class="line"><span style="color:#F8F8F2;">    loaded_data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> json.load(fp)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;从文件中读取的 JSON 数据：&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(json.dumps(loaded_data, </span><span style="color:#FD971F;font-style:italic;">indent</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">ensure_ascii</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">False</span><span style="color:#F8F8F2;">))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>运行结果：</p><img src="`+g+'" alt="image-20250306172957777" style="zoom:33%;"><p>文件内容也改变：</p><img src="'+b+'" alt="image-20250306173639863" style="zoom:50%;">',52)]))}const k=a(D,[["render",_]]),B=JSON.parse('{"path":"/zh/Big_Data/s_ass03.html","title":"大数据小作业 04","lang":"zh-CN","frontmatter":{"title":"大数据小作业 04","icon":"alias","date":"2025-03-06T15:23:28.000Z","author":"XiaoXianYue","isOriginal":true,"category":["大三下","大数据"],"tag":["大三下","大数据"],"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"description":"Task 01 用大模型辅助了解判别动态网页和静态网页的方法，并简要总结 1. URL 静态网页以 .html或者.htm结尾，如：https://top.zhan.com/toefl/listen/alltpo.html image-20250306181350302 动态网页的URL通常带有参数，如 https://www.ctrip.com/?a...","head":[["meta",{"property":"og:url","content":"https://bougiemoonintaurus/zh/Big_Data/s_ass03.html"}],["meta",{"property":"og:site_name","content":"奶酪奶酪"}],["meta",{"property":"og:title","content":"大数据小作业 04"}],["meta",{"property":"og:description","content":"Task 01 用大模型辅助了解判别动态网页和静态网页的方法，并简要总结 1. URL 静态网页以 .html或者.htm结尾，如：https://top.zhan.com/toefl/listen/alltpo.html image-20250306181350302 动态网页的URL通常带有参数，如 https://www.ctrip.com/?a..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-19T17:01:16.000Z"}],["meta",{"property":"article:author","content":"XiaoXianYue"}],["meta",{"property":"article:tag","content":"大三下"}],["meta",{"property":"article:tag","content":"大数据"}],["meta",{"property":"article:published_time","content":"2025-03-06T15:23:28.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-19T17:01:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"大数据小作业 04\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-06T15:23:28.000Z\\",\\"dateModified\\":\\"2025-03-19T17:01:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XiaoXianYue\\"}]}"]]},"git":{"createdTime":1742403676000,"updatedTime":1742403676000,"contributors":[{"name":"Xiaoxianyue","username":"Xiaoxianyue","email":"2310219843@qq.com","commits":1,"url":"https://github.com/Xiaoxianyue"}]},"readingTime":{"minutes":3.58,"words":1074},"filePathRelative":"zh/Big_Data/s_ass03.md","localizedDate":"2025年3月6日","excerpt":"<h2>Task 01</h2>\\n<blockquote>\\n<p>用大模型辅助了解判别动态网页和静态网页的方法，并简要总结</p>\\n</blockquote>\\n<h3>1. URL</h3>\\n<ul>\\n<li>静态网页以 <code>.html</code>或者<code>.htm</code>结尾，如：<code>https://top.zhan.com/toefl/listen/alltpo.html</code></li>\\n</ul>\\n\\n<ul>\\n<li>动态网页的URL通常带有参数，如 <code>https://www.ctrip.com/?allianceid=564348&amp;sid=18845228</code></li>\\n</ul>","autoDesc":true}');export{k as comp,B as data};
