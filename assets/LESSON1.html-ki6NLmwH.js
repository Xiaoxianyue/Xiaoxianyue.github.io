import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as t,o as p,c as o,a as n,b as s,d as i,e as c}from"./app-6q5pIc7G.js";const l={},r=n("h2",{id:"_1-如何创建笔记",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-如何创建笔记","aria-hidden":"true"},"#"),s(" 1. 如何创建笔记")],-1),u=n("li",null,[n("p",null,"文件取名：文件名不能空格，要用–或_代替")],-1),d={href:"https://bornforthis.cn/python/#/",target:"_blank",rel:"noopener noreferrer"},k=n("li",null,[n("p",null,[s("在笔记上创建链接"),n("code",null,"[链接名称](链接)")])],-1),v=n("li",null,[n("p",null,"标题分级： 二级标题 ##+空格+（标题号）"),n("p",null,"三级标题###+空格+（标题号)"),n("p",null,"…..以此类推")],-1),m=c(`<h2 id="_2-变量" tabindex="-1"><a class="header-anchor" href="#_2-变量" aria-hidden="true">#</a> 2. 变量</h2><h3 id="_2-1-从字面意思理解变量" tabindex="-1"><a class="header-anchor" href="#_2-1-从字面意思理解变量" aria-hidden="true">#</a> 2.1 从字面意思理解变量</h3><ul><li>变：变化</li><li>量：大小</li></ul><h4 id="_2-1-1-austin-与-jaden例子" tabindex="-1"><a class="header-anchor" href="#_2-1-1-austin-与-jaden例子" aria-hidden="true">#</a> 2.1.1 Austin 与 Jaden例子</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Austin <span class="token operator">=</span> <span class="token string">&quot;Coke&quot;</span>
Jaden <span class="token operator">=</span> <span class="token string">&quot;juice&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Austin&quot;</span><span class="token punctuation">,</span> Austin<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Jaden&quot;</span><span class="token punctuation">,</span> Jaden<span class="token punctuation">)</span>
Cup <span class="token operator">=</span> Austin
Austin <span class="token operator">=</span> Jaden
Jaden <span class="token operator">=</span> Cup
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Austin&quot;</span><span class="token punctuation">,</span> Austin<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Jaden&quot;</span><span class="token punctuation">,</span> Jaden<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-如何创建变量" tabindex="-1"><a class="header-anchor" href="#_2-2-如何创建变量" aria-hidden="true">#</a> 2.2 如何创建变量</h3><h4 id="_2-2-1-程序的运行逻辑-从上到下-从右到左-最后才是赋值" tabindex="-1"><a class="header-anchor" href="#_2-2-1-程序的运行逻辑-从上到下-从右到左-最后才是赋值" aria-hidden="true">#</a> 2.2.1 程序的运行逻辑：从上到下，从右到左，最后才是赋值</h4><h4 id="_2-2-2-变量的赋值" tabindex="-1"><a class="header-anchor" href="#_2-2-2-变量的赋值" aria-hidden="true">#</a> 2.2.2 变量的赋值</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>x <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment">#1赋值给x</span>
x <span class="token operator">=</span> x <span class="token operator">+</span> <span class="token number">1</span> <span class="token comment">#x代表1， 所以x + 1 = 2 最后2赋值给x</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token comment">#井号注释 快捷键：Ctrl键+/</span>
<span class="token comment">#变量的覆盖：</span>
name1 <span class="token operator">=</span> <span class="token string">&quot;lilei&quot;</span>
name1 <span class="token operator">=</span> <span class="token string">&quot;xiaoxianyue&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>name1<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-2-3输出结果换行与不换" tabindex="-1"><a class="header-anchor" href="#_2-2-3输出结果换行与不换" aria-hidden="true">#</a> 2.2.3输出结果换行与不换</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> <span class="token number">1</span>
b <span class="token operator">=</span> <span class="token number">1</span>
c <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
<span class="token comment">#输出结果不换行</span>
a <span class="token operator">=</span> <span class="token number">1</span>
b <span class="token operator">=</span> <span class="token number">1</span>
c <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span> <span class="token comment">#输出默认以空格间隔</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-4-end-与-sep" tabindex="-1"><a class="header-anchor" href="#_2-2-4-end-与-sep" aria-hidden="true">#</a> 2.2.4 end 与 sep</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment">#输出结果怎么手动换行？(end):</span>
a <span class="token operator">=</span> <span class="token number">1</span>
b <span class="token operator">=</span> <span class="token number">1</span>
c <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span> <span class="token comment">#end控制语句的结尾，\\n表示 a new line</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span>
<span class="token comment">#(sep):</span>
a <span class="token operator">=</span> <span class="token number">1</span>
b <span class="token operator">=</span> <span class="token number">1</span>
c <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span> <span class="token comment">#输出默认以空格间隔 怎么改空格？</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">,</span> sep<span class="token operator">=</span> <span class="token string">&quot;okokok&quot;</span><span class="token punctuation">)</span><span class="token comment">#sep控制间隔</span>
<span class="token comment">#end 与 sep可以同时使用</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-3进阶的赋值方法" tabindex="-1"><a class="header-anchor" href="#_2-3进阶的赋值方法" aria-hidden="true">#</a> 2.3进阶的赋值方法</h3><h4 id="_2-3-1-同时给多个变量赋予同一个内容" tabindex="-1"><a class="header-anchor" href="#_2-3-1-同时给多个变量赋予同一个内容" aria-hidden="true">#</a> 2.3.1 同时给多个变量赋予同一个内容</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a <span class="token operator">=</span> b <span class="token operator">=</span> c <span class="token operator">=</span> <span class="token number">100</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="_2-3-2-同时给多个变量赋予不同的内容" tabindex="-1"><a class="header-anchor" href="#_2-3-2-同时给多个变量赋予不同的内容" aria-hidden="true">#</a> 2.3.2 同时给多个变量赋予不同的内容</h4><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="_2-3-2-1接austin-与-jaden的例子" tabindex="-1"><a class="header-anchor" href="#_2-3-2-1接austin-与-jaden的例子" aria-hidden="true">#</a> 2.3.2.1接Austin 与 Jaden的例子</h5><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>Austin <span class="token operator">=</span> <span class="token string">&quot;Coke&quot;</span>
Jaden <span class="token operator">=</span> <span class="token string">&quot;juice&quot;</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Austin&quot;</span><span class="token punctuation">,</span> Austin<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Jaden&quot;</span><span class="token punctuation">,</span> Jaden<span class="token punctuation">)</span>
Jaden<span class="token punctuation">,</span> Austin <span class="token operator">=</span> Austin<span class="token punctuation">,</span> Jaden
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Austin&quot;</span><span class="token punctuation">,</span> Austin<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Jaden&quot;</span><span class="token punctuation">,</span> Jaden<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,20);function h(b,_){const a=t("ExternalLinkIcon");return p(),o("div",null,[r,n("ul",null,[u,n("li",null,[n("p",null,[s("自动生成日期："),n("a",d,[s("https://bornforthis.cn/python/#/"),i(a)])])]),k,v]),m])}const x=e(l,[["render",h],["__file","LESSON1.html.vue"]]);export{x as default};
