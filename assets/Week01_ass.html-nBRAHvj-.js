import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as l,o as e}from"./app-C6Ab6rwu.js";const p="/assets/image-20240908161653464-CPqv7RZp.png",o="/assets/image-20240908163030766-CVP0wgv9.png",t="/assets/image-20240908165155571-zv1STT8d.png",r="/assets/image-20240908172442594-DG0hWUAG.png",F="/assets/image-20240908181946992-ByxCIJFF.png",c={};function i(y,s){return e(),a("div",null,s[0]||(s[0]=[l('<h2 id="非评估任务1-字符串合并" tabindex="-1"><a class="header-anchor" href="#非评估任务1-字符串合并"><span>非评估任务1：字符串合并</span></a></h2><img src="'+p+`" alt="image-20240908161653464" style="zoom:50%;"><p>以下代码均为看懂了学校给的代码的逻辑，然后自己重新写出的版本。</p><p><strong>Solution 01：非递归版本</strong></p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">string1 </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Please enter your first string: &#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">string2 </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Please enter your second string:&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">len_string1 </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> len</span><span style="color:#F8F8F2;">(string1)</span></span>
<span class="line"><span style="color:#F8F8F2;">len_string2 </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> len</span><span style="color:#F8F8F2;">(string2)</span></span>
<span class="line"><span style="color:#F8F8F2;">new_string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;&#39;</span></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> len_string1 </span><span style="color:#F92672;">&gt;=</span><span style="color:#F8F8F2;"> len_string2:</span></span>
<span class="line"><span style="color:#F8F8F2;">    limit </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> len_string2</span></span>
<span class="line"><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">    limit </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> len_string1</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(limit):</span></span>
<span class="line"><span style="color:#F8F8F2;">    new_string </span><span style="color:#F92672;">+=</span><span style="color:#F8F8F2;"> string1[i]</span></span>
<span class="line"><span style="color:#F8F8F2;">    new_string </span><span style="color:#F92672;">+=</span><span style="color:#F8F8F2;"> string2[i]</span></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> len_string1 </span><span style="color:#F92672;">&gt;=</span><span style="color:#F8F8F2;"> len_string2:</span></span>
<span class="line"><span style="color:#F8F8F2;">    new_string </span><span style="color:#F92672;">+=</span><span style="color:#F8F8F2;"> string1[limit:len_string1]</span></span>
<span class="line"><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">    new_string </span><span style="color:#F92672;">+=</span><span style="color:#F8F8F2;"> string2[limit:len_string2]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(new_string)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p><strong>Solution 02 : 递归版本</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">str1 </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Enter the first string: &quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">str2 </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Enter the second string: &quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> merge_string</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">str1</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">str2</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F92672;"> not</span><span style="color:#F8F8F2;"> str1:</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> str2</span></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F92672;"> not</span><span style="color:#F8F8F2;"> str2:</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> str1</span></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> str1[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> str2[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> merge_string(str1[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:], str2[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(merge_string(str1, str2))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="非评估任务2-阿姆斯特朗数字" tabindex="-1"><a class="header-anchor" href="#非评估任务2-阿姆斯特朗数字"><span>非评估任务2：阿姆斯特朗数字</span></a></h2><img src="`+o+`" alt="image-20240908163030766" style="zoom:67%;"><p><strong>Solution (by myself):</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">num </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Enter a integer and check whether it is a Armstrong Numbers or not: &#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">h_num </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(num[</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#F8F8F2;">ten_num </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(num[</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#F8F8F2;">single_num </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(num[</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> h_num </span><span style="color:#F92672;">**</span><span style="color:#AE81FF;"> 3</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> ten_num </span><span style="color:#F92672;">**</span><span style="color:#AE81FF;"> 3</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> single_num </span><span style="color:#F92672;">**</span><span style="color:#AE81FF;"> 3</span><span style="color:#F92672;"> ==</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(num):</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;It is an Armstrong Number&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;It is not an Armstrong Number&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Solution (Coventry Given):</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#88846F;">#armstrong number if the sum of each digit raised to the power of the total number of digits is equal to the number input</span></span>
<span class="line"><span style="color:#88846F;">#also works for the task: three-digit numbers only, cubed</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> isarmstrong</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">totest</span><span style="color:#F8F8F2;">):                                    </span><span style="color:#88846F;">#input is an integer                        </span></span>
<span class="line"><span style="color:#F8F8F2;">    toteststr </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> str</span><span style="color:#F8F8F2;">(totest)                                 </span><span style="color:#88846F;">#convert integer to string so it is iterable</span></span>
<span class="line"><span style="color:#F8F8F2;">    res </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#88846F;">                                                 #declare a variable for result and initialise</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(toteststr)):                         </span><span style="color:#88846F;">#iterate through each digit</span></span>
<span class="line"><span style="color:#F8F8F2;">        res </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> res </span><span style="color:#F92672;">+</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(toteststr[i])</span><span style="color:#F92672;">**</span><span style="color:#66D9EF;">len</span><span style="color:#F8F8F2;">(toteststr))     </span><span style="color:#88846F;">#add the digit raised to the power of the length of the number to the result      </span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> res </span><span style="color:#F92672;">!=</span><span style="color:#F8F8F2;"> totest:                                       </span><span style="color:#88846F;">#if the result is not the same as the number return False and quit</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#AE81FF;"> False</span><span style="color:#F8F8F2;"> </span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#AE81FF;"> True</span><span style="color:#88846F;">                                             #if False was not returned return True - it&#39;s an Armstrong number</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(isarmstrong(</span><span style="color:#AE81FF;">371</span><span style="color:#F8F8F2;">))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由此意识到自己的问题：输入的数字不一定是一个三位数呀！</p><p><strong>Solution (modified):</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">num </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Enter a integer and check whether it is a Armstrong Numbers or not: &#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">sum</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> num:</span></span>
<span class="line"><span style="color:#66D9EF;">    sum</span><span style="color:#F92672;"> +=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(i)</span><span style="color:#F92672;">**</span><span style="color:#AE81FF;">3</span></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#66D9EF;"> sum</span><span style="color:#F92672;"> ==</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(num):</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Armstrong Number&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Not Armstrong Number&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="非评估作业-3-阶乘是否能被整除" tabindex="-1"><a class="header-anchor" href="#非评估作业-3-阶乘是否能被整除"><span>非评估作业 3 ： 阶乘是否能被整除？</span></a></h2><img src="`+t+`" alt="image-20240908165155571" style="zoom:50%;"><p><strong>Solution(by myself):</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">n </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Enter a number whose factorial you want to calculate:&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">m </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Enter a number that you want to be able to calculate whether or not you can divide the factorial of the above numbers:&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">fact_n </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">,</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(n)</span><span style="color:#F92672;">+</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">    fact_n </span><span style="color:#F92672;">*=</span><span style="color:#F8F8F2;"> i</span></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> fact_n </span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;"> m </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;Yes, </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">n</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">! divides by </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">m</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">.&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;No, </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">n</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">! does not divide by </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">m</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Solution(Coventry Given):</strong></p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> factorial</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">n</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> (n</span><span style="color:#F92672;">==</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> (n</span><span style="color:#F92672;">*</span><span style="color:#F8F8F2;">factorial(n</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> does_factorial_divide</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">fact</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">divisor</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> factorial (fact) </span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;"> divisor </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;YES. </span><span style="color:#AE81FF;">%s</span><span style="color:#E6DB74;">! divides by </span><span style="color:#AE81FF;">%s</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F92672;"> %</span><span style="color:#F8F8F2;"> (fact, divisor))</span></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;NO. </span><span style="color:#AE81FF;">%s</span><span style="color:#E6DB74;">! does not divide by </span><span style="color:#AE81FF;">%s</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F92672;"> %</span><span style="color:#F8F8F2;"> (fact, divisor))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#print(factorial(6))                #check the factorial function works</span></span>
<span class="line"><span style="color:#F8F8F2;">does_factorial_divide(</span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">9</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>函数递归方法。也很值得学习！</p><p><strong>Solution(modified):</strong></p><p>当我们进行如下测试时，我们发现，我们所写的程序对于计算 数字0 的阶乘时出现 bug:</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">n </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Enter a number whose factorial you want to calculate:&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">m </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Enter a number that you want to be able to calculate whether or not you can divide the factorial of the above numbers:&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">fact_n </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F92672;">for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">,</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">(n)</span><span style="color:#F92672;">+</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">    fact_n </span><span style="color:#F92672;">*=</span><span style="color:#F8F8F2;"> i</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(fact_n)</span></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> fact_n </span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;"> m </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;Yes, </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">n</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">! divides by </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">m</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">.&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;No, </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">n</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">! does not divide by </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">m</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;">#output</span></span>
<span class="line"><span style="color:#F8F8F2;">Enter a number whose factorial you want to calculate:</span><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#F8F8F2;">Enter a number that you want to be able to calculate whether </span><span style="color:#F92672;">or</span><span style="color:#F92672;"> not</span><span style="color:#F8F8F2;"> you can divide the factorial of the above numbers:</span><span style="color:#AE81FF;">1</span></span>
<span class="line"><span style="color:#AE81FF;">0</span></span>
<span class="line"><span style="color:#F8F8F2;">Yes, </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">! divides by </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>这个程序计算数字0的阶乘为0 , 而数字0的阶乘为1.</p><p>修改：</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">n </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Enter a number whose factorial you want to calculate:&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">m </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> int</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;">input</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;Enter a number that you want to be able to calculate whether or not you can divide the factorial of the above numbers:&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">fact_n </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> n </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">    fact_n </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, n</span><span style="color:#F92672;">+</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        fact_n </span><span style="color:#F92672;">*=</span><span style="color:#F8F8F2;"> i</span></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> fact_n </span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;"> m </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;Yes, </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">n</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">! divides by </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">m</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">.&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;No, </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">n</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">! does not divide by </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">m</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这样就解决问题了。</p><h2 id="非评估任务4-满载糖果的卡车" tabindex="-1"><a class="header-anchor" href="#非评估任务4-满载糖果的卡车"><span>非评估任务4：满载糖果的卡车</span></a></h2><img src="`+r+`" alt="image-20240908172442594" style="zoom:50%;"><p><strong>Solution(Coventry Given):</strong></p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#E6DB74;">&#39;&#39;&#39;</span></span>
<span class="line"><span style="color:#E6DB74;">    OPTIMAL KNAPSACK ASSUMES ITEMS ARE MULTIPLES OF 1KG ELEMENTS</span></span>
<span class="line"><span style="color:#E6DB74;">    最优的背包问题假设物品的重量是1kg元素的倍数</span></span>
<span class="line"><span style="color:#E6DB74;">&#39;&#39;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 定义一个函数，用于生成物品的组成</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> generate_composition</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">inventory</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">weight_limit</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">    composition </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> []  </span><span style="color:#88846F;"># 用于存放物品的每个1kg元素的列表</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> item </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> inventory:  </span><span style="color:#88846F;"># 遍历库存中的每个物品</span></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(item[</span><span style="color:#E6DB74;">&#39;weight&#39;</span><span style="color:#F8F8F2;">]):  </span><span style="color:#88846F;"># 根据物品的重量，按1kg为单位添加到composition</span></span>
<span class="line"><span style="color:#F8F8F2;">            composition.append(item)</span></span>
<span class="line"><span style="color:#F8F8F2;">    composition </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> composition[:weight_limit]  </span><span style="color:#88846F;"># 如果超过了背包的重量限制，则将多余的部分截掉</span></span>
<span class="line"><span style="color:#F8F8F2;">    result </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> []  </span><span style="color:#88846F;"># 存储最终物品及其数量</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> item </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> inventory:  </span><span style="color:#88846F;"># 再次遍历库存中的物品</span></span>
<span class="line"><span style="color:#88846F;">        # 计算背包中有多少该物品的元素（1kg为单位）</span></span>
<span class="line"><span style="color:#F8F8F2;">        item[</span><span style="color:#E6DB74;">&#39;comp_quantity&#39;</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> composition.count(item)</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> item </span><span style="color:#F92672;">not</span><span style="color:#F92672;"> in</span><span style="color:#F8F8F2;"> result:  </span><span style="color:#88846F;"># 确保不重复添加物品</span></span>
<span class="line"><span style="color:#F8F8F2;">            result.append(item)  </span><span style="color:#88846F;"># 添加物品到结果列表</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> result  </span><span style="color:#88846F;"># 返回物品组成及其在背包中的数量</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 定义生成背包函数</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> generate_knapsack</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">inventory</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">weight_limit</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F92672;"> not</span><span style="color:#F8F8F2;"> inventory:  </span><span style="color:#88846F;"># 如果没有提供库存物品</span></span>
<span class="line"><span style="color:#F8F8F2;">        inventory </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> example_inventory  </span><span style="color:#88846F;"># 使用默认的库存物品</span></span>
<span class="line"><span style="color:#F8F8F2;">    comp </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> generate_composition(inventory, weight_limit)  </span><span style="color:#88846F;"># 获取最优的背包物品组合</span></span>
<span class="line"><span style="color:#F8F8F2;">    string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;&#39;</span><span style="color:#88846F;">  # 用于构建输出的字符串，告知背包中装了哪些物品</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> item </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> comp:  </span><span style="color:#88846F;"># 遍历组合后的物品</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> item[</span><span style="color:#E6DB74;">&#39;comp_quantity&#39;</span><span style="color:#F8F8F2;">] </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:  </span><span style="color:#88846F;"># 如果该物品在背包中数量大于0</span></span>
<span class="line"><span style="color:#F8F8F2;">            string </span><span style="color:#F92672;">+=</span><span style="color:#E6DB74;"> &#39;</span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">kg of </span><span style="color:#AE81FF;">{}</span><span style="color:#E6DB74;">, &#39;</span><span style="color:#F8F8F2;">.format(</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">                str</span><span style="color:#F8F8F2;">(item[</span><span style="color:#E6DB74;">&#39;comp_quantity&#39;</span><span style="color:#F8F8F2;">]), item[</span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">])  </span><span style="color:#88846F;"># 构建物品的描述字符串</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> string:  </span><span style="color:#88846F;"># 如果字符串不为空</span></span>
<span class="line"><span style="color:#F8F8F2;">        string </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> string[:</span><span style="color:#F92672;">-</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">]  </span><span style="color:#88846F;"># 去掉最后的逗号和空格</span></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        string </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;No materials&quot;</span><span style="color:#88846F;">  # 如果背包里没有物品，返回“No materials”</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#E6DB74;"> &#39;Robber</span><span style="color:#AE81FF;">\\&#39;</span><span style="color:#E6DB74;">s knapsack contains: </span><span style="color:#AE81FF;">%s</span><span style="color:#E6DB74;">.&#39;</span><span style="color:#F92672;"> %</span><span style="color:#F8F8F2;"> string  </span><span style="color:#88846F;"># 返回最终字符串，描述背包中的物品</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 主函数，执行逻辑</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#88846F;">    # 定义找到的物品，包含物品的名字、重量和价值</span></span>
<span class="line"><span style="color:#F8F8F2;">    found_items </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;Item_1&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;weight&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">60</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;value&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">60</span><span style="color:#F8F8F2;">},</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;Item_2&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;weight&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">20</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;price&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">},</span></span>
<span class="line"><span style="color:#F8F8F2;">        {</span><span style="color:#E6DB74;">&#39;name&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;Item_3&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;weight&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">30</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;price&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">120</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#F8F8F2;">    ]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">    weight_limit </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 50</span><span style="color:#88846F;">  # 定义背包的重量限制</span></span>
<span class="line"><span style="color:#F8F8F2;">    inventory </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> found_items  </span><span style="color:#88846F;"># 使用找到的物品作为库存</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 打印出生成的背包内容</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(generate_knapsack(inventory, weight_limit))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 调用主函数</span></span>
<span class="line"><span style="color:#F8F8F2;">main()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="非评估任务5-八皇后" tabindex="-1"><a class="header-anchor" href="#非评估任务5-八皇后"><span>非评估任务5：八皇后</span></a></h2><img src="`+F+'" alt="image-20240908181946992" style="zoom:67%;"><p>参考链接：<a href="https://en.wikipedia.org/wiki/Eight_queens_puzzle" target="_blank" rel="noopener noreferrer">https://en.wikipedia.org/wiki/Eight_queens_puzzle</a></p><p>Solution(Coventry Given):</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">-</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',39)]))}const u=n(c,[["render",i]]),m=JSON.parse('{"path":"/zh/Advanced_Algorithms/Week01_ass.html","title":"高级算法——第1周非评估作业","lang":"zh-CN","frontmatter":{"title":"高级算法——第1周非评估作业","icon":"python","date":"2024-09-08T16:13:41.000Z","author":"XiaoXianYue","isOriginal":true,"category":["大三上","高级算法作业"],"tag":["大三上","高级算法作业"],"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"feed":false,"seo":false,"head":[]},"git":{"createdTime":1725799567000,"updatedTime":1733388592000,"contributors":[{"name":"Xiaoxianyue","username":"Xiaoxianyue","email":"2310219843@qq.com","commits":4,"url":"https://github.com/Xiaoxianyue"}]},"readingTime":{"minutes":4.96,"words":1489},"filePathRelative":"zh/Advanced_Algorithms/Week01_ass.md","localizedDate":"2024年9月8日"}');export{u as comp,m as data};
