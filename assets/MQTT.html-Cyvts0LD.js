import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as l,o as e}from"./app-CQgJ7OV3.js";const o="/assets/image-20240625201736511-Bb-pLRVh.png",p="/assets/5d16b01080a831483468227a77e848b-DCNo5noG.jpg",t="/assets/image-20240625194948769-BMTgoKBT.png",c="/assets/image-20240625132752747-Dj6Y7b2q.png",i="/assets/image-20240618181854158-ClprTBEo.png",r="/assets/image-20240618181928937-D10LA4X1.png",F="/assets/image-20240618200505970-BdP-LsNE.png",y="/assets/image-20240618200530725-DIlCtzAM.png",d="/assets/image-20240618201241539-C_xr4Ty2.png",u="/assets/image-20240618203535332-Bb-CKvUo.png",v="/assets/image-20240625144948583-CjptrG2b.png",m="/assets/image-20240625200921070-IOsslQH1.png",b="/assets/image-20240625201018579-VnTd_s0Q.png",f="/assets/image-20240625201156674-B2ejztY6.png",g={};function E(h,s){return e(),a("div",null,s[0]||(s[0]=[l('<p>​ <img src="'+o+'" alt="image-20240625201736511" loading="lazy"></p><p>​ MQTT – Class 2 - Group 12</p><p>​ Name：XianYue Xiao</p><p>​ Student ID: 202229013065N</p><p>​ Activity Learning Orientation</p><p>​ Supervisor: Dr. Long Chen</p><p>​ June 2024</p><h1 id="table-of-contents" tabindex="-1"><a class="header-anchor" href="#table-of-contents"><span>Table of Contents</span></a></h1><p>Abstract</p><p>Introduction</p><p>Team Responsibilities and Individual Contribution</p><p>Project Methodology</p><ol><li><p>Group Soft Skills and Technical Skills – Group Project Functions and Components Summary</p><p>1.1 Functional Overview</p><p>1.2 Main Components</p><p>​ 1.2.1 <a href="http://Client.py" target="_blank" rel="noopener noreferrer">Client.py</a></p><p>​ 1.2.2 <a href="http://Server.py" target="_blank" rel="noopener noreferrer">Server.py</a></p><p>​ 1.2.3 <a href="http://mysql.py" target="_blank" rel="noopener noreferrer">mysql.py</a></p><p>​ 1.2.4 web development</p></li><li><p>Brief summary of individual work results</p><p>2.1 The results of running the former function</p><p>2.2 The GetMessage inheritance class in the client’s documentation</p></li><li><p>Personal Soft Skills – Technical Skills of Personal Work</p><p>3.1 <a href="http://app.py" target="_blank" rel="noopener noreferrer">app.py</a></p><p>​ 3.1.1 Explanation of the Flask Code</p><p>​ 3.1.2 Summary of Features And Skills</p><p>3.2 login.html</p><p>​ 3.2.1 Methods and Techniques Used</p><p>​ 3.2.2 Functionality</p><p>3.3 login-style.css</p><p>​ 3.3.1 Explanation of the CSS Code</p><p>​ 3.3.2 Summary</p><p>3.4 register</p><p>​ 3.4.1 HTML Section</p><p>​ 3.4.2 CSS Section</p><p>​ 3.4.3 JavaScript Section</p><p>​ 3.4.4 Summary</p></li></ol><p>Discussion</p><p>Result</p><p>Project Management</p><p>Reference</p><p>Appendix</p><h1 id="abstract" tabindex="-1"><a class="header-anchor" href="#abstract"><span>Abstract</span></a></h1><p>During the Activity Oriented Learning course and the learning process of collaborating on this project, Group 12 wrote this project based on a deep understanding of MQTT. The research focus of the project was on group collaboration, sending messages to each other from the message processor (server) and the client (client), the setup and use of databases (mysql) including building a website using Django or Flask as a web backend to build a website, and so on.<br> This project has deepened the understanding of MQTT&#39;s ability to transfer messages between various functions of the system. This report first shows the central code of the project in more detail, briefly describes the functionality of each function, and then describes in more detail the author&#39;s own code contributions to the project, as well as the functionality of the functions, the skills and soft skills used, and so on.</p><h1 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction"><span>Introduction</span></a></h1><p><strong>Project Aim &amp; Objectives:</strong></p><p>In a digital era where communication is paramount, our team embarked on a mission to develop an instant messaging system that redefines the way users connect and interact online. Everyone could seamlessly register, log in securely, switch between chat rooms effortlessly, and engage in real-time conversations with peace of mind. Our focus steadfast on ensuring robust security measures, including data encryption and stringent user authentication protocols, to safeguard users’ privacy and information integrity.</p><p>​ Our choice of cutting-edge technologies, from programming languages to database systems and communication protocols, reflects our commitment to delivering a state-of-the-art solution that meets the evolving needs of our users. With every line of code and every design decision, we kept the end-users at the forefront, striving to empower them with a platform that fosters meaningful connections and enriches their online experiences.</p><p><strong>Purpose of your Research Project:</strong></p><p>Learn to write inheritance classes that extend functionality based on base classes, and study how to develop a front-end web page for login and registration in an MQTT project.</p><h1 id="team-responsibilities-and-individual-contribution" tabindex="-1"><a class="header-anchor" href="#team-responsibilities-and-individual-contribution"><span>Team Responsibilities and Individual Contribution:</span></a></h1><img src="'+p+'" alt="5d16b01080a831483468227a77e848b" style="zoom:67%;"><p><strong>Important note: In the group Presentation, the Flask-based login and registration page that I wrote was not presented! Instead, we showed a Django-based login and registration page written by suzhenjie! Evidence that I have completed a Flask-based page can be found in the link below.</strong></p><p><a href="https://github.coventry.ac.uk/suz19/MQTT/tree/main/xiao" target="_blank" rel="noopener noreferrer">https://github.coventry.ac.uk/suz19/MQTT/tree/main/xiao</a></p><img src="'+t+'" alt="image-20240625194948769" style="zoom:33%;"><p><strong>This is suzhenjie written based on Django page design, the author is also involved in the development of the basic framework of this Django, suzhenjie complete optimization.</strong></p><h1 id="project-methodology" tabindex="-1"><a class="header-anchor" href="#project-methodology"><span>Project Methodology</span></a></h1><figure><img src="'+c+`" alt="image-20240625132752747" tabindex="0" loading="lazy"><figcaption>image-20240625132752747</figcaption></figure><h2 id="_1-group-project-functions-and-components-summary-group-soft-skills-and-technical-skills" tabindex="-1"><a class="header-anchor" href="#_1-group-project-functions-and-components-summary-group-soft-skills-and-technical-skills"><span>1. Group Project Functions and Components Summary(Group Soft Skills and Technical Skills)</span></a></h2><h3 id="_1-1-functional-overview" tabindex="-1"><a class="header-anchor" href="#_1-1-functional-overview"><span>1.1 Functional Overview</span></a></h3><p>The group project is a message communication system based on the <code>MQTT</code> protocol, consisting of a client and a server. Passing information between components through the sever, the client stores the user&#39;s information to communicate with the sever.</p><p>The purpose is chat room，based on MQTT low data transmission，Our teamwork can be used to serve remote areas with poor network connectivity。</p><p>The following section briefly describes the general functionality of the main part of the project, including the sever, client, database and web pages.</p><h3 id="_1-2-main-components" tabindex="-1"><a class="header-anchor" href="#_1-2-main-components"><span>1.2 Main Components</span></a></h3><h4 id="_1-2-1-client-py" tabindex="-1"><a class="header-anchor" href="#_1-2-1-client-py"><span>1.2.1 <a href="http://Client.py" target="_blank" rel="noopener noreferrer">Client.py</a></span></a></h4><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> paho.mqtt.client </span><span style="color:#F92672;">as</span><span style="color:#F8F8F2;"> mqtt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> main.config.config </span><span style="color:#F92672;">import</span><span style="color:#AE81FF;"> HOST</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">PORT</span><span style="color:#F8F8F2;">,publish_topic</span></span>
<span class="line"><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> queue </span><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> Queue</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> datetime</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> threading</span></span>
<span class="line"><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> threading </span><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> Thread, Event</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> threading</span></span>
<span class="line"><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> queue </span><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> Queue</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> paho.mqtt.client </span><span style="color:#F92672;">as</span><span style="color:#F8F8F2;"> mqtt</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> time</span></span>
<span class="line"><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> abc </span><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> abstractmethod</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Client</span><span style="color:#F8F8F2;">:</span><span style="color:#88846F;">#基类</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userName</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">None</span><span style="color:#F8F8F2;">,</span><span style="color:#FD971F;font-style:italic;">userPwd</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">None</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.userName </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> userName</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.userPwd </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> userPwd</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.lock </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> threading.Lock()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.loopNum </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.start_evt </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> None</span><span style="color:#88846F;">  # 这是一个Event对象，用来查看是否验证成功</span></span>
<span class="line"><span style="color:#88846F;">        # 自动在初始化的时候进行链接</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.client </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> mqtt.Client()</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.client.on_connect </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.on_connect</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.client.on_message </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.on_message</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.client.connect(</span><span style="color:#AE81FF;">HOST</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">PORT</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">60</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> start_loop</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#88846F;">        # 用线程锁来控制同时仅能一个loop_forever</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.loopNum </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.lock.acquire()</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;进程锁加载&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.loopNum </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.client._thread_terminate </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.client.loop_forever()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> stop_loop</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#88846F;">        # 停止这个线程</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.loopNum </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.lock.release()</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;进程锁结束!!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.client._thread_terminate </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.loopNum </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">    @abstractmethod</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_connect</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">flags</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">rc</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        pass</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">    @abstractmethod</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_message</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">,  </span><span style="color:#FD971F;font-style:italic;">msg</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        pass</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> clientStart</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span><span style="color:#88846F;">#启动进程，使用threading（python自带进程管理库）进行管理</span></span>
<span class="line"><span style="color:#F8F8F2;">        loopThread </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> threading.Thread(</span><span style="color:#FD971F;font-style:italic;">target</span><span style="color:#F92672;">=</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.start_loop)</span></span>
<span class="line"><span style="color:#F8F8F2;">        loopThread.start()</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> loopThread</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Register</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Client</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">,</span><span style="color:#FD971F;font-style:italic;">userName</span><span style="color:#F8F8F2;">,</span><span style="color:#FD971F;font-style:italic;">userPwd</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        super</span><span style="color:#F8F8F2;">().</span><span style="color:#66D9EF;">__init__</span><span style="color:#F8F8F2;">(userName,userPwd)</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.flag</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">False</span><span style="color:#88846F;"> #标志注册是否成功</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.clientStart()</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.publishRegister()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_connect</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">flags</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">rc</span><span style="color:#F8F8F2;">):</span><span style="color:#88846F;">#链接</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> rc </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Connected successfully&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            returnRegister</span><span style="color:#F92672;">=</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.userName</span><span style="color:#F92672;">+</span><span style="color:#E6DB74;">&quot;register&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">            client.subscribe(returnRegister) </span><span style="color:#88846F;"># 订阅 return 主题</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Failed to connect, return code </span><span style="color:#AE81FF;">%d\\n</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">, rc)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_message</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">,</span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">,  </span><span style="color:#FD971F;font-style:italic;">msg</span><span style="color:#F8F8F2;">):</span><span style="color:#88846F;">#接受数据</span></span>
<span class="line"><span style="color:#88846F;">        # 规定传入数据均为dict的形式</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        data </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> eval</span><span style="color:#F8F8F2;">(msg.payload.decode(</span><span style="color:#E6DB74;">&#39;utf-8&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#88846F;">        #读取数据</span></span>
<span class="line"><span style="color:#F8F8F2;">        code</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">data.get(</span><span style="color:#E6DB74;">&#39;code&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        message</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">data.get(</span><span style="color:#E6DB74;">&#39;message&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> code</span><span style="color:#F92672;">==</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(message)</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> code</span><span style="color:#F92672;">==</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.flag</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">True</span><span style="color:#88846F;"> #成功了更新</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(message)</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> data</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> publishRegister</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        returnTopic</span><span style="color:#F92672;">=</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.userName</span><span style="color:#F92672;">+</span><span style="color:#E6DB74;">&quot;register&quot;</span></span>
<span class="line"><span style="color:#88846F;">        #数据发送特定格式</span></span>
<span class="line"><span style="color:#F8F8F2;">        data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;userName&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.userName, </span><span style="color:#E6DB74;">&#39;userPwd&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.userPwd, </span><span style="color:#E6DB74;">&#39;returnTopic&#39;</span><span style="color:#F8F8F2;">: returnTopic}</span></span>
<span class="line"><span style="color:#88846F;">        # qos1</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.client.publish(publish_topic[</span><span style="color:#E6DB74;">&quot;register_topic&quot;</span><span style="color:#F8F8F2;">], </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">(data).encode(), </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;">        # client.loop()</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;发布信息 &#39;</span><span style="color:#F8F8F2;">, publish_topic[</span><span style="color:#E6DB74;">&#39;register_topic&#39;</span><span style="color:#F8F8F2;">], </span><span style="color:#E6DB74;">&#39; 成功&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Login</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Client</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">,</span><span style="color:#FD971F;font-style:italic;">userName</span><span style="color:#F8F8F2;">,</span><span style="color:#FD971F;font-style:italic;">userPwd</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        super</span><span style="color:#F8F8F2;">().</span><span style="color:#66D9EF;">__init__</span><span style="color:#F8F8F2;">(userName,userPwd)</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.flag</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">False</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.clientStart()</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.publishLogin()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_connect</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">flags</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">rc</span><span style="color:#F8F8F2;">):</span><span style="color:#88846F;">#链接</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> rc </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Connected successfully&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            returnLogin</span><span style="color:#F92672;">=</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.userName</span><span style="color:#F92672;">+</span><span style="color:#E6DB74;">&quot;login&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">            client.subscribe(returnLogin) </span><span style="color:#88846F;"># 订阅 return 主题</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Failed to connect, return code </span><span style="color:#AE81FF;">%d\\n</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">, rc)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_message</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">,</span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">,  </span><span style="color:#FD971F;font-style:italic;">msg</span><span style="color:#F8F8F2;">):</span><span style="color:#88846F;">#接受数据</span></span>
<span class="line"><span style="color:#88846F;">        # 规定传入数据均为dict的形式</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        data </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> eval</span><span style="color:#F8F8F2;">(msg.payload.decode(</span><span style="color:#E6DB74;">&#39;utf-8&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#88846F;">        #读取数据</span></span>
<span class="line"><span style="color:#F8F8F2;">        code</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">data.get(</span><span style="color:#E6DB74;">&#39;code&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        message</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">data.get(</span><span style="color:#E6DB74;">&#39;message&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> code</span><span style="color:#F92672;">==</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">:  </span><span style="color:#88846F;">#表示登入失败</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(message)</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> code</span><span style="color:#F92672;">==</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:  </span><span style="color:#88846F;">#表示登入成功</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.flag</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">True</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(message)</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> data</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> publishLogin</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        returnTopic</span><span style="color:#F92672;">=</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.userName</span><span style="color:#F92672;">+</span><span style="color:#E6DB74;">&quot;login&quot;</span></span>
<span class="line"><span style="color:#88846F;">        #数据发送特定格式</span></span>
<span class="line"><span style="color:#F8F8F2;">        data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;userName&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.userName, </span><span style="color:#E6DB74;">&#39;userPwd&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.userPwd, </span><span style="color:#E6DB74;">&#39;returnTopic&#39;</span><span style="color:#F8F8F2;">: returnTopic}</span></span>
<span class="line"><span style="color:#88846F;">        # qos1</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.client.publish(publish_topic[</span><span style="color:#E6DB74;">&quot;login_topic&quot;</span><span style="color:#F8F8F2;">], </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">(data).encode(), </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;">        # client.loop()</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;发布信息 &#39;</span><span style="color:#F8F8F2;">, publish_topic[</span><span style="color:#E6DB74;">&#39;login_topic&#39;</span><span style="color:#F8F8F2;">], </span><span style="color:#E6DB74;">&#39; 成功&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">######################################</span></span>
<span class="line"><span style="color:#88846F;">#xiao</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">GetMessage</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Client</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userName</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        super</span><span style="color:#F8F8F2;">().</span><span style="color:#66D9EF;">__init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">userName</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">userName)</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.messages</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">[]</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.clientStart()</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.publishGetAllMessage()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_connect</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">flags</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">rc</span><span style="color:#F8F8F2;">):  </span><span style="color:#88846F;"># 链接</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> rc </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Connected successfully&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            returnLogin </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.userName </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;chatall&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">            client.subscribe(returnLogin)  </span><span style="color:#88846F;"># 订阅 chatall 主题</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Failed to connect, return code </span><span style="color:#AE81FF;">%d\\n</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">, rc)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_message</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">msg</span><span style="color:#F8F8F2;">):  </span><span style="color:#88846F;"># 接受数据</span></span>
<span class="line"><span style="color:#88846F;">        # 规定传入数据均为dict的形式</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        messages </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> eval</span><span style="color:#F8F8F2;">(msg.payload.decode(</span><span style="color:#E6DB74;">&#39;utf-8&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#88846F;">        # 读取数据</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.messages</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">messages </span><span style="color:#88846F;">#返回一个字典的列表，[&#39;id&#39;:id,&#39;senderID&#39;:senderID,&#39;message&#39;:message]存到类中</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(messages)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> publishGetAllMessage</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        returnTopic </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.userName </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;chatall&quot;</span></span>
<span class="line"><span style="color:#88846F;">        # 数据发送特定格式</span></span>
<span class="line"><span style="color:#F8F8F2;">        data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;userName&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.userName, </span><span style="color:#E6DB74;">&#39;returnTopic&#39;</span><span style="color:#F8F8F2;">: returnTopic}</span></span>
<span class="line"><span style="color:#88846F;">        # qos1</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.client.publish(</span><span style="color:#E6DB74;">&quot;chatall&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">(data).encode(), </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;">        # client.loop()</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;发布信息 &#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;chatall&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39; 成功&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">######################################</span></span>
<span class="line"><span style="color:#88846F;">#jia yikun</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">SendMessage</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Client</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userName</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">msg</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        super</span><span style="color:#F8F8F2;">().</span><span style="color:#66D9EF;">__init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">userName</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">userName)</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.message</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">msg</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.clientStart()</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.publishSendMessage()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_connect</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">flags</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">rc</span><span style="color:#F8F8F2;">):  </span><span style="color:#88846F;"># 链接</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> rc </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Connected successfully&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            returnLogin </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.userName </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;chatsend&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">            client.subscribe(returnLogin)  </span><span style="color:#88846F;"># 订阅 chatall 主题</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Failed to connect, return code </span><span style="color:#AE81FF;">%d\\n</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">, rc)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_message</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">msg</span><span style="color:#F8F8F2;">):  </span><span style="color:#88846F;"># 接受数据</span></span>
<span class="line"><span style="color:#88846F;">        # 规定传入数据均为dict的形式</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        data </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> eval</span><span style="color:#F8F8F2;">(msg.payload.decode(</span><span style="color:#E6DB74;">&#39;utf-8&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#88846F;">        # 读取数据</span></span>
<span class="line"><span style="color:#F8F8F2;">        code </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;code&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        message </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;message&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> code </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:  </span><span style="color:#88846F;"># 表示发送消息失败</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(message)</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> code </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">:  </span><span style="color:#88846F;"># 表示发送消息成功</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(message)</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> data</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> publishSendMessage</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        returnTopic </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.userName </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;chatsend&quot;</span></span>
<span class="line"><span style="color:#88846F;">        # 数据发送特定格式</span></span>
<span class="line"><span style="color:#F8F8F2;">        data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;userName&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.userName,</span><span style="color:#E6DB74;">&#39;message&#39;</span><span style="color:#F8F8F2;">:</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.message, </span><span style="color:#E6DB74;">&#39;returnTopic&#39;</span><span style="color:#F8F8F2;">: returnTopic}</span></span>
<span class="line"><span style="color:#88846F;">        # qos1</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.client.publish(</span><span style="color:#E6DB74;">&quot;chatsend&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">(data).encode(), </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;">        # client.loop()</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;发布信息 &#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;chatsend&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39; 成功&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">######################################</span></span>
<span class="line"><span style="color:#88846F;">#tao yu</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Like</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Client</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">,</span><span style="color:#FD971F;font-style:italic;">messageId</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        super</span><span style="color:#F8F8F2;">().</span><span style="color:#66D9EF;">__init__</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.clientStart()</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.publish_like(messageId)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">    @abstractmethod</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_connect</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">flags</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">rc</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        pass</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">    @abstractmethod</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_message</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">msg</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        pass</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> publish_like</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">messageId</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;message_id&#39;</span><span style="color:#F8F8F2;">: messageId}</span></span>
<span class="line"><span style="color:#F8F8F2;">        client.publish(publish_topic[</span><span style="color:#E6DB74;">&#39;like_topic&#39;</span><span style="color:#F8F8F2;">], </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">(data).encode(), </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;发布信息到 </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">publish_topic[</span><span style="color:#E6DB74;">&quot;like_topic&quot;</span><span style="color:#F8F8F2;">]</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;"> 成功&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">SecurityQuestion</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Client</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userName</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">question</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">None</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">answer</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">None</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">new_password</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">None</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        super</span><span style="color:#F8F8F2;">().</span><span style="color:#66D9EF;">__init__</span><span style="color:#F8F8F2;">(userName)</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.question </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> question</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.answer </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> answer</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.clientStart()</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> userName </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> question </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> answer </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> new_password:</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.reset_password(answer,new_password)</span></span>
<span class="line"><span style="color:#F92672;">        elif</span><span style="color:#F8F8F2;"> userName </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> question </span><span style="color:#F92672;">and</span><span style="color:#F8F8F2;"> answer:</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.set_security_question()</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.request_security_question()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_connect</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">flags</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">rc</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> rc </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;连接成功&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            returnTopic </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.userName </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;security&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">            client.subscribe(returnTopic)</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;连接失败，返回码 </span><span style="color:#AE81FF;">%d\\n</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">, rc)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_message</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">msg</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        data </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> eval</span><span style="color:#F8F8F2;">(msg.payload.decode(</span><span style="color:#E6DB74;">&#39;utf-8&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(data)</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;action&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;set_question&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(data.get(</span><span style="color:#E6DB74;">&#39;code&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F92672;">        elif</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;action&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;request_question&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;Security Question: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">data.get(</span><span style="color:#E6DB74;">&#39;question&#39;</span><span style="color:#F8F8F2;">)</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        elif</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;action&#39;</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;verify_security_answer&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(data.get(</span><span style="color:#E6DB74;">&#39;code&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> data</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> set_security_question</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        returnTopic </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.userName </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;security&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">        data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#E6DB74;">            &#39;action&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;set_question&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#E6DB74;">            &#39;userName&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.userName,</span></span>
<span class="line"><span style="color:#E6DB74;">            &#39;question&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.question,</span></span>
<span class="line"><span style="color:#E6DB74;">            &#39;answer&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.answer,</span></span>
<span class="line"><span style="color:#E6DB74;">            &#39;returnTopic&#39;</span><span style="color:#F8F8F2;">: returnTopic</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.client.publish(</span><span style="color:#E6DB74;">&#39;set_security_question&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">(data).encode(), </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;发布信息到 set_security_question_response 成功&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> request_security_question</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        returnTopic </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.userName </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;security&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">        data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#E6DB74;">            &#39;action&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;request_question&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#E6DB74;">            &#39;userName&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.userName,</span></span>
<span class="line"><span style="color:#E6DB74;">            &#39;returnTopic&#39;</span><span style="color:#F8F8F2;">: returnTopic</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.client.publish(</span><span style="color:#E6DB74;">&#39;request_security_question&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">(data).encode(), </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;发布信息到 request_security_question 成功&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> reset_password</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">answer</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">new_password</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        returnTopic </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.userName </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;security&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">        data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#E6DB74;">            &#39;action&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;reset_password&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#E6DB74;">            &#39;userName&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.userName,</span></span>
<span class="line"><span style="color:#E6DB74;">            &#39;answer&#39;</span><span style="color:#F8F8F2;">: answer,</span></span>
<span class="line"><span style="color:#E6DB74;">            &#39;newPassword&#39;</span><span style="color:#F8F8F2;">: new_password,</span></span>
<span class="line"><span style="color:#E6DB74;">            &#39;returnTopic&#39;</span><span style="color:#F8F8F2;">: returnTopic</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.client.publish(</span><span style="color:#E6DB74;">&#39;verify_security_answer&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">(data).encode(), </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&#39;发布信息到 verify_security_answer 成功&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">####################################################################</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#F8F8F2;">    SendMessage(</span><span style="color:#E6DB74;">&quot;1234&quot;</span><span style="color:#F8F8F2;">,</span><span style="color:#E6DB74;">&quot;1234&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">main()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><ol><li><strong>Client</strong>: A base class for clients, initializing the MQTT client, managing connection and message handling, and providing methods for starting and stopping the MQTT loop. It includes abstract methods <code>on_connect</code> and <code>on_message</code> to be implemented by subclasses.</li><li><strong>Register</strong>: Inherits from <code>Client</code> and handles user registration. It connects to the MQTT broker, subscribes to a specific topic for registration responses, and publishes registration data.</li><li><strong>Login</strong>: Inherits from <code>Client</code> and handles user login. It connects to the MQTT broker, subscribes to a specific topic for login responses, and publishes login data.</li><li><strong>GetMessage</strong>: Inherits from <code>Client</code> and retrieves messages. It connects to the MQTT broker, subscribes to a topic to receive all messages, and stores received messages in a list.</li><li><strong>SendMessage</strong>: Inherits from <code>Client</code> and sends messages. It connects to the MQTT broker, subscribes to a topic for sending message responses, and publishes the message data.</li><li><strong>Like</strong>: Inherits from <code>Client</code> and handles liking messages. It connects to the MQTT broker and publishes a like action for a specific message ID.</li><li><strong>SecurityQuestion</strong>: Inherits from <code>Client</code> and manages security questions for user accounts. It can set a security question, request a security question, and reset the password based on the security answer.</li></ol><h4 id="_1-2-2-server-py" tabindex="-1"><a class="header-anchor" href="#_1-2-2-server-py"><span>1.2.2 <a href="http://Server.py" target="_blank" rel="noopener noreferrer">Server.py</a></span></a></h4><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> paho.mqtt.client </span><span style="color:#F92672;">as</span><span style="color:#F8F8F2;"> mqtt</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> main.config.config </span><span style="color:#F92672;">import</span><span style="color:#AE81FF;"> HOST</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">PORT</span><span style="color:#F8F8F2;">,publish_topic</span></span>
<span class="line"><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> queue </span><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> Queue</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> datetime</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> threading</span></span>
<span class="line"><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> threading </span><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> Thread, Event</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> threading</span></span>
<span class="line"><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> queue </span><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> Queue</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> paho.mqtt.client </span><span style="color:#F92672;">as</span><span style="color:#F8F8F2;"> mqtt</span></span>
<span class="line"><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> main.mysql </span><span style="color:#F92672;">import</span><span style="color:#F92672;"> *</span></span>
<span class="line"><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> abc </span><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> abstractmethod</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> time</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Server</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.client </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> mqtt.Client()</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.client.on_connect </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.on_connect</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.client.on_message </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.on_message</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.client.connect(</span><span style="color:#AE81FF;">HOST</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">PORT</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">60</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.lock </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> threading.Lock()</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.loopNum </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> start_loop</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#88846F;">        # 用线程锁来控制同时仅能一个loop_forever</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.loopNum </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.lock.acquire()</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;进程锁加载&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.loopNum </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.client._thread_terminate </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> False</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.client.loop_forever()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> stop_loop</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#88846F;">        # 停止这个线程</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.loopNum </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.lock.release()</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;进程锁结束!!&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.client._thread_terminate </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.loopNum </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> serverStart</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span><span style="color:#88846F;">#启动进程，使用threading（python自带进程管理库）进行管理</span></span>
<span class="line"><span style="color:#F8F8F2;">        loopThread </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> threading.Thread(</span><span style="color:#FD971F;font-style:italic;">target</span><span style="color:#F92672;">=</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.start_loop)</span></span>
<span class="line"><span style="color:#F8F8F2;">        loopThread.start()</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> loopThread</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">    @abstractmethod</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_connect</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">flags</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">rc</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> rc </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Connected successfully&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            client.subscribe(</span><span style="color:#E6DB74;">&#39;test&#39;</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># 订阅 login 主题</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Failed to connect, return code </span><span style="color:#AE81FF;">%d\\n</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">, rc)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">    @abstractmethod</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_message</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">msg</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#88846F;">        # 规定传入数据均为dict的形式</span></span>
<span class="line"><span style="color:#F8F8F2;">        data </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> eval</span><span style="color:#F8F8F2;">(msg.payload.decode(</span><span style="color:#E6DB74;">&#39;utf-8&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(data)</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> data</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Register</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Server</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        super</span><span style="color:#F8F8F2;">().</span><span style="color:#66D9EF;">__init__</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.serverStart()</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_connect</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">flags</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">rc</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> rc </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Connected successfully&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            client.subscribe(publish_topic[</span><span style="color:#E6DB74;">&#39;register_topic&#39;</span><span style="color:#F8F8F2;">])  </span><span style="color:#88846F;"># 订阅 register 主题</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Failed to connect, return code </span><span style="color:#AE81FF;">%d\\n</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">, rc)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_message</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">msg</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#88846F;">        # 规定传入数据均为dict的形式</span></span>
<span class="line"><span style="color:#F8F8F2;">        data </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> eval</span><span style="color:#F8F8F2;">(msg.payload.decode(</span><span style="color:#E6DB74;">&#39;utf-8&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(data)</span></span>
<span class="line"><span style="color:#F8F8F2;">        userName </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;userName&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        userPwd </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;userPwd&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        returnTopic </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;returnTopic&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.register(userName, userPwd, returnTopic)</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> data</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> register</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userName</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userPwd</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">returnTopic</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        user </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> UserManage.chackName(userName)</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> user </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;用户不存在，允许注册&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> UserManage.addUser(userName, userPwd):</span></span>
<span class="line"><span style="color:#66D9EF;">                print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;用户添加成功！&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">                data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;code&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;message&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&quot;用户添加成功！&quot;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FD971F;">                self</span><span style="color:#F8F8F2;">.client.publish(returnTopic, </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">(data).encode(), </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">            else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">                print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;用户添加失败，错误发生在服务器！&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">                data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;code&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;message&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&quot;用户添加失败，错误发生在服务器！&quot;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FD971F;">                self</span><span style="color:#F8F8F2;">.client.publish(returnTopic, </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">(data).encode(), </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;用户存在，不允许注册&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;code&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;message&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&quot;用户添加失败，用户存在&quot;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.client.publish(returnTopic, </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">(data).encode(), </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Login</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Server</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        super</span><span style="color:#F8F8F2;">().</span><span style="color:#66D9EF;">__init__</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.serverStart()</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_connect</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">flags</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">rc</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> rc </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Connected successfully&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            client.subscribe(publish_topic[</span><span style="color:#E6DB74;">&#39;login_topic&#39;</span><span style="color:#F8F8F2;">])  </span><span style="color:#88846F;"># 订阅 login 主题</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Failed to connect, return code </span><span style="color:#AE81FF;">%d\\n</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">, rc)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_message</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">msg</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#88846F;">        # 规定传入数据均为dict的形式</span></span>
<span class="line"><span style="color:#F8F8F2;">        data </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> eval</span><span style="color:#F8F8F2;">(msg.payload.decode(</span><span style="color:#E6DB74;">&#39;utf-8&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(data)</span></span>
<span class="line"><span style="color:#F8F8F2;">        userName </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;userName&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        userPwd </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;userPwd&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        returnTopic </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;returnTopic&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.login(userName, userPwd, returnTopic)</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> data</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> login</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userName</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userPwd</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">returnTopic</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        user </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> UserManage.chackName(userName)</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> user </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;账号或密码错误&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;code&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;message&#39;</span><span style="color:#F8F8F2;">:</span><span style="color:#E6DB74;">&quot;账号或密码错误&quot;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.client.publish(returnTopic, </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">(data).encode(), </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> UserManage.verifyUser(userName,userPwd):</span></span>
<span class="line"><span style="color:#66D9EF;">                print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">userName</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">通过验证，欢迎&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">                data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;code&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;message&quot;</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;验证通过，欢迎回来</span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">userName</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FD971F;">                self</span><span style="color:#F8F8F2;">.client.publish(returnTopic, </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">(data).encode(), </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">            else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">                print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;账号或密码错误&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">                data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;code&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;message&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&quot;账号或密码错误&quot;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FD971F;">                self</span><span style="color:#F8F8F2;">.client.publish(returnTopic, </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">(data).encode(), </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">###################################################################</span></span>
<span class="line"><span style="color:#88846F;">#taoyu</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Like</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Server</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        super</span><span style="color:#F8F8F2;">().</span><span style="color:#66D9EF;">__init__</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.serverStart()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_connect</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">flags</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">rc</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> rc </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Connected successfully&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            client.subscribe(</span><span style="color:#E6DB74;">&#39;like&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Failed to connect, return code </span><span style="color:#AE81FF;">%d\\n</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">, rc)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_message</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">msg</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        data </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> eval</span><span style="color:#F8F8F2;">(msg.payload.decode(</span><span style="color:#E6DB74;">&#39;utf-8&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">        messageId </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;message_id&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        returnTopic </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;returnTopic&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Publishing to topic:&quot;</span><span style="color:#F8F8F2;">, returnTopic)</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.like_message(messageId, returnTopic)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> like_message</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">messageId</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">returnTopic</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        like_count </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> LikeManage.like_message(messageId)</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> like_count </span><span style="color:#F92672;">is</span><span style="color:#F92672;"> not</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">            data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;code&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;like_count&#39;</span><span style="color:#F8F8F2;">: like_count}</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.client.publish(returnTopic, </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">(data).encode(), </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">            data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;code&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;message&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;点赞失败&#39;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.client.publish(returnTopic, </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">(data).encode(), </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">SecurityServer</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Server</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        super</span><span style="color:#F8F8F2;">().</span><span style="color:#66D9EF;">__init__</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.serverStart()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_connect</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">flags</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">rc</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> rc </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;连接成功&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            client.subscribe(</span><span style="color:#E6DB74;">&#39;set_security_question&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            client.subscribe(</span><span style="color:#E6DB74;">&#39;request_security_question&#39;</span><span style="color:#F8F8F2;">,)</span></span>
<span class="line"><span style="color:#F8F8F2;">            client.subscribe(</span><span style="color:#E6DB74;">&#39;verify_security_answer&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;连接失败，返回码 </span><span style="color:#AE81FF;">%d\\n</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">, rc)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_message</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">msg</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        data </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> eval</span><span style="color:#F8F8F2;">(msg.payload.decode(</span><span style="color:#E6DB74;">&#39;utf-8&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> msg.topic </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;set_security_question&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">            user_name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;userName&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            question </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;question&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            answer </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;answer&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            returnTopic </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;returnTopic&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            success </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> SecurityQuestionManage.set_security_question(user_name, question, answer)</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> success </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> True</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">                code </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F92672;">            else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">                code </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F8F8F2;">            data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#E6DB74;">                &#39;action&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;set_question&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#E6DB74;">                &#39;code&#39;</span><span style="color:#F8F8F2;">: code</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">            client.publish(returnTopic, </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">(data).encode(), </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">        elif</span><span style="color:#F8F8F2;"> msg.topic </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;request_security_question&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">            user_name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;userName&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            returnTopic </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;returnTopic&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">            user </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> UserModel.get(UserModel.name </span><span style="color:#F92672;">==</span><span style="color:#F8F8F2;"> user_name)</span></span>
<span class="line"><span style="color:#F8F8F2;">            security_question </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> SecurityQuestionModel.get(SecurityQuestionModel.user_id </span><span style="color:#F92672;">==</span><span style="color:#F8F8F2;"> user.id)</span></span>
<span class="line"><span style="color:#F8F8F2;">            data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#E6DB74;">                &#39;action&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;request_question&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#E6DB74;">                &#39;question&#39;</span><span style="color:#F8F8F2;">: security_question.question</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">            client.publish(returnTopic, </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">(data).encode(), </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">        elif</span><span style="color:#F8F8F2;"> msg.topic </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;verify_security_answer&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">            user_name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;userName&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            answer </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;answer&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            newPassword </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;new_password&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            returnTopic </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;returnTopic&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            success </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> SecurityQuestionManage.verify_security_answer(user_name, answer, newPassword)</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> success: code </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F92672;">            else</span><span style="color:#F8F8F2;">: code </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#F8F8F2;">            data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#E6DB74;">                &#39;action&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&#39;verify_security_answer&#39;</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#E6DB74;">                &#39;code&#39;</span><span style="color:#F8F8F2;">: code</span></span>
<span class="line"><span style="color:#F8F8F2;">            }</span></span>
<span class="line"><span style="color:#F8F8F2;">            client.publish(returnTopic, </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">(data).encode(), </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">###################################################################################</span></span>
<span class="line"><span style="color:#88846F;">#jia yikun</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">ChatSave</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Server</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        super</span><span style="color:#F8F8F2;">().</span><span style="color:#66D9EF;">__init__</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.serverStart()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_connect</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">,</span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">flags</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">rc</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> rc</span><span style="color:#F92672;">==</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#88846F;">            #self.connected=True</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Connected successfully&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            client.subscribe(</span><span style="color:#E6DB74;">&#39;chatsend&#39;</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># 订阅 chat 主题</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">            raise</span><span style="color:#66D9EF;font-style:italic;"> Exception</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Failed to connect mqtt server.&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_message</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">msg</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#88846F;">        # 接收用户消息</span></span>
<span class="line"><span style="color:#F8F8F2;">        data </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> eval</span><span style="color:#F8F8F2;">(msg.payload.decode(</span><span style="color:#E6DB74;">&#39;utf-8&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">        message </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;message&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        userName </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;userName&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(data)</span></span>
<span class="line"><span style="color:#F8F8F2;">        returnTopic </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;returnTopic&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        user</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">UserManage.chackName(userName)</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> user </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">            data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;code&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;message&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&quot;消息发送失败,找不到用户&quot;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.client.publish(returnTopic, </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">(data).encode(), </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;new_message  &#39;</span><span style="color:#F8F8F2;">,user.id,</span><span style="color:#E6DB74;">&#39;:&#39;</span><span style="color:#F8F8F2;">, message)</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> ChatManage.AddChat(message, user.id,userName):</span></span>
<span class="line"><span style="color:#F8F8F2;">                data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;code&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;message&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&quot;消息发送成功&quot;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FD971F;">                self</span><span style="color:#F8F8F2;">.client.publish(returnTopic, </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">(data).encode(), </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">            else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">                data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;code&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;message&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#E6DB74;">&quot;消息发送失败&quot;</span><span style="color:#F8F8F2;">}</span></span>
<span class="line"><span style="color:#FD971F;">                self</span><span style="color:#F8F8F2;">.client.publish(returnTopic, </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">(data).encode(), </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">ChatAll</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Server</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        super</span><span style="color:#F8F8F2;">().</span><span style="color:#66D9EF;">__init__</span><span style="color:#F8F8F2;">()</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.serverStart()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_connect</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">,</span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">flags</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">rc</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> rc</span><span style="color:#F92672;">==</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#88846F;">            #self.connected=True</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Connected successfully&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            client.subscribe(</span><span style="color:#E6DB74;">&#39;chatall&#39;</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># 订阅 chat 主题</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">            raise</span><span style="color:#66D9EF;font-style:italic;"> Exception</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Failed to connect mqtt server.&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_message</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">msg</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#88846F;">        # 接收用户消息</span></span>
<span class="line"><span style="color:#F8F8F2;">        data </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> eval</span><span style="color:#F8F8F2;">(msg.payload.decode(</span><span style="color:#E6DB74;">&#39;utf-8&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#F8F8F2;">        returnTopic </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> data.get(</span><span style="color:#E6DB74;">&#39;returnTopic&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">        chat </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> ChatManage()</span></span>
<span class="line"><span style="color:#F8F8F2;">        payload </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> str</span><span style="color:#F8F8F2;">(chat.getAllManage())</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.client.publish(returnTopic, </span><span style="color:#FD971F;font-style:italic;">payload</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">payload, </span><span style="color:#FD971F;font-style:italic;">qos</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">retain</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">False</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">###################################################################################</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> main</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#F8F8F2;">    a</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">Register()  </span><span style="color:#88846F;">#进程1，处理注册</span></span>
<span class="line"><span style="color:#F8F8F2;">    b</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">Login()     </span><span style="color:#88846F;">#进程2，处理登入</span></span>
<span class="line"><span style="color:#F8F8F2;">    c</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">Like()      </span><span style="color:#88846F;">#进程3，处理点赞</span></span>
<span class="line"><span style="color:#F8F8F2;">    d</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">ChatAll()   </span><span style="color:#88846F;">#进程4，处理所有消息</span></span>
<span class="line"><span style="color:#F8F8F2;">    e</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">ChatSave()  </span><span style="color:#88846F;">#进程5，处理消息保存</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">main()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>1.<strong>Server</strong>: A base class for server functionalities, initializing the MQTT client, handling connection and message reception, and managing the MQTT loop with threading.</p><p>2.<strong>Register</strong>: Inherits from <code>Server</code> and handles user registration. It subscribes to a topic for registration requests, receives user data, and processes the registration using a user management system.</p><p>3.<strong>Login</strong>: Inherits from <code>Server</code> and handles user login. It subscribes to a topic for login requests, receives user data, and verifies the login credentials using a user management system.</p><p>4.<strong>Like</strong>: Inherits from <code>Server</code> and handles liking messages. It subscribes to a topic for like actions, receives the message ID, and processes the like using a like management system.</p><p>5.<strong>SecurityServer</strong>: Inherits from <code>Server</code> and manages security questions for user accounts. It subscribes to topics for setting, requesting, and verifying security questions and answers, and processes these requests accordingly.</p><p>6.<strong>ChatSave</strong>: Inherits from <code>Server</code> and handles saving chat messages. It subscribes to a topic for sending messages, receives message data, and saves the message using a chat management system.</p><p>7.<strong>ChatAll</strong>: Inherits from <code>Server</code> and handles retrieving all chat messages. It subscribes to a topic for retrieving messages and responds with all stored messages.</p><h4 id="_1-2-3-mysql-py" tabindex="-1"><a class="header-anchor" href="#_1-2-3-mysql-py"><span>1.2.3 <a href="http://mysql.py" target="_blank" rel="noopener noreferrer">mysql.py</a></span></a></h4><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> main.config.config </span><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> mysql_config</span></span>
<span class="line"><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> peewee </span><span style="color:#F92672;">import</span><span style="color:#F92672;"> *</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> bcrypt</span></span>
<span class="line"><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> datetime</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#链接数据库</span></span>
<span class="line"><span style="color:#F8F8F2;">db </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> MySQLDatabase(mysql_config[</span><span style="color:#E6DB74;">&#39;db_name&#39;</span><span style="color:#F8F8F2;">], </span><span style="color:#FD971F;font-style:italic;">user</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">mysql_config[</span><span style="color:#E6DB74;">&#39;db_user&#39;</span><span style="color:#F8F8F2;">], </span><span style="color:#FD971F;font-style:italic;">password</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">mysql_config[</span><span style="color:#E6DB74;">&#39;db_password&#39;</span><span style="color:#F8F8F2;">],</span></span>
<span class="line"><span style="color:#FD971F;font-style:italic;">                   host</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">mysql_config[</span><span style="color:#E6DB74;">&#39;db_host&#39;</span><span style="color:#F8F8F2;">], </span><span style="color:#FD971F;font-style:italic;">port</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">mysql_config[</span><span style="color:#E6DB74;">&#39;db_port&#39;</span><span style="color:#F8F8F2;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#数据对象</span></span>
<span class="line"><span style="color:#88846F;">#######################################################</span></span>
<span class="line"><span style="color:#88846F;">#基类</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">BaseModel</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Model</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Meta</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        database </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> db</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#用户类</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">UserModel</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">BaseModel</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">    id</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">AutoField()</span></span>
<span class="line"><span style="color:#F8F8F2;">    name </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> CharField(</span><span style="color:#FD971F;font-style:italic;">max_length</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">64</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    password </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> CharField(</span><span style="color:#FD971F;font-style:italic;">max_length</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">128</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Meta</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        db_table </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;user&#39;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#信息类</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">ChatModel</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">BaseModel</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">    id</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">AutoField()</span></span>
<span class="line"><span style="color:#F8F8F2;">    message </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TextField()</span></span>
<span class="line"><span style="color:#F8F8F2;">    senderId</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">BigIntegerField()</span></span>
<span class="line"><span style="color:#F8F8F2;">    time </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> DateTimeField(</span><span style="color:#FD971F;font-style:italic;">default</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">datetime.datetime.now)</span></span>
<span class="line"><span style="color:#F8F8F2;">    senderName</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">CharField(</span><span style="color:#FD971F;font-style:italic;">max_length</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">64</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Meta</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        db_table </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;chat&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#点赞类</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">LikeModel</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">BaseModel</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;">    id</span><span style="color:#F92672;"> =</span><span style="color:#F8F8F2;"> AutoField()</span></span>
<span class="line"><span style="color:#F8F8F2;">    messageId </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> ForeignKeyField(ChatModel, </span><span style="color:#FD971F;font-style:italic;">backref</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&#39;likes&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">    count </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> IntegerField(</span><span style="color:#FD971F;font-style:italic;">default</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Meta</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        db_table </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &#39;like&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">CreateTable</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#A6E22E;">    @</span><span style="color:#66D9EF;font-style:italic;">staticmethod</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> create</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#F8F8F2;">        db.connect()</span></span>
<span class="line"><span style="color:#F8F8F2;">        db.create_tables([UserModel, ChatModel,LikeModel,SecurityQuestionModel])</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#用户操作</span></span>
<span class="line"><span style="color:#88846F;">##########################################</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> hash_password</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">password</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#88846F;">    # 生成盐值</span></span>
<span class="line"><span style="color:#F8F8F2;">    salt </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> bcrypt.gensalt()</span></span>
<span class="line"><span style="color:#88846F;">    # 生成哈希值</span></span>
<span class="line"><span style="color:#F8F8F2;">    hashed </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> bcrypt.hashpw(password.encode(</span><span style="color:#E6DB74;">&#39;utf-8&#39;</span><span style="color:#F8F8F2;">), salt)</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> hashed</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;"># 验证密码</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> check_password</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">hashed</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">password</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#88846F;">    # 验证密码</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> bcrypt.checkpw(password.encode(</span><span style="color:#E6DB74;">&#39;utf-8&#39;</span><span style="color:#F8F8F2;">), hashed)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">#用户信息传递</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">UserManage</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#A6E22E;">    @</span><span style="color:#66D9EF;font-style:italic;">staticmethod</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> chackName</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">):</span><span style="color:#88846F;">#检测用户是否存在，不存在则打印提示并返回None，否则返回UserModel</span></span>
<span class="line"><span style="color:#F92672;">        try</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">            user </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> UserModel.get(UserModel.name </span><span style="color:#F92672;">==</span><span style="color:#F8F8F2;"> name)</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#F8F8F2;"> user</span></span>
<span class="line"><span style="color:#F92672;">        except</span><span style="color:#F8F8F2;"> UserModel.DoesNotExist:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;No user found with name: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">name</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#AE81FF;"> None</span></span>
<span class="line"><span style="color:#F92672;">        except</span><span style="color:#66D9EF;font-style:italic;"> Exception</span><span style="color:#F92672;"> as</span><span style="color:#F8F8F2;"> error:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#66D9EF;font-style:italic;">f</span><span style="color:#E6DB74;">&quot;An error occurred: </span><span style="color:#AE81FF;">{</span><span style="color:#F8F8F2;">error</span><span style="color:#AE81FF;">}</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#AE81FF;"> None</span></span>
<span class="line"><span style="color:#A6E22E;">    @</span><span style="color:#66D9EF;font-style:italic;">staticmethod</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> chackPassword</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">password</span><span style="color:#F8F8F2;">):</span><span style="color:#88846F;">#如果密码正确则返回True</span></span>
<span class="line"><span style="color:#88846F;">            # 密码加密</span></span>
<span class="line"><span style="color:#F8F8F2;">            hashPassword </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> hash_password(password)</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#F8F8F2;"> check_password(hashPassword,password)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">    @</span><span style="color:#66D9EF;font-style:italic;">staticmethod</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> addUser</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">password</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        try</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">            pwd </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> hash_password(password)</span></span>
<span class="line"><span style="color:#F8F8F2;">            UserModel.insert(</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">name, </span><span style="color:#FD971F;font-style:italic;">password</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">pwd).execute()</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"><span style="color:#F92672;">        except</span><span style="color:#66D9EF;font-style:italic;"> Exception</span><span style="color:#F92672;"> as</span><span style="color:#F8F8F2;"> error:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(error)</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#AE81FF;"> False</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">    @</span><span style="color:#66D9EF;font-style:italic;">staticmethod</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> verifyUser</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">name</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">password</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        user </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> UserManage.chackName(name)</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> user </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#AE81FF;"> False</span></span>
<span class="line"><span style="color:#F8F8F2;">        hashed_password_bytes </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> user.password.encode(</span><span style="color:#E6DB74;">&#39;utf-8&#39;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> check_password(hashed_password_bytes, password)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">################################################################</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">ChatManage</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 获取并返回所有 chat 数据</span></span>
<span class="line"><span style="color:#A6E22E;">    @</span><span style="color:#66D9EF;font-style:italic;">staticmethod</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> getAllManage</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#F92672;">        try</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">            all_chats </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> ChatModel.select()</span></span>
<span class="line"><span style="color:#88846F;">            # 将数据转换为列表形式</span></span>
<span class="line"><span style="color:#F8F8F2;">            chat_list </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> []</span></span>
<span class="line"><span style="color:#F92672;">            for</span><span style="color:#F8F8F2;"> chat </span><span style="color:#F92672;">in</span><span style="color:#F8F8F2;"> all_chats:</span></span>
<span class="line"><span style="color:#F8F8F2;">                chat_data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#E6DB74;">                    &#39;id&#39;</span><span style="color:#F8F8F2;">: chat.id,</span></span>
<span class="line"><span style="color:#E6DB74;">                    &#39;message&#39;</span><span style="color:#F8F8F2;">: chat.message,</span></span>
<span class="line"><span style="color:#E6DB74;">                    &#39;senderId&#39;</span><span style="color:#F8F8F2;">: chat.senderId,</span></span>
<span class="line"><span style="color:#E6DB74;">                    &#39;time&#39;</span><span style="color:#F8F8F2;">: chat.time,</span></span>
<span class="line"><span style="color:#E6DB74;">                    &#39;senderName&#39;</span><span style="color:#F8F8F2;">:chat.senderName</span></span>
<span class="line"><span style="color:#F8F8F2;">                }</span></span>
<span class="line"><span style="color:#F8F8F2;">                chat_list.append(chat_data)</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#F8F8F2;"> chat_list</span></span>
<span class="line"><span style="color:#F92672;">        except</span><span style="color:#66D9EF;font-style:italic;"> Exception</span><span style="color:#F92672;"> as</span><span style="color:#F8F8F2;"> error:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(error)</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#AE81FF;"> None</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">    @</span><span style="color:#66D9EF;font-style:italic;">staticmethod</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> AddChat</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">message</span><span style="color:#F8F8F2;">,</span><span style="color:#FD971F;font-style:italic;">senderId</span><span style="color:#F8F8F2;">,</span><span style="color:#FD971F;font-style:italic;">senderName</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">        try</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">            ChatModel.insert(</span><span style="color:#FD971F;font-style:italic;">message</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">message,</span><span style="color:#FD971F;font-style:italic;">senderId</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">senderId,</span><span style="color:#FD971F;font-style:italic;">senderName</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">senderName).execute()</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#AE81FF;"> True</span></span>
<span class="line"><span style="color:#F92672;">        except</span><span style="color:#66D9EF;font-style:italic;"> Exception</span><span style="color:#F92672;"> as</span><span style="color:#F8F8F2;"> error:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(error)</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#AE81FF;"> False</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#AE81FF;">...</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>1.<strong>Database Configuration</strong></p><ul><li><strong>Database Connection</strong>: Connects to a MySQL database using configurations provided in <code>mysql_config</code>.</li></ul><p>2.<strong>Models</strong></p><ol><li><p><strong>BaseModel</strong>: A base model that all other models inherit from, setting the database to use.</p></li><li><p><strong>UserModel</strong>: Represents a user with fields for user ID, name, and password.</p></li><li><p><strong>ChatModel</strong>: Represents a chat message with fields for message ID, message content, sender ID, timestamp, and sender name.</p></li><li><p><strong>LikeModel</strong>: Represents a like on a message with fields for like ID, message ID (foreign key to <code>ChatModel</code>), and count of likes.</p></li><li><p><strong>SecurityQuestionModel</strong>: Represents a security question for a user with fields for user ID (foreign key to <code>UserModel</code>), the security question, and the hashed answer.</p></li></ol><p>3.<strong>Table Creation</strong></p><ul><li><strong>CreateTable</strong>: A static method to create the database tables for <code>UserModel</code>, <code>ChatModel</code>, <code>LikeModel</code>, and <code>SecurityQuestionModel</code>.</li></ul><p>4.<strong>User Management</strong></p><ul><li><strong>UserManage</strong>: Provides static methods to manage user operations: <ul><li><code>chackName(name)</code>: Checks if a user exists by name.</li><li><code>chackPassword(password)</code>: Checks if a password is correct by comparing it with the stored hash.</li><li><code>addUser(name, password)</code>: Adds a new user with a hashed password.</li><li><code>verifyUser(name, password)</code>: Verifies a user&#39;s credentials.</li></ul></li></ul><p>5.<strong>Chat Management</strong></p><ul><li><strong>ChatManage</strong>: Provides static methods to manage chat operations: <ul><li><code>getAllManage()</code>: Retrieves and returns all chat messages.</li><li><code>AddChat(message, senderId, senderName)</code>: Adds a new chat message.</li></ul></li></ul><p>6.<strong>Like Management</strong></p><ul><li><strong>LikeManage</strong>: Provides a static method to manage likes on messages: <ul><li><code>like_message(messageId)</code>: Increments the like count for a message.</li></ul></li></ul><p>7.<strong>Security Question Management</strong></p><ul><li><strong>SecurityQuestionManage</strong>: Provides static methods to manage security questions: <ul><li><code>set_security_question(user_name, question, answer)</code>: Sets a security question and stores the hashed answer for a user.</li><li><code>verify_security_answer(user_name, answer, new_password)</code>: Verifies the security answer and resets the password if correct.</li><li><code>reset_password(user_name, new_password)</code>: Resets the password for a user.</li></ul></li></ul><p>8.<strong>Utility Functions</strong></p><ul><li><strong>hash_password(password)</strong>: Generates a hashed password using bcrypt.</li><li><strong>check_password(hashed, password)</strong>: Checks if a provided password matches the hashed password.</li><li><strong>display_all_users()</strong>: Displays all users along with the timestamp of their last message.</li></ul><p>9.<strong>Initialization</strong></p><ul><li><strong>CreateTable.create()</strong>: Creates the necessary tables in the database by calling the <code>create()</code> method of the <code>CreateTable</code> class.</li></ul><p>This code essentially sets up the backend for a messaging system with functionalities for user registration and login, chat message handling, liking messages, and managing security questions.</p><h4 id="_1-2-4-web-development" tabindex="-1"><a class="header-anchor" href="#_1-2-4-web-development"><span>1.2.4 web development</span></a></h4><p>Includes front-end pages for login registration and chat. Author was personally responsible for the basic framework of the page developed in Django and the login and registration interface developed and optimized in Flask.</p><h2 id="_2-brief-summary-of-individual-work-results" tabindex="-1"><a class="header-anchor" href="#_2-brief-summary-of-individual-work-results"><span>2. Brief summary of individual work results</span></a></h2><p>This section reports on the author&#39;s own contributions to the project, including the front-end of the login and registration interface and a client inheritance class for receiving messages. The following shows the running results of the login and registration interface, as well as the code of the inherited class.</p><h3 id="_2-1-the-results-of-running-the-former-function" tabindex="-1"><a class="header-anchor" href="#_2-1-the-results-of-running-the-former-function"><span>2.1 The results of running the former function:</span></a></h3><img src="`+i+'" alt="image-20240618181854158" style="zoom:50%;"><img src="'+r+`" alt="image-20240618181928937" style="zoom:50%;"><h3 id="_2-2-the-get-message-inheritance-class-in-the-client-s-documentation" tabindex="-1"><a class="header-anchor" href="#_2-2-the-get-message-inheritance-class-in-the-client-s-documentation"><span>2.2 The Get-message inheritance class in the client&#39;s documentation.</span></a></h3><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">GetMessage</span><span style="color:#F8F8F2;">(</span><span style="color:#A6E22E;font-style:italic;text-decoration:underline;">Client</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userName</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        super</span><span style="color:#F8F8F2;">().</span><span style="color:#66D9EF;">__init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">userName</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">userName)</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.messages</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">[]</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.clientStart()</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.publishGetAllMessage()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_connect</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">flags</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">rc</span><span style="color:#F8F8F2;">):  </span><span style="color:#88846F;"># 链接</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> rc </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Connected successfully&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">            returnLogin </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.userName </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;chatall&quot;</span></span>
<span class="line"><span style="color:#F8F8F2;">            client.subscribe(returnLogin)  </span><span style="color:#88846F;"># 订阅 chatall 主题</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;">            print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Failed to connect, return code </span><span style="color:#AE81FF;">%d\\n</span><span style="color:#E6DB74;">&quot;</span><span style="color:#F8F8F2;">, rc)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> on_message</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">client</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">userdata</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">msg</span><span style="color:#F8F8F2;">):  </span><span style="color:#88846F;"># 接受数据</span></span>
<span class="line"><span style="color:#88846F;">        # 规定传入数据均为dict的形式</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">        messages </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> eval</span><span style="color:#F8F8F2;">(msg.payload.decode(</span><span style="color:#E6DB74;">&#39;utf-8&#39;</span><span style="color:#F8F8F2;">))</span></span>
<span class="line"><span style="color:#88846F;">        # 读取数据</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.messages</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">messages </span><span style="color:#88846F;">#返回一个字典的列表，[&#39;id&#39;:id,&#39;senderID&#39;:senderID,&#39;message&#39;:message]存到类中</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(messages)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> publishGetAllMessage</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">        returnTopic </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.userName </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;chatall&quot;</span></span>
<span class="line"><span style="color:#88846F;">        # 数据发送特定格式</span></span>
<span class="line"><span style="color:#F8F8F2;">        data </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> {</span><span style="color:#E6DB74;">&#39;userName&#39;</span><span style="color:#F8F8F2;">: </span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.userName, </span><span style="color:#E6DB74;">&#39;returnTopic&#39;</span><span style="color:#F8F8F2;">: returnTopic}</span></span>
<span class="line"><span style="color:#88846F;">        # qos1</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.client.publish(</span><span style="color:#E6DB74;">&quot;chatall&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">(data).encode(), </span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#88846F;">        # client.loop()</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;发布信息 &#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;chatall&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39; 成功&#39;</span><span style="color:#F8F8F2;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>The functionality of this section has been described in the overall functional overview of client.</p><h2 id="_3-technical-skills-of-personal-work-personal-soft-skills" tabindex="-1"><a class="header-anchor" href="#_3-technical-skills-of-personal-work-personal-soft-skills"><span>3. Technical skills of personal work (Personal Soft Skills)</span></a></h2><p>This section introduces in detail the functions constructed and the skills and methods used by the author when implementing the code, which reflects the author&#39;s basic skills in developing the project and the overall understanding of the project code. This code has been integrated with the main code of the project and is ready to run, which fits the goals and ideas of the project.</p><h3 id="_3-1-app-py" tabindex="-1"><a class="header-anchor" href="#_3-1-app-py"><span>3.1 <a href="http://app.py" target="_blank" rel="noopener noreferrer">app.py</a></span></a></h3><p><strong>The <a href="http://app.py" target="_blank" rel="noopener noreferrer">app.py</a> file mainly writes Flask code, including access URL rules, request patterns, and calls to the code interface in <code>Client.py</code> to realize the login and registration functions.</strong></p><figure><img src="`+F+`" alt="image-20240618200505970" tabindex="0" loading="lazy"><figcaption>image-20240618200505970</figcaption></figure><h4 id="_3-1-1-explanation-of-the-flask-code" tabindex="-1"><a class="header-anchor" href="#_3-1-1-explanation-of-the-flask-code"><span>3.1.1 <strong>Explanation of the Flask Code</strong></span></a></h4><p>This code defines a simple web application using the Flask framework. It includes routes for user login, registration, and profile viewing. The application interacts with MQTT for authentication.</p><ol><li>Importing Necessary Libraries and Modules</li></ol><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> flask </span><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> Flask, render_template, request, redirect, url_for</span></span>
<span class="line"><span style="color:#F92672;">from</span><span style="color:#F8F8F2;"> client.Client </span><span style="color:#F92672;">import</span><span style="color:#F8F8F2;"> Login, Register  </span><span style="color:#88846F;"># Importing custom login and registration classes</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Flask</strong>: The primary framework used to create the web application.</li><li><strong>render_template</strong>: To render HTML templates.</li><li><strong>request</strong>: To handle HTTP requests.</li><li><strong>redirect</strong> and <strong>url_for</strong>: To redirect users to different routes.</li><li><strong>Login and Register</strong>: Custom classes for handling login and registration via MQTT.</li></ul><ol start="2"><li>Initializing the Flask Application</li></ol><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">app </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Flask(__name__)  </span><span style="color:#88846F;"># Creating a Flask application instance</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>app</strong>: The Flask application instance.</li></ul><ol start="3"><li>Defining Routes</li></ol><ul><li><strong>Root Route</strong>:</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">@app.route</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/&#39;</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># Defining the root route</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> index</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> redirect(url_for(</span><span style="color:#E6DB74;">&#39;login&#39;</span><span style="color:#F8F8F2;">))  </span><span style="color:#88846F;"># Redirecting to the login page</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Login Route</strong>:</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">@app.route</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/login&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">methods</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">[</span><span style="color:#E6DB74;">&#39;GET&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;POST&#39;</span><span style="color:#F8F8F2;">])  </span><span style="color:#88846F;"># Defining the login route</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> login</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> request.method </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;POST&#39;</span><span style="color:#F8F8F2;">:  </span><span style="color:#88846F;"># Handling POST requests</span></span>
<span class="line"><span style="color:#F8F8F2;">        username </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> request.form[</span><span style="color:#E6DB74;">&#39;username&#39;</span><span style="color:#F8F8F2;">]  </span><span style="color:#88846F;"># Retrieving the username from the form</span></span>
<span class="line"><span style="color:#F8F8F2;">        password </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> request.form[</span><span style="color:#E6DB74;">&#39;password&#39;</span><span style="color:#F8F8F2;">]  </span><span style="color:#88846F;"># Retrieving the password from the form</span></span>
<span class="line"><span style="color:#F8F8F2;">        login_client </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Login(username, password)  </span><span style="color:#88846F;"># Creating a login client instance</span></span>
<span class="line"><span style="color:#88846F;">        # Here, it is assumed that the login status is handled by MQTT message processing</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> redirect(url_for(</span><span style="color:#E6DB74;">&#39;profile&#39;</span><span style="color:#F8F8F2;">))  </span><span style="color:#88846F;"># Redirecting to the profile page upon successful login</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> render_template(</span><span style="color:#E6DB74;">&#39;login.html&#39;</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># Rendering the login template for GET requests</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Register Route</strong>:</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">@app.route</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/register&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">methods</span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;">[</span><span style="color:#E6DB74;">&#39;GET&#39;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&#39;POST&#39;</span><span style="color:#F8F8F2;">])  </span><span style="color:#88846F;"># Defining the register route</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> register</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> request.method </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;POST&#39;</span><span style="color:#F8F8F2;">:  </span><span style="color:#88846F;"># Handling POST requests</span></span>
<span class="line"><span style="color:#F8F8F2;">        username </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> request.form[</span><span style="color:#E6DB74;">&#39;username&#39;</span><span style="color:#F8F8F2;">]  </span><span style="color:#88846F;"># Retrieving the username from the form</span></span>
<span class="line"><span style="color:#F8F8F2;">        password </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> request.form[</span><span style="color:#E6DB74;">&#39;password&#39;</span><span style="color:#F8F8F2;">]  </span><span style="color:#88846F;"># Retrieving the password from the form</span></span>
<span class="line"><span style="color:#F8F8F2;">        register_client </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Register(username, password)  </span><span style="color:#88846F;"># Creating a registration client instance</span></span>
<span class="line"><span style="color:#88846F;">        # Here, it is assumed that the registration status is handled similarly to login</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> redirect(url_for(</span><span style="color:#E6DB74;">&#39;login&#39;</span><span style="color:#F8F8F2;">))  </span><span style="color:#88846F;"># Redirecting to the login page upon successful registration</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#F8F8F2;"> render_template(</span><span style="color:#E6DB74;">&#39;register.html&#39;</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># Rendering the registration template for GET requests</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Profile Route</strong>:</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">@app.route</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&#39;/profile&#39;</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># Defining the profile route</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> profile</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#88846F;">    # Displaying user information; this section needs further development</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#E6DB74;"> &#39;Welcome, user!&#39;</span><span style="color:#88846F;">  # Displaying a welcome message</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>Running the Application</li></ol><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> __name__ </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &#39;__main__&#39;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">    app.run(</span><span style="color:#FD971F;font-style:italic;">debug</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">True</span><span style="color:#F8F8F2;">)  </span><span style="color:#88846F;"># Running the Flask application in debug mode</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-1-2-summary-of-features-and-skills" tabindex="-1"><a class="header-anchor" href="#_3-1-2-summary-of-features-and-skills"><span>3.1.2 Summary of Features And Skills</span></a></h4><ol><li><p><strong>User Authentication</strong>:</p><ul><li><strong>Login</strong>: Handles user login via a POST request. Uses an instance of the <code>Login</code> class to send login information via MQTT.</li><li><strong>Registration</strong>: Handles user registration via a POST request. Uses an instance of the <code>Register</code> class to send registration information via MQTT.</li></ul></li><li><p><strong>Redirection</strong>:</p><ul><li>Users are redirected to appropriate routes (<code>login</code>, <code>profile</code>) based on the context.</li></ul></li><li><p><strong>Rendering Templates</strong>:</p><ul><li>Uses <code>render_template</code> to render HTML templates for login and registration forms.</li></ul></li><li><p><strong>Handling HTTP Requests</strong>:</p><ul><li>Uses <code>request.method</code> to differentiate between GET and POST requests.</li><li>Retrieves form data using <code>request.form</code>.</li></ul></li><li><p><strong>Routing</strong>:</p><ul><li>Defines multiple routes (<code>/</code>, <code>/login</code>, <code>/register</code>, <code>/profile</code>) to handle different parts of the application.</li></ul></li></ol><p>Overall, this code sets up a basic web application with login and registration functionality, leveraging MQTT for communication and Flask for the web framework.</p><h3 id="_3-2-login-html" tabindex="-1"><a class="header-anchor" href="#_3-2-login-html"><span>3.2 login.html</span></a></h3><p><strong>This package implements the login screen in html.</strong></p><figure><img src="`+y+'" alt="image-20240618200530725" tabindex="0" loading="lazy"><figcaption>image-20240618200530725</figcaption></figure><h4 id="_3-2-1-methods-and-techniques-used" tabindex="-1"><a class="header-anchor" href="#_3-2-1-methods-and-techniques-used"><span>3.2.1 Methods and Techniques Used</span></a></h4><ol><li><p><strong>HTML Document Structure</strong>:</p><ul><li>The code is structured as a standard HTML document with a <code>&lt;!DOCTYPE html&gt;</code> declaration, <code>&lt;html&gt;</code>, <code>&lt;head&gt;</code>, and <code>&lt;body&gt;</code> tags.</li></ul></li><li><p><strong>Meta Tag</strong>:</p><ul><li><code>&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;</code>: This tag sets the character encoding for the webpage to UTF-8, ensuring that the text is displayed correctly in various languages.</li></ul></li><li><p><strong>Title Tag</strong>:</p><ul><li><code>&lt;title&gt;登陆&lt;/title&gt;</code>: Sets the title of the webpage to &quot;登录&quot; (Login).</li></ul></li><li><p><strong>Linking External CSS</strong>:</p><ul><li><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;{{ url_for(&#39;static&#39;, filename=&#39;css/login-style.css&#39;) }}&quot;&gt;</code>: Links an external CSS file for styling the webpage. The <code>url_for</code> function dynamically generates the URL for the CSS file, ensuring it is correctly linked.</li></ul></li><li><p><strong>Inline CSS Styling</strong>:</p><ul><li>The <code>&lt;style&gt;</code> block within the <code>&lt;head&gt;</code> tag contains CSS rules that set the background image of the HTML element. This includes: <ul><li>Setting the height and width to 100% to cover the entire viewport.</li><li>Hiding overflow to prevent scrolling.</li><li>Removing margins and padding.</li><li>Setting a background image (<code>Desert.png</code>) with no-repeat and covering the entire background using <code>background-size: 100% 100%</code>.</li></ul></li></ul></li><li><p><strong>Form and Input Elements</strong>:</p><ul><li>The <code>&lt;form&gt;</code> element is used to create a form for user login, using the POST method.</li><li>The form includes input fields for username and password: <ul><li><code>&lt;input name=&quot;username&quot; id=&quot;username&quot; type=&quot;text&quot;&gt;</code>: Text input for the username.</li><li><code>&lt;input name=&quot;password&quot; id=&quot;password&quot; type=&quot;password&quot;&gt;</code>: Password input for the password.</li></ul></li><li>Labels (<code>&lt;label&gt;</code>) are included next to the input fields for potential validation messages.</li></ul></li><li><p><strong>Buttons</strong>:</p><ul><li>Two buttons are included within the form: <ul><li><code>&lt;input type=&quot;submit&quot; class=&quot;button&quot; value=&quot;Login&quot;&gt;</code>: A submit button labeled &quot;Login&quot; that submits the form.</li><li><code>&lt;input type=&quot;reset&quot; class=&quot;button&quot; value=&quot;重置&quot;&gt;</code>: A reset button labeled &quot;重置&quot; (Reset) that resets the form fields to their initial values.</li></ul></li></ul></li><li><p><strong>Dynamic Resource Referencing</strong>:</p><ul><li>The use of <code>{{ url_for(&#39;static&#39;, filename=&#39;...&#39;) }}</code> ensures that URLs for static files (CSS and images) are dynamically generated by the web framework (commonly Flask), making the paths to these resources correct and avoiding hardcoding URLs.</li></ul></li></ol><h4 id="_3-2-2-functionality" tabindex="-1"><a class="header-anchor" href="#_3-2-2-functionality"><span>3.2.2 Functionality</span></a></h4><ul><li><strong>User Interface for Login</strong>: The provided HTML code creates a user interface for a login page where users can enter their username and password.</li><li><strong>Styling and Background</strong>: The page includes styling to set a background image and adjust the appearance of the form elements.</li><li><strong>Form Submission</strong>: When the user clicks the &quot;Login&quot; button, the form data (username and password) is sent to the server using the POST method. The server can then process this data for authentication.</li><li><strong>Form Reset</strong>: The &quot;Reset&quot; button allows users to clear the input fields and reset the form to its initial state.</li></ul><p>Overall, the code sets up a basic but visually styled login page that can be integrated with a backend for user authentication.</p><h3 id="_3-3-login-style-css" tabindex="-1"><a class="header-anchor" href="#_3-3-login-style-css"><span>3.3 login-style.css</span></a></h3><p><strong>This file package completes the optimization of the login screen. If login.html is the framework of the login page, then login-style is the clothes on the skeleton.</strong></p><figure><img src="'+d+`" alt="image-20240618201241539" tabindex="0" loading="lazy"><figcaption>image-20240618201241539</figcaption></figure><h4 id="_3-3-1-explanation-of-the-css-code" tabindex="-1"><a class="header-anchor" href="#_3-3-1-explanation-of-the-css-code"><span>3.3.1 Explanation of the CSS Code</span></a></h4><p>The provided CSS code defines the styling for a login page, ensuring a visually appealing and user-friendly interface. Below is an explanation of each section, including the methods used and their functions.</p><ol><li>Global Reset</li></ol><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    margin</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    padding</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Method</strong>: Universal Selector (<code>*</code>)</li><li><strong>Function</strong>: Removes all default margin and padding from all HTML elements, creating a clean slate for custom styling.</li></ul><ol start="2"><li>Body Styling</li></ol><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">body</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    display</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">flex</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    align-items</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">center</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    justify-content</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">center</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    height</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">100</span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Method</strong>: Flexbox Layout (<code>display: flex</code>)</li><li><strong>Function</strong>: Centers the content both vertically and horizontally within the viewport by using Flexbox properties (<code>align-items</code> and <code>justify-content</code>).</li></ul><ol start="3"><li>Login Container Styling</li></ol><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">#loginDiv</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    width</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">37</span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    display</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">flex</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    justify-content</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">center</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    align-items</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">center</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    height</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">300</span><span style="color:#F92672;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    background-color</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">rgba</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">75</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">81</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">95</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0.3</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    box-shadow</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">7</span><span style="color:#F92672;">px</span><span style="color:#AE81FF;"> 7</span><span style="color:#F92672;">px</span><span style="color:#AE81FF;"> 17</span><span style="color:#F92672;">px</span><span style="color:#66D9EF;"> rgba</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">52</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">56</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">66</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0.5</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    border-radius</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">5</span><span style="color:#F92672;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Method</strong>: ID Selector (<code>#loginDiv</code>) and Flexbox Layout</li><li><strong>Function</strong>: Styles the login container (<code>#loginDiv</code>) with: <ul><li>Fixed width and height for consistent sizing.</li><li>Centered content using Flexbox properties.</li><li>Semi-transparent background color using <code>rgba</code>.</li><li>Shadow effect using <code>box-shadow</code> for a 3D appearance.</li><li>Rounded corners using <code>border-radius</code>.</li></ul></li></ul><ol start="4"><li>Username Tip Styling</li></ol><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">#name_trip</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    margin-left</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">50</span><span style="color:#F92672;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    color</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">red</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Method</strong>: ID Selector (<code>#name_trip</code>)</li><li><strong>Function</strong>: Styles the username tip with: <ul><li>Left margin to position it appropriately.</li><li>Red text color to highlight warnings or important information.</li></ul></li></ul><ol start="5"><li>Paragraph Styling</li></ol><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">p</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    margin-top</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">30</span><span style="color:#F92672;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    margin-left</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">20</span><span style="color:#F92672;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    color</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">azure</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Method</strong>: Element Selector (<code>p</code>)</li><li><strong>Function</strong>: Styles paragraphs (<code>&lt;p&gt;</code>) with: <ul><li>Top margin to space out each paragraph.</li><li>Left margin for indentation.</li><li>Azure text color for readability against the background.</li></ul></li></ul><ol start="6"><li>Input Styling</li></ol><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">input</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    margin-left</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">15</span><span style="color:#F92672;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    border-radius</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">5</span><span style="color:#F92672;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    border-style</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">hidden</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    height</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">30</span><span style="color:#F92672;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    width</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">140</span><span style="color:#F92672;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    background-color</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">rgba</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">216</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">191</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">216</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0.5</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    outline</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">none</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    color</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">#f0edf3</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    padding-left</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">10</span><span style="color:#F92672;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Method</strong>: Element Selector (<code>input</code>)</li><li><strong>Function</strong>: Styles input fields (<code>&lt;input&gt;</code>) with: <ul><li>Left margin for spacing.</li><li>Rounded corners using <code>border-radius</code>.</li><li>Hidden borders using <code>border-style</code>.</li><li>Fixed height and width for consistency.</li><li>Semi-transparent background color using <code>rgba</code>.</li><li>No outline on focus using <code>outline: none</code>.</li><li>Light text color for readability.</li><li>Left padding for inner spacing.</li></ul></li></ul><ol start="7"><li>Button Styling</li></ol><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">.button</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    border-color</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">cornsilk</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    background-color</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">rgba</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">149</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">237</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">.7</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    color</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">aliceblue</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    border-style</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">hidden</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    border-radius</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">5</span><span style="color:#F92672;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    width</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">100</span><span style="color:#F92672;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    height</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">31</span><span style="color:#F92672;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    font-size</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">16</span><span style="color:#F92672;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>Method</strong>: Class Selector (<code>.button</code>)</li><li><strong>Function</strong>: Styles buttons (<code>&lt;input class=&quot;button&quot;&gt;</code>) with: <ul><li>Hidden borders using <code>border-style</code>.</li><li>Rounded corners using <code>border-radius</code>.</li><li>Semi-transparent background color using <code>rgba</code>.</li><li>Light text color for contrast.</li><li>Fixed width and height for consistency.</li><li>Larger font size for better readability.</li></ul></li></ul><h4 id="_3-3-2-summary" tabindex="-1"><a class="header-anchor" href="#_3-3-2-summary"><span>3.3.2 Summary</span></a></h4><p>The CSS code uses various selectors and properties to create a cohesive and visually appealing login page:</p><ul><li><strong>Universal Selector</strong>: Resets all margins and paddings.</li><li><strong>Flexbox</strong>: Centers content within the body.</li><li><strong>ID and Class Selectors</strong>: Apply specific styles to elements such as the login container, username tip, input fields, and buttons.</li><li><strong>RGBA Colors</strong>: Provides semi-transparent backgrounds.</li><li><strong>Box Shadow and Border Radius</strong>: Adds depth and rounded corners for modern design.</li></ul><p>These methods collectively ensure that the login page is well-structured, user-friendly, and visually engaging.</p><h3 id="_3-4-register" tabindex="-1"><a class="header-anchor" href="#_3-4-register"><span>3.4 register</span></a></h3><figure><img src="`+u+`" alt="image-20240618203535332" tabindex="0" loading="lazy"><figcaption>image-20240618203535332</figcaption></figure><p>This HTML, CSS, and JavaScript code provides a registration form, including basic form validation functionalities. Here’s an explanation of the methods used and the functionalities they implement:</p><h4 id="_3-4-1-html-section" tabindex="-1"><a class="header-anchor" href="#_3-4-1-html-section"><span>3.4.1 HTML Section</span></a></h4><ul><li><p><strong>DOCTYPE Declaration</strong>:</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">&lt;!</span><span style="color:#F92672;">DOCTYPE</span><span style="color:#A6E22E;"> html</span><span style="color:#F8F8F2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Declares the document type as HTML5.</p></li><li><p><strong>Meta Tag</strong>:</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">meta</span><span style="color:#A6E22E;"> http-equiv</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;Content-Type&quot;</span><span style="color:#A6E22E;"> content</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;register/html; charset=utf-8&quot;</span><span style="color:#F8F8F2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Sets the webpage&#39;s character encoding to UTF-8.</p></li><li><p><strong>Title</strong>:</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">title</span><span style="color:#F8F8F2;">&gt;注册&lt;/</span><span style="color:#F92672;">title</span><span style="color:#F8F8F2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Sets the webpage&#39;s title to &quot;Registration&quot;.</p></li><li><p><strong>Form</strong>:</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">form</span><span style="color:#A6E22E;"> action</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;&quot;</span><span style="color:#F8F8F2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Defines a form for user input for registration.</p></li><li><p><strong>Input Fields and Buttons</strong>:</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">p</span><span style="color:#F8F8F2;">&gt;用户姓名:&lt;</span><span style="color:#F92672;">input</span><span style="color:#A6E22E;"> id</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;userNname&quot;</span><span style="color:#A6E22E;"> name</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;username&quot;</span><span style="color:#A6E22E;"> type</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;text&quot;</span><span style="color:#A6E22E;"> autofocus</span><span style="color:#A6E22E;"> required</span><span style="color:#F8F8F2;">&gt;&lt;</span><span style="color:#F92672;">label</span><span style="color:#A6E22E;"> id</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;name_trip&quot;</span><span style="color:#F8F8F2;">&gt;&lt;/</span><span style="color:#F92672;">label</span><span style="color:#F8F8F2;">&gt;&lt;/</span><span style="color:#F92672;">p</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">p</span><span style="color:#F8F8F2;">&gt;用户密码:&lt;</span><span style="color:#F92672;">input</span><span style="color:#A6E22E;"> id</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;password&quot;</span><span style="color:#A6E22E;"> type</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;password&quot;</span><span style="color:#A6E22E;"> name</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;password&quot;</span><span style="color:#A6E22E;"> required</span><span style="color:#F8F8F2;">&gt;&lt;</span><span style="color:#F92672;">label</span><span style="color:#A6E22E;"> id</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;password_trip&quot;</span><span style="color:#F8F8F2;">&gt;&lt;/</span><span style="color:#F92672;">label</span><span style="color:#F8F8F2;">&gt;&lt;/</span><span style="color:#F92672;">p</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;</span><span style="color:#F92672;">p</span><span style="color:#A6E22E;"> style</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;text-align: center;&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    &lt;</span><span style="color:#F92672;">input</span><span style="color:#A6E22E;"> type</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;submit&quot;</span><span style="color:#A6E22E;"> class</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;button&quot;</span><span style="color:#A6E22E;"> value</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;Register&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">    &lt;</span><span style="color:#F92672;">input</span><span style="color:#A6E22E;"> type</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;reset&quot;</span><span style="color:#A6E22E;"> class</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;button&quot;</span><span style="color:#A6E22E;"> value</span><span style="color:#F8F8F2;">=</span><span style="color:#E6DB74;">&quot;重置&quot;</span><span style="color:#F8F8F2;">&gt;</span></span>
<span class="line"><span style="color:#F8F8F2;">&lt;/</span><span style="color:#F92672;">p</span><span style="color:#F8F8F2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Includes input fields for username and password, along with &quot;Register&quot; and &quot;Reset&quot; buttons.</p></li></ul><h4 id="_3-4-2-css-section" tabindex="-1"><a class="header-anchor" href="#_3-4-2-css-section"><span>3.4.2 CSS Section</span></a></h4><ul><li><p><strong>Global Reset</strong>:</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">*</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    margin</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    padding</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Removes default margin and padding from all elements.</p></li><li><p><strong>Background Image</strong>:</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">html</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    height</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">100</span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    width</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">100</span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    overflow</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">hidden</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    margin</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    padding</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    background</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">url</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;{{ url_for(&#39;static&#39;, filename=&#39;image/Desert.png&#39;) }}&quot;</span><span style="color:#F8F8F2;">) </span><span style="color:#66D9EF;">no-repeat</span><span style="color:#AE81FF;"> 0</span><span style="color:#F92672;">px</span><span style="color:#AE81FF;"> 0</span><span style="color:#F92672;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    background-repeat</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">no-repeat</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    background-size</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">100</span><span style="color:#F92672;">%</span><span style="color:#AE81FF;"> 100</span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    -moz-background-size</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">100</span><span style="color:#F92672;">%</span><span style="color:#AE81FF;"> 100</span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Sets the background image for the <code>html</code> element.</p></li><li><p><strong>Body Flexbox Layout</strong>:</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">body</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    display</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">flex</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    align-items</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">center</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    justify-content</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">center</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    height</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">100</span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Uses flexbox layout to center content both vertically and horizontally.</p></li><li><p><strong>Login Box Styling</strong>:</p><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#A6E22E;">#loginDiv</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    width</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">37</span><span style="color:#F92672;">%</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    display</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">flex</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    justify-content</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">center</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    align-items</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">center</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    height</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">650</span><span style="color:#F92672;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    background-color</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">rgba</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">75</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">81</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">95</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0.3</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    box-shadow</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">7</span><span style="color:#F92672;">px</span><span style="color:#AE81FF;"> 7</span><span style="color:#F92672;">px</span><span style="color:#AE81FF;"> 17</span><span style="color:#F92672;">px</span><span style="color:#66D9EF;"> rgba</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">52</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">56</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">66</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0.5</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    border-radius</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">5</span><span style="color:#F92672;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Styles the login box, setting its width, height, background color, shadow, and border radius.</p></li><li><p><strong>Input and Button Styling</strong>:</p><div class="language-css line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="css" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#F92672;">input</span><span style="color:#F8F8F2;">,</span></span>
<span class="line"><span style="color:#F92672;">select</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    margin-left</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">15</span><span style="color:#F92672;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    border-radius</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">5</span><span style="color:#F92672;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    border-style</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">hidden</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    height</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">30</span><span style="color:#F92672;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    width</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">140</span><span style="color:#F92672;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    background-color</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">rgba</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">216</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">191</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">216</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">0.5</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    outline</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">none</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    color</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">#f0edf3</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    padding-left</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">10</span><span style="color:#F92672;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6E22E;">.button</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    border-color</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">cornsilk</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    background-color</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">rgba</span><span style="color:#F8F8F2;">(</span><span style="color:#AE81FF;">100</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">149</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">237</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">.7</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    color</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">aliceblue</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    border-style</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;">hidden</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    border-radius</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">5</span><span style="color:#F92672;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    width</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">100</span><span style="color:#F92672;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    height</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">31</span><span style="color:#F92672;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    font-size</span><span style="color:#F8F8F2;">: </span><span style="color:#AE81FF;">16</span><span style="color:#F92672;">px</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>Styles the input fields and buttons, including padding, border-radius, background color, border style, and text color.</p></li></ul><h4 id="_3-4-3-javascript-section" tabindex="-1"><a class="header-anchor" href="#_3-4-3-javascript-section"><span>3.4.3 JavaScript Section</span></a></h4><ul><li><p><strong>Tooltip Function</strong>:</p><div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#A6E22E;"> trip</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">obj</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">trip</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#F8F8F2;">    document.</span><span style="color:#A6E22E;">getElementById</span><span style="color:#F8F8F2;">(obj).innerHTML </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;&lt;b&gt;&quot;</span><span style="color:#F92672;"> +</span><span style="color:#F8F8F2;"> trip </span><span style="color:#F92672;">+</span><span style="color:#E6DB74;"> &quot;&lt;/b&gt;&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Displays a tooltip message.</p></li><li><p><strong>Form Validation Functions</strong>:</p><div class="language-javascript line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="javascript" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#A6E22E;"> checkSex</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    var</span><span style="color:#F8F8F2;"> sexNum </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#A6E22E;">getElementsByName</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;sex&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    var</span><span style="color:#F8F8F2;"> sex </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> sexNum.length; </span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">i) {</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> (sexNum[i].checked) {</span></span>
<span class="line"><span style="color:#F8F8F2;">            sex </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> sexNum[i];</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> (sex </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;&quot;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#A6E22E;">        trip</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;sex_trip&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;ERROR!!&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#AE81FF;"> false</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#A6E22E;">        trip</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;sex_trip&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;OK!!&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#A6E22E;"> checkHobby</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    var</span><span style="color:#F8F8F2;"> hobbyNum </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#A6E22E;">getElementsByName</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;hobby&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    var</span><span style="color:#F8F8F2;"> hobby </span><span style="color:#F92672;">=</span><span style="color:#E6DB74;"> &quot;&quot;</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F92672;">    for</span><span style="color:#F8F8F2;"> (</span><span style="color:#66D9EF;font-style:italic;">let</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">; i </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> hobbyNum.length; </span><span style="color:#F92672;">++</span><span style="color:#F8F8F2;">i) {</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> (hobbyNum[i].checked) {</span></span>
<span class="line"><span style="color:#F8F8F2;">            hobby </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> hobbyNum[i];</span></span>
<span class="line"><span style="color:#F8F8F2;">        }</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> (hobby </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;&quot;</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#A6E22E;">        trip</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;hobby_trip&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;ERROR!!&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#AE81FF;"> false</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#A6E22E;">        trip</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;hobby_trip&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;OK!!&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#A6E22E;"> checkSelect</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    var</span><span style="color:#F8F8F2;"> myselect </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#A6E22E;">getElementById</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;userType&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    var</span><span style="color:#F8F8F2;"> index </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> myselect.selectedIndex;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    var</span><span style="color:#F8F8F2;"> checkValue </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> myselect.options[index].value;</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> (checkValue </span><span style="color:#F92672;">==</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#A6E22E;">        trip</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;type_trip&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;请选择!!&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#AE81FF;"> false</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#A6E22E;">        trip</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;type_trip&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;OK!!&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">function</span><span style="color:#A6E22E;"> checkForm</span><span style="color:#F8F8F2;">() {</span></span>
<span class="line"><span style="color:#A6E22E;">    checkSelect</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#A6E22E;">    checkHobby</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"><span style="color:#A6E22E;">    checkSex</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    var</span><span style="color:#F8F8F2;"> trip </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#A6E22E;">getElementsByName</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;em&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    var</span><span style="color:#F8F8F2;"> tripV </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> trip.</span><span style="color:#A6E22E;">innerHTML</span><span style="color:#F8F8F2;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    var</span><span style="color:#F8F8F2;"> userNname </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#A6E22E;">getElementById</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;userNname&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    var</span><span style="color:#F8F8F2;"> uName </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> userNname.value;</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> (uName.length </span><span style="color:#F92672;">&lt;</span><span style="color:#AE81FF;"> 1</span><span style="color:#F92672;"> ||</span><span style="color:#F8F8F2;"> uName.length </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 10</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#A6E22E;">        trip</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;name_trip&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;账号长度为1-10位!!&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#AE81FF;"> false</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#A6E22E;">        trip</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;name_trip&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;OK!!&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    var</span><span style="color:#F8F8F2;"> password </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#A6E22E;">getElementById</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;password&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    var</span><span style="color:#F8F8F2;"> userPass </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> password.value;</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> (userPass.length </span><span style="color:#F92672;">&lt;</span><span style="color:#AE81FF;"> 6</span><span style="color:#F8F8F2;">) {</span></span>
<span class="line"><span style="color:#A6E22E;">        trip</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;password_trip&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;密码要&gt;6位!!&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#AE81FF;"> false</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#A6E22E;">        trip</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;password_trip&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;OK!!&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    var</span><span style="color:#F8F8F2;"> surePassword </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> document.</span><span style="color:#A6E22E;">getElementById</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;surePassword&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    var</span><span style="color:#F8F8F2;"> surePass </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> surePassword.value;</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> (userPass </span><span style="color:#F92672;">!=</span><span style="color:#F8F8F2;"> surePass) {</span></span>
<span class="line"><span style="color:#A6E22E;">        trip</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;surePassword_trip&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;两次密码不一致!!&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#AE81FF;"> false</span><span style="color:#F8F8F2;">;</span></span>
<span class="line"><span style="color:#F8F8F2;">    } </span><span style="color:#F92672;">else</span><span style="color:#F8F8F2;"> {</span></span>
<span class="line"><span style="color:#A6E22E;">        trip</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;surePassword_trip&quot;</span><span style="color:#F8F8F2;">, </span><span style="color:#E6DB74;">&quot;OK!!&quot;</span><span style="color:#F8F8F2;">);</span></span>
<span class="line"><span style="color:#F8F8F2;">    }</span></span>
<span class="line"><span style="color:#F8F8F2;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>Implements validation logic for gender, hobbies, user type, username, password, and confirm password fields, displaying appropriate messages.</p></li></ul><h4 id="_3-4-4-summary" tabindex="-1"><a class="header-anchor" href="#_3-4-4-summary"><span>3.4.4 Summary</span></a></h4><p>This code implements a registration page with a form for user input, enhanced by CSS for styling and JavaScript for client-side validation. HTML is used for structuring the form, CSS for styling elements and ensuring a responsive design, and JavaScript for validating user input to ensure it meets predefined criteria before submission.</p><h1 id="discussion" tabindex="-1"><a class="header-anchor" href="#discussion"><span>Discussion</span></a></h1><p><strong>Discussion of Result:</strong></p><p>During the code writing process, the integration of the written code into the main body code requires a detailed reading of the logical functionality of the group member&#39;s code. In the process, the authors learned to think and use MQTT. In the process of writing web pages, the author mastered the development of front-end code using Flask and Django as the back-end, and developed web pages with aesthetics based on the structure of a simple web page.</p><p><strong>Future Recommendations:</strong></p><p>Try more features such as member account and non-member account (need to add new inheritance classes in sever and client), to further deepen the use of MQTT and improve the ability to manage the code.</p><p><strong>Research Limitations:</strong></p><p>The code doesn&#39;t make the login-registration conversion icon on the page, instead you have to switch between login and registration by changing the URL directly.</p><h1 id="result" tabindex="-1"><a class="header-anchor" href="#result"><span>Result</span></a></h1><p>Has been showed in -&gt;</p><ol start="2"><li><p>Brief summary of individual work results -&gt;</p><p>2.1 The results of running the former function.</p></li></ol><h1 id="project-management" tabindex="-1"><a class="header-anchor" href="#project-management"><span>Project Management</span></a></h1><p><strong>The summary overview of the current status:</strong></p><p>The main part can run normally, the sever and the client can pass messages to each other, the database can store the client information, the web pages can be merged, and the information in the database can be shared between the parts through the sever.</p><p><strong>Gantt chart:</strong></p><figure><img src="`+v+'" alt="image-20240625144948583" tabindex="0" loading="lazy"><figcaption>image-20240625144948583</figcaption></figure><h1 id="reference" tabindex="-1"><a class="header-anchor" href="#reference"><span>Reference:</span></a></h1><blockquote><p><a href="https://github.coventry.ac.uk/suz19/MQTT" target="_blank" rel="noopener noreferrer">https://github.coventry.ac.uk/suz19/MQTT</a></p></blockquote><h1 id="appendix" tabindex="-1"><a class="header-anchor" href="#appendix"><span>Appendix</span></a></h1><p><strong>Logbook:</strong></p><blockquote><p><a href="https://fafl00pjf2.feishu.cn/docx/A5pHdLuQcoJ3FYxb5iQc5XkJn7b?from=from_copylink" target="_blank" rel="noopener noreferrer">https://fafl00pjf2.feishu.cn/docx/A5pHdLuQcoJ3FYxb5iQc5XkJn7b?from=from_copylink</a></p></blockquote><p><strong>Flowchart:</strong></p><img src="'+m+'" alt="image-20240625200921070" style="zoom:67%;"><p>Use Interface:</p><img src="'+b+'" alt="image-20240625201018579" style="zoom:50%;"><p><strong>UML Diagram:</strong></p><img src="'+f+'" alt="image-20240625201156674" style="zoom:50%;"><p><strong>Version Control:</strong></p><blockquote><p><a href="https://github.coventry.ac.uk/suz19/MQTT" target="_blank" rel="noopener noreferrer">https://github.coventry.ac.uk/suz19/MQTT</a></p></blockquote>',187)]))}const A=n(g,[["render",E]]),q=JSON.parse('{"path":"/zh/MQTT.html","title":"MQTT","lang":"zh-CN","frontmatter":{"title":"MQTT","icon":"alias","date":"2024-06-18T18:45:25.000Z","author":"XiaoXianYue","isOriginal":true,"category":["大二下","论文"],"tag":["大二下","论文"],"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"description":"​ image-20240625201736511 ​ MQTT – Class 2 - Group 12 ​ Name：XianYue Xiao ​ Student ID: 202229013065N ​ Activity Learning Orientation ​ Supervisor: Dr. Long Chen ​ June 2024 Abs...","head":[["meta",{"property":"og:url","content":"https://bougiemoonintaurus/zh/MQTT.html"}],["meta",{"property":"og:site_name","content":"奶酪奶酪"}],["meta",{"property":"og:title","content":"MQTT"}],["meta",{"property":"og:description","content":"​ image-20240625201736511 ​ MQTT – Class 2 - Group 12 ​ Name：XianYue Xiao ​ Student ID: 202229013065N ​ Activity Learning Orientation ​ Supervisor: Dr. Long Chen ​ June 2024 Abs..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-05T10:06:59.000Z"}],["meta",{"property":"article:author","content":"XiaoXianYue"}],["meta",{"property":"article:tag","content":"大二下"}],["meta",{"property":"article:tag","content":"论文"}],["meta",{"property":"article:published_time","content":"2024-06-18T18:45:25.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-05T10:06:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MQTT\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-06-18T18:45:25.000Z\\",\\"dateModified\\":\\"2024-08-05T10:06:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"XiaoXianYue\\"}]}"]]},"git":{"createdTime":1718714472000,"updatedTime":1722852419000,"contributors":[{"name":"Xiaoxianyue","username":"Xiaoxianyue","email":"2310219843@qq.com","commits":6,"url":"https://github.com/Xiaoxianyue"}]},"readingTime":{"minutes":23.19,"words":6957},"filePathRelative":"zh/MQTT.md","localizedDate":"2024年6月18日","excerpt":"<p>​                                                                   </p>\\n<p>​                                                                                    MQTT – Class 2 - Group 12</p>\\n<p>​                                                                                         Name：XianYue Xiao</p>","autoDesc":true}');export{A as comp,q as data};
