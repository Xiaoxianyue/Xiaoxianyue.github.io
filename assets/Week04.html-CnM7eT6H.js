import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,b as F,a as s,e as r,w as o,d as l,r as y,o as e}from"./app-wJZTzokE.js";const m="/assets/aaa-xpD3vIj2.png",u="/assets/kskkk-BiZwbW_r.png",v="/assets/5217dda2d00603619c9fd8cd8629436-D7QpmTBq.jpg",T="/assets/f836df0e315d62fd3e13984f8a56eda-D4Xbig8B.jpg",Q="/assets/11996f9f3adbf474c69e91208810879-Bc2n2IXo.jpg",b="/assets/06a59b571390daafe4e082fe8608c12-nkVSOeLl.jpg",h="/assets/56eaf3705c725e54d4666ef0f01d78a-DQLXI6bc.jpg",f="/assets/8ee88391a9bfff5c4614774a753065a-DE6sQ8bv.jpg",g="/assets/8f5218fb1b1261be094ca8f7d48398e-CestzJSR.png",E="/assets/7748085f65164c5deb5f865c920d51f-uxQOrWDs.png",D="/assets/904f7f53686d6f50eae19e9b21b10b1-BJGRSIVD.png",A="/assets/cc07789286479fa756a58bf6380a830-hO9oNgcX.png",x="/assets/3579bb330340b1215203a315c12b14a-C3iCS0aa.jpg",w="/assets/ksksksk-BS5uMlsV.jpg",_="/assets/%E6%94%B6%E6%8B%BE%E6%94%B6%E6%8B%BE-C7EIndEk.jpg",H="/assets/sksksksksksksksk-BQr7i_Mb.png",M="/assets/sasa-B37ZAizN.png",N="/assets/%E7%9D%A1%E5%95%A6%E5%8D%A1%E5%8D%A1%E8%BD%A6s-CqBoj7d1.png",L="/assets/bbd9d2ed5fd62e474612bb643219930-B88wQboo.jpg",V={},B={class:"MathJax",jax:"SVG",style:{position:"relative"}},k={style:{"vertical-align":"-0.186ex"},xmlns:"http://www.w3.org/2000/svg",width:"8.182ex",height:"2.117ex",role:"img",focusable:"false",viewBox:"0 -853.7 3616.4 935.7","aria-hidden":"true"},Z={class:"MathJax",jax:"SVG",style:{position:"relative"}},q={style:{"vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"0.781ex",height:"1.52ex",role:"img",focusable:"false",viewBox:"0 -661 345 672","aria-hidden":"true"},j={class:"MathJax",jax:"SVG",style:{position:"relative"}},C={style:{"vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"3.915ex",height:"1.887ex",role:"img",focusable:"false",viewBox:"0 -833.9 1730.6 833.9","aria-hidden":"true"},S={class:"MathJax",jax:"SVG",style:{position:"relative"}},G={style:{"vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"1.131ex",height:"1.507ex",role:"img",focusable:"false",viewBox:"0 -666 500 666","aria-hidden":"true"},J={class:"MathJax",jax:"SVG",style:{position:"relative"}},O={style:{"vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.303ex",height:"1.595ex",role:"img",focusable:"false",viewBox:"0 -694 576 705","aria-hidden":"true"},z={class:"MathJax",jax:"SVG",style:{position:"relative"}},I={style:{"vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"2.24ex",height:"1.932ex",role:"img",focusable:"false",viewBox:"0 -853.7 990.3 853.7","aria-hidden":"true"},X={class:"MathJax",jax:"SVG",style:{position:"relative"}},R={style:{"vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"1.131ex",height:"1.507ex",role:"img",focusable:"false",viewBox:"0 -666 500 666","aria-hidden":"true"},W={class:"MathJax",jax:"SVG",style:{position:"relative"}},P={style:{"vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.303ex",height:"1.595ex",role:"img",focusable:"false",viewBox:"0 -694 576 705","aria-hidden":"true"},U={class:"MathJax",jax:"SVG",style:{position:"relative"}},Y={style:{"vertical-align":"-0.186ex"},xmlns:"http://www.w3.org/2000/svg",width:"8.182ex",height:"2.117ex",role:"img",focusable:"false",viewBox:"0 -853.7 3616.4 935.7","aria-hidden":"true"},K={class:"MathJax",jax:"SVG",style:{position:"relative"}},$={style:{"vertical-align":"-0.186ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.2ex",height:"1.756ex",role:"img",focusable:"false",viewBox:"0 -694 2298.4 776","aria-hidden":"true"},ss={class:"MathJax",jax:"SVG",style:{position:"relative"}},ls={style:{"vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.357ex",height:"1.025ex",role:"img",focusable:"false",viewBox:"0 -442 600 453","aria-hidden":"true"},ns={class:"MathJax",jax:"SVG",style:{position:"relative"}},as={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"14.791ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 6537.4 1000","aria-hidden":"true"},es={class:"MathJax",jax:"SVG",style:{position:"relative"}},os={style:{"vertical-align":"-0.186ex"},xmlns:"http://www.w3.org/2000/svg",width:"5.254ex",height:"1.692ex",role:"img",focusable:"false",viewBox:"0 -666 2322.4 748","aria-hidden":"true"},ts={class:"MathJax",jax:"SVG",style:{position:"relative"}},ps={style:{"vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.262ex",height:"1.181ex",role:"img",focusable:"false",viewBox:"0 -511 1000 522","aria-hidden":"true"},Fs={class:"MathJax",jax:"SVG",style:{position:"relative"}},rs={style:{"vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"2.262ex",height:"1.181ex",role:"img",focusable:"false",viewBox:"0 -511 1000 522","aria-hidden":"true"},cs={class:"MathJax",jax:"SVG",style:{position:"relative"}},is={style:{"vertical-align":"-0.09ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.76ex",height:"1.312ex",role:"img",focusable:"false",viewBox:"0 -540 778 580","aria-hidden":"true"},ys={class:"MathJax",jax:"SVG",style:{position:"relative"}},ds={style:{"vertical-align":"-0.09ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.76ex",height:"1.312ex",role:"img",focusable:"false",viewBox:"0 -540 778 580","aria-hidden":"true"},ms={class:"MathJax",jax:"SVG",style:{position:"relative"}},us={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.844ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2141 1000","aria-hidden":"true"},vs={style:{"text-align":"left"}},Ts={class:"MathJax",jax:"SVG",style:{position:"relative"}},Qs={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.844ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2141 1000","aria-hidden":"true"},bs={style:{"text-align":"left"}},hs={class:"MathJax",jax:"SVG",style:{position:"relative"}},fs={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"7.695ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 3401 1000","aria-hidden":"true"},gs={style:{"text-align":"left"}},Es={class:"MathJax",jax:"SVG",style:{position:"relative"}},Ds={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.618ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2041 1000","aria-hidden":"true"},As={style:{"text-align":"left"}},xs={class:"MathJax",jax:"SVG",style:{position:"relative"}},ws={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"7.695ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 3401 1000","aria-hidden":"true"},_s={style:{"text-align":"left"}},Hs={class:"MathJax",jax:"SVG",style:{position:"relative"}},Ms={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.844ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2141 1000","aria-hidden":"true"},Ns={style:{"text-align":"left"}},Ls={class:"MathJax",jax:"SVG",style:{position:"relative"}},Vs={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"7.695ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 3401 1000","aria-hidden":"true"},Bs={class:"MathJax",jax:"SVG",style:{position:"relative"}},ks={style:{"vertical-align":"-0.464ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.208ex",height:"2.034ex",role:"img",focusable:"false",viewBox:"0 -694 1860 899","aria-hidden":"true"},Zs={class:"MathJax",jax:"SVG",style:{position:"relative"}},qs={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"4.844ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 2141 1000","aria-hidden":"true"},js={class:"MathJax",jax:"SVG",style:{position:"relative"}},Cs={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"8.112ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 3585.7 1000","aria-hidden":"true"},Ss={start:"3"},Gs={class:"MathJax",jax:"SVG",style:{position:"relative"}},Js={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"8.112ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 3585.7 1000","aria-hidden":"true"},Os={class:"MathJax",jax:"SVG",style:{position:"relative"}},zs={style:{"vertical-align":"-0.186ex"},xmlns:"http://www.w3.org/2000/svg",width:"6.137ex",height:"2.117ex",role:"img",focusable:"false",viewBox:"0 -853.7 2712.7 935.7","aria-hidden":"true"},Is={class:"MathJax",jax:"SVG",style:{position:"relative"}},Xs={style:{"vertical-align":"-0.186ex"},xmlns:"http://www.w3.org/2000/svg",width:"10.164ex",height:"2.072ex",role:"img",focusable:"false",viewBox:"0 -833.9 4492.6 915.9","aria-hidden":"true"},Rs={class:"MathJax",jax:"SVG",style:{position:"relative"}},Ws={style:{"vertical-align":"-0.186ex"},xmlns:"http://www.w3.org/2000/svg",width:"10.164ex",height:"2.072ex",role:"img",focusable:"false",viewBox:"0 -833.9 4492.6 915.9","aria-hidden":"true"},Ps={class:"MathJax",jax:"SVG",style:{position:"relative"}},Us={style:{"vertical-align":"-0.186ex"},xmlns:"http://www.w3.org/2000/svg",width:"10.164ex",height:"2.071ex",role:"img",focusable:"false",viewBox:"0 -833.2 4492.6 915.2","aria-hidden":"true"},Ys={class:"MathJax",jax:"SVG",style:{position:"relative"}},Ks={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"8.112ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 3585.7 1000","aria-hidden":"true"},$s={class:"MathJax",jax:"SVG",style:{position:"relative"}},sl={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"8.112ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 3585.7 1000","aria-hidden":"true"},ll={class:"MathJax",jax:"SVG",style:{position:"relative"}},nl={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"8.112ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 3585.7 1000","aria-hidden":"true"},al={class:"MathJax",jax:"SVG",style:{position:"relative"}},el={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"8.112ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 3585.7 1000","aria-hidden":"true"},ol={class:"MathJax",jax:"SVG",style:{position:"relative"}},tl={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"8.112ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 3585.7 1000","aria-hidden":"true"},pl={class:"hint-container info"},Fl={class:"MathJax",jax:"SVG",style:{position:"relative"}},rl={style:{"vertical-align":"0"},xmlns:"http://www.w3.org/2000/svg",width:"2.24ex",height:"1.932ex",role:"img",focusable:"false",viewBox:"0 -853.7 990.3 853.7","aria-hidden":"true"},cl={class:"MathJax",jax:"SVG",style:{position:"relative"}},il={style:{"vertical-align":"-0.025ex"},xmlns:"http://www.w3.org/2000/svg",width:"1.303ex",height:"1.595ex",role:"img",focusable:"false",viewBox:"0 -694 576 705","aria-hidden":"true"},yl={class:"MathJax",jax:"SVG",style:{position:"relative"}},dl={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"9.1ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 4022.2 1000","aria-hidden":"true"},ml={class:"MathJax",jax:"SVG",style:{position:"relative"}},ul={style:{"vertical-align":"-0.566ex"},xmlns:"http://www.w3.org/2000/svg",width:"8.112ex",height:"2.262ex",role:"img",focusable:"false",viewBox:"0 -750 3585.7 1000","aria-hidden":"true"};function vl(Tl,n){const i=y("Tabs"),c=y("CodeTabs");return e(),a("div",null,[n[191]||(n[191]=F(`<h2 id="_1-二叉树基本信息" tabindex="-1"><a class="header-anchor" href="#_1-二叉树基本信息"><span>1. 二叉树基本信息</span></a></h2><p>二叉树（Binary Tree）是一种非线性数据结构，代表“祖先”和“后代”的派生关系，体现了“一分为二”的分治逻辑。与链表类似，二叉树的基本单元是节点，每个节点包含值，左子结点引用和右子节点引用。</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TreeNode</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F8F8F2;">:</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.val </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> val   </span><span style="color:#88846F;"># 节点值</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.left </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> None</span><span style="color:#88846F;">   # 左子节点</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.right </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> None</span><span style="color:#88846F;">  # 右子节点</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>每个节点都有两个引用（指针）。分别指向左子结点（left-child node）和右子节点（right-child node），该节点被称为这两个子节点的父节点（parent node）。当给定一个二叉树的节点时，我们将该节点的左子结点及其以下节点形成的数称为该节点的左子树（left-subtree），同理可得右子树（right-subtree)。</p><p>在二叉树中，除叶节点外，其他所有节点都包含子节点和非空子树。如图所示，如果讲“节点2”视作父节点，则其左子节点和右子节点分别是“节点4”和“节点5”，左子树是“节点4及其以下节点形成的树”，右子树是“节点5及其以下节点形成的树”。</p><figure><img src="`+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>常用术语：</p><ul><li>根结点（root node）：位于二叉树顶层的节点，没有父节点。</li><li>叶节点（leaf node）：没有子节点的节点，其两个指针均指向 <code>None</code></li><li>边（edge）：连接两个节点的线段，即节点引用（指针）。</li><li>节点所在的层（level）：从顶至底递增，根结点所在层为 1.</li><li>二叉树的高度（height）：从根节点到最远叶节点所经过的边的数量。</li><li>节点的度（degree）：节点的子节点的数量，在二叉树中，度的取值范围是0、1、2。</li><li>节点的深度（depth）：从根结点到该节点所经历边的数量。</li><li>节点的高度（height）：从距离该节点最远的叶节点到该节点所经过的边的数量。</li></ul><figure><img src="'+u+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="hint-container warning"><p class="hint-container-title">注意</p><p>请注意，我们通常将“高度”和“深度”定义为“经过的边的数量”，但有些题目或教材可能会将其定义为“经过的节点的数量”。在这种情况下，高度和深度都需要加 1 。</p></div><h2 id="_2-二叉树基本操作" tabindex="-1"><a class="header-anchor" href="#_2-二叉树基本操作"><span>2. 二叉树基本操作</span></a></h2><h3 id="_2-1-初始化二叉树" tabindex="-1"><a class="header-anchor" href="#_2-1-初始化二叉树"><span>2.1 初始化二叉树</span></a></h3><p>与链表类似，首先初始化节点。</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TreeNode</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.val </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> val  </span><span style="color:#88846F;"># 节点值</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.left </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> None</span><span style="color:#88846F;">  # 左子节点</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.right </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> None</span><span style="color:#88846F;">  # 右子节点</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">n1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n3 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n4 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n5 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n1.left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n2</span></span>
<span class="line"><span style="color:#F8F8F2;">n1.right </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n3</span></span>
<span class="line"><span style="color:#F8F8F2;">n2.left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n4</span></span>
<span class="line"><span style="color:#F8F8F2;">n2.right </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n5</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div>`,14)),n[192]||(n[192]=s("iframe",{width:"800",height:"500",frameborder:"0",src:"https://pythontutor.com/iframe-embed.html#code=class%20TreeNode%3A%0A%20%20%20%20def%20__init__%28self,%20val%3A%20int%29%3A%0A%20%20%20%20%20%20%20%20self.val%20%3D%20val%20%20%23%20%E8%8A%82%E7%82%B9%E5%80%BC%0A%20%20%20%20%20%20%20%20self.left%20%3D%20None%20%20%23%20%E5%B7%A6%E5%AD%90%E8%8A%82%E7%82%B9%0A%20%20%20%20%20%20%20%20self.right%20%3D%20None%20%20%23%20%E5%8F%B3%E5%AD%90%E8%8A%82%E7%82%B9%0A%0A%0An1%20%3D%20TreeNode%28val%3D1%29%0An2%20%3D%20TreeNode%28val%3D2%29%0An3%20%3D%20TreeNode%28val%3D3%29%0An4%20%3D%20TreeNode%28val%3D4%29%0An5%20%3D%20TreeNode%28val%3D5%29%0An1.left%20%3D%20n2%0An1.right%20%3D%20n3%0An2.left%20%3D%20n4%0An2.right%20%3D%20n5&codeDivHeight=400&codeDivWidth=350&cumulative=false&curInstr=35&heapPrimitives=nevernest&origin=opt-frontend.js&py=3&rawInputLstJSON=%5B%5D&textReferences=false"},null,-1)),n[193]||(n[193]=F('<p>由 <a href="https://pythontutor.com" target="_blank" rel="noopener noreferrer"></a> 可知以上代码的运行逻辑，即先建立所有节点的子节点并初始化为None，再把相应的子节点一一对应放入。</p><h3 id="_2-2-插入与删除节点" tabindex="-1"><a class="header-anchor" href="#_2-2-插入与删除节点"><span>2.2 插入与删除节点</span></a></h3><p>与链表类似，在二叉树中插入与删除节点可以通过修改指针来实现。</p><ol><li>下图示意的是插入节点的过程。</li></ol><figure><img src="'+v+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>插入节点的代码：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TreeNode</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.val </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> val  </span><span style="color:#88846F;"># 节点值</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.left </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> None</span><span style="color:#88846F;">  # 左子节点</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.right </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> None</span><span style="color:#88846F;">  # 右子节点</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">n1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n3 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n4 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n5 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">p </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n1.left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n1</span></span>
<span class="line"><span style="color:#F8F8F2;">n1.right </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n3</span></span>
<span class="line"><span style="color:#F8F8F2;">n2.left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n4</span></span>
<span class="line"><span style="color:#F8F8F2;">n2.right </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n5</span></span>
<span class="line"><span style="color:#F8F8F2;">n1.left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> p</span></span>
<span class="line"><span style="color:#F8F8F2;">p.left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>去掉刚刚添加的节点？</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TreeNode</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.val </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> val  </span><span style="color:#88846F;"># 节点值</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.left </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> None</span><span style="color:#88846F;">  # 左子节点</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.right </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> None</span><span style="color:#88846F;">  # 右子节点</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">n1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n3 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n4 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n5 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">p </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n1.left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n1</span></span>
<span class="line"><span style="color:#F8F8F2;">n1.right </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n3</span></span>
<span class="line"><span style="color:#F8F8F2;">n2.left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n4</span></span>
<span class="line"><span style="color:#F8F8F2;">n2.right </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n5</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">n1.left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> p</span></span>
<span class="line"><span style="color:#F8F8F2;">p.left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">n1.left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>可视化输出二叉树：</p>`,10)),r(i,{id:"110",data:[{id:"原二叉树"},{id:"二叉树添加节点p后"},{id:"二叉树再删除节点p"}]},{title0:o(({value:t,isActive:p})=>n[0]||(n[0]=[l("原二叉树")])),title1:o(({value:t,isActive:p})=>n[1]||(n[1]=[l("二叉树添加节点p后")])),title2:o(({value:t,isActive:p})=>n[2]||(n[2]=[l("二叉树再删除节点p")])),tab0:o(({value:t,isActive:p})=>n[3]||(n[3]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"TreeNode"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    """二叉树节点类"""')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".val: "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#F8F8F2"}}," val                "),s("span",{style:{color:"#88846F"}},"# 节点值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".left: "),s("span",{style:{color:"#E6DB74"}},"'TreeNode'"),s("span",{style:{color:"#F92672"}}," |"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#88846F"}},"  # 左子节点引用")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".right: "),s("span",{style:{color:"#E6DB74"}},"'TreeNode'"),s("span",{style:{color:"#F92672"}}," |"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#88846F"}}," # 右子节点引用")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"def"),s("span",{style:{color:"#A6E22E"}}," display"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"root"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    """打印二叉树为字符树"""')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    lines, "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}},"_ "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," _display_aux(root)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    for"),s("span",{style:{color:"#F8F8F2"}}," line "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F8F8F2"}}," lines:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"(line)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"def"),s("span",{style:{color:"#A6E22E"}}," _display_aux"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"node"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    """返回包含当前子树所有行的列表，以及子树宽度、高度和水平坐标"""')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," node "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#F8F8F2"}}," ["),s("span",{style:{color:"#E6DB74"}},'" "'),s("span",{style:{color:"#F8F8F2"}},"], "),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"0")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    line "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," f"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"node.val"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"'")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    width "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF"}}," len"),s("span",{style:{color:"#F8F8F2"}},"(line)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    height "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    middle "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"//"),s("span",{style:{color:"#AE81FF"}}," 2")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 只有左子树")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," node.left "),s("span",{style:{color:"#F92672"}},"and"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#F8F8F2"}}," node.right:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        l_lines, l_width, l_height, l_middle "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," _display_aux(node.left)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        first_line "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (l_middle "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},") "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," '_'"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (l_width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," l_middle "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},") "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," line")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        second_line "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," l_middle "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," '/'"),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (l_width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," l_middle "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," width)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        shifted_lines "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," [line "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," line "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F8F8F2"}}," l_lines]")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#F8F8F2"}}," [first_line, second_line] "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," shifted_lines, l_width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," width, l_height "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 2"),s("span",{style:{color:"#F8F8F2"}},", l_width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"//"),s("span",{style:{color:"#AE81FF"}}," 2")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 只有右子树")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#F8F8F2"}}," node.left "),s("span",{style:{color:"#F92672"}},"and"),s("span",{style:{color:"#F8F8F2"}}," node.right:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        r_lines, r_width, r_height, r_middle "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," _display_aux(node.right)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        first_line "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," line "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," '_'"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," r_middle "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (r_width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," r_middle)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        second_line "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," r_middle) "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," '"),s("span",{style:{color:"#AE81FF"}},"\\\\"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (r_width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," r_middle "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        shifted_lines "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," ["),s("span",{style:{color:"#E6DB74"}},"' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," line "),s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," line "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F8F8F2"}}," r_lines]")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#F8F8F2"}}," [first_line, second_line] "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," shifted_lines, width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," r_width, r_height "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 2"),s("span",{style:{color:"#F8F8F2"}},", width "),s("span",{style:{color:"#F92672"}},"//"),s("span",{style:{color:"#AE81FF"}}," 2")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 同时有左右子树")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," node.left "),s("span",{style:{color:"#F92672"}},"and"),s("span",{style:{color:"#F8F8F2"}}," node.right:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        l_lines, l_width, l_height, l_middle "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," _display_aux(node.left)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        r_lines, r_width, r_height, r_middle "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," _display_aux(node.right)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        first_line "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (l_middle "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},") "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," '_'"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (l_width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," l_middle "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},") "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," line "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," '_'"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," r_middle "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (r_width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," r_middle)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        second_line "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," l_middle "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," '/'"),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (l_width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," l_middle "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," r_middle) "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," '"),s("span",{style:{color:"#AE81FF"}},"\\\\"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (r_width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," r_middle "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        # 对齐高度")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," l_height "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," r_height:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            l_lines "),s("span",{style:{color:"#F92672"}},"+="),s("span",{style:{color:"#F8F8F2"}}," ["),s("span",{style:{color:"#E6DB74"}},"' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," l_width] "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}}," (r_height "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," l_height)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        elif"),s("span",{style:{color:"#F8F8F2"}}," r_height "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," l_height:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            r_lines "),s("span",{style:{color:"#F92672"}},"+="),s("span",{style:{color:"#F8F8F2"}}," ["),s("span",{style:{color:"#E6DB74"}},"' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," r_width] "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}}," (l_height "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," r_height)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        merged_lines "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," [a "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," b "),s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," a, b "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," zip"),s("span",{style:{color:"#F8F8F2"}},"(l_lines, r_lines)]")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#F8F8F2"}}," [first_line, second_line] "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," merged_lines, l_width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," r_width, "),s("span",{style:{color:"#66D9EF"}},"max"),s("span",{style:{color:"#F8F8F2"}},"(l_height, r_height) "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 2"),s("span",{style:{color:"#F8F8F2"}},", l_width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"//"),s("span",{style:{color:"#AE81FF"}}," 2")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 叶子节点")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    return"),s("span",{style:{color:"#F8F8F2"}}," [line], width, height, middle")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# 示例：创建二叉树并打印")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"root "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"root.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"root.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"root.left.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"root.left.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"root.right.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#AE81FF"}},"6"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"display(root)")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1),s("p",null,"/ output",-1),s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  _1 ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}}," /"),s("span",{style:{color:"#F8F8F2"}},"  \\")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}}," 2"),s("span",{style:{color:"#AE81FF"}},"  3")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"/"),s("span",{style:{color:"#F8F8F2"}}," \\  ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#AE81FF"}}," 5")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),s("p",null,null,-1)])),tab1:o(({value:t,isActive:p})=>n[4]||(n[4]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"TreeNode"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    """二叉树节点类"""')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".val: "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#F8F8F2"}}," val                "),s("span",{style:{color:"#88846F"}},"# 节点值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".left: "),s("span",{style:{color:"#E6DB74"}},"'TreeNode'"),s("span",{style:{color:"#F92672"}}," |"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#88846F"}},"  # 左子节点引用")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".right: "),s("span",{style:{color:"#E6DB74"}},"'TreeNode'"),s("span",{style:{color:"#F92672"}}," |"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#88846F"}}," # 右子节点引用")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"def"),s("span",{style:{color:"#A6E22E"}}," display"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"root"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    """打印二叉树为字符树"""')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    lines, "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}},"_ "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," _display_aux(root)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    for"),s("span",{style:{color:"#F8F8F2"}}," line "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F8F8F2"}}," lines:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"(line)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"def"),s("span",{style:{color:"#A6E22E"}}," _display_aux"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"node"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    """返回包含当前子树所有行的列表，以及子树宽度、高度和水平坐标"""')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," node "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#F8F8F2"}}," ["),s("span",{style:{color:"#E6DB74"}},'" "'),s("span",{style:{color:"#F8F8F2"}},"], "),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"0")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    line "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," f"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"node.val"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"'")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    width "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF"}}," len"),s("span",{style:{color:"#F8F8F2"}},"(line)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    height "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    middle "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"//"),s("span",{style:{color:"#AE81FF"}}," 2")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 只有左子树")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," node.left "),s("span",{style:{color:"#F92672"}},"and"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#F8F8F2"}}," node.right:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        l_lines, l_width, l_height, l_middle "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," _display_aux(node.left)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        first_line "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (l_middle "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},") "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," '_'"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (l_width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," l_middle "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},") "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," line")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        second_line "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," l_middle "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," '/'"),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (l_width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," l_middle "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," width)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        shifted_lines "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," [line "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," line "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F8F8F2"}}," l_lines]")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#F8F8F2"}}," [first_line, second_line] "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," shifted_lines, l_width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," width, l_height "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 2"),s("span",{style:{color:"#F8F8F2"}},", l_width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"//"),s("span",{style:{color:"#AE81FF"}}," 2")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 只有右子树")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#F8F8F2"}}," node.left "),s("span",{style:{color:"#F92672"}},"and"),s("span",{style:{color:"#F8F8F2"}}," node.right:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        r_lines, r_width, r_height, r_middle "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," _display_aux(node.right)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        first_line "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," line "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," '_'"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," r_middle "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (r_width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," r_middle)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        second_line "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," r_middle) "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," '"),s("span",{style:{color:"#AE81FF"}},"\\\\"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (r_width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," r_middle "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        shifted_lines "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," ["),s("span",{style:{color:"#E6DB74"}},"' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," line "),s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," line "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F8F8F2"}}," r_lines]")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#F8F8F2"}}," [first_line, second_line] "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," shifted_lines, width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," r_width, r_height "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 2"),s("span",{style:{color:"#F8F8F2"}},", width "),s("span",{style:{color:"#F92672"}},"//"),s("span",{style:{color:"#AE81FF"}}," 2")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 同时有左右子树")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," node.left "),s("span",{style:{color:"#F92672"}},"and"),s("span",{style:{color:"#F8F8F2"}}," node.right:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        l_lines, l_width, l_height, l_middle "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," _display_aux(node.left)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        r_lines, r_width, r_height, r_middle "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," _display_aux(node.right)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        first_line "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (l_middle "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},") "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," '_'"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (l_width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," l_middle "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},") "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," line "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," '_'"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," r_middle "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (r_width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," r_middle)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        second_line "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," l_middle "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," '/'"),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (l_width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," l_middle "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," r_middle) "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," '"),s("span",{style:{color:"#AE81FF"}},"\\\\"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (r_width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," r_middle "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        # 对齐高度")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," l_height "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," r_height:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            l_lines "),s("span",{style:{color:"#F92672"}},"+="),s("span",{style:{color:"#F8F8F2"}}," ["),s("span",{style:{color:"#E6DB74"}},"' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," l_width] "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}}," (r_height "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," l_height)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        elif"),s("span",{style:{color:"#F8F8F2"}}," r_height "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," l_height:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            r_lines "),s("span",{style:{color:"#F92672"}},"+="),s("span",{style:{color:"#F8F8F2"}}," ["),s("span",{style:{color:"#E6DB74"}},"' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," r_width] "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}}," (l_height "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," r_height)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        merged_lines "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," [a "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," b "),s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," a, b "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," zip"),s("span",{style:{color:"#F8F8F2"}},"(l_lines, r_lines)]")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#F8F8F2"}}," [first_line, second_line] "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," merged_lines, l_width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," r_width, "),s("span",{style:{color:"#66D9EF"}},"max"),s("span",{style:{color:"#F8F8F2"}},"(l_height, r_height) "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 2"),s("span",{style:{color:"#F8F8F2"}},", l_width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"//"),s("span",{style:{color:"#AE81FF"}}," 2")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 叶子节点")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    return"),s("span",{style:{color:"#F8F8F2"}}," [line], width, height, middle")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# 示例：创建二叉树并打印")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# root = TreeNode(1)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# root.left = TreeNode(2)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# root.right = TreeNode(3)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# root.left.left = TreeNode(4)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# root.left.right = TreeNode(5)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# root.right.right = TreeNode(6)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n2 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n3 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n4 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n5 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"p "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n1.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n1")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n1.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n3")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n2.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n4")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n2.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n5")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n1.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," p")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"p.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n2")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"display(n1)")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1),s("p",null,"/ output",-1),s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"    1"),s("span",{style:{color:"#F8F8F2"}}," ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"   /"),s("span",{style:{color:"#F8F8F2"}}," \\")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  _0 "),s("span",{style:{color:"#AE81FF"}},"3")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}}," /"),s("span",{style:{color:"#F8F8F2"}},"    ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}}," 2"),s("span",{style:{color:"#F8F8F2"}},"    ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"/"),s("span",{style:{color:"#F8F8F2"}}," \\   ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#AE81FF"}}," 5")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),s("p",null,null,-1)])),tab2:o(({value:t,isActive:p})=>n[5]||(n[5]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"TreeNode"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    """二叉树节点类"""')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".val: "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#F8F8F2"}}," val                "),s("span",{style:{color:"#88846F"}},"# 节点值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".left: "),s("span",{style:{color:"#E6DB74"}},"'TreeNode'"),s("span",{style:{color:"#F92672"}}," |"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#88846F"}},"  # 左子节点引用")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".right: "),s("span",{style:{color:"#E6DB74"}},"'TreeNode'"),s("span",{style:{color:"#F92672"}}," |"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#88846F"}}," # 右子节点引用")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"def"),s("span",{style:{color:"#A6E22E"}}," display"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"root"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    """打印二叉树为字符树"""')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    lines, "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}},"_ "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," _display_aux(root)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    for"),s("span",{style:{color:"#F8F8F2"}}," line "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F8F8F2"}}," lines:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"(line)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"def"),s("span",{style:{color:"#A6E22E"}}," _display_aux"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"node"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    """返回包含当前子树所有行的列表，以及子树宽度、高度和水平坐标"""')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," node "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#F8F8F2"}}," ["),s("span",{style:{color:"#E6DB74"}},'" "'),s("span",{style:{color:"#F8F8F2"}},"], "),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#AE81FF"}},"0")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    line "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," f"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"node.val"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},"'")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    width "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF"}}," len"),s("span",{style:{color:"#F8F8F2"}},"(line)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    height "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    middle "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"//"),s("span",{style:{color:"#AE81FF"}}," 2")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 只有左子树")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," node.left "),s("span",{style:{color:"#F92672"}},"and"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#F8F8F2"}}," node.right:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        l_lines, l_width, l_height, l_middle "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," _display_aux(node.left)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        first_line "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (l_middle "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},") "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," '_'"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (l_width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," l_middle "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},") "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," line")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        second_line "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," l_middle "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," '/'"),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (l_width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," l_middle "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," width)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        shifted_lines "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," [line "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," line "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F8F8F2"}}," l_lines]")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#F8F8F2"}}," [first_line, second_line] "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," shifted_lines, l_width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," width, l_height "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 2"),s("span",{style:{color:"#F8F8F2"}},", l_width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"//"),s("span",{style:{color:"#AE81FF"}}," 2")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 只有右子树")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#F8F8F2"}}," node.left "),s("span",{style:{color:"#F92672"}},"and"),s("span",{style:{color:"#F8F8F2"}}," node.right:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        r_lines, r_width, r_height, r_middle "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," _display_aux(node.right)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        first_line "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," line "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," '_'"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," r_middle "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (r_width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," r_middle)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        second_line "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," r_middle) "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," '"),s("span",{style:{color:"#AE81FF"}},"\\\\"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (r_width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," r_middle "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        shifted_lines "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," ["),s("span",{style:{color:"#E6DB74"}},"' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," line "),s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," line "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F8F8F2"}}," r_lines]")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#F8F8F2"}}," [first_line, second_line] "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," shifted_lines, width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," r_width, r_height "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 2"),s("span",{style:{color:"#F8F8F2"}},", width "),s("span",{style:{color:"#F92672"}},"//"),s("span",{style:{color:"#AE81FF"}}," 2")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 同时有左右子树")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," node.left "),s("span",{style:{color:"#F92672"}},"and"),s("span",{style:{color:"#F8F8F2"}}," node.right:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        l_lines, l_width, l_height, l_middle "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," _display_aux(node.left)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        r_lines, r_width, r_height, r_middle "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," _display_aux(node.right)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        first_line "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (l_middle "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},") "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," '_'"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (l_width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," l_middle "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},") "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," line "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," '_'"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," r_middle "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (r_width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," r_middle)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        second_line "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," l_middle "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," '/'"),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (l_width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," l_middle "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," r_middle) "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," '"),s("span",{style:{color:"#AE81FF"}},"\\\\"),s("span",{style:{color:"#E6DB74"}},"'"),s("span",{style:{color:"#F92672"}}," +"),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," (r_width "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," r_middle "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#AE81FF"}}," 1"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        # 对齐高度")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," l_height "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," r_height:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            l_lines "),s("span",{style:{color:"#F92672"}},"+="),s("span",{style:{color:"#F8F8F2"}}," ["),s("span",{style:{color:"#E6DB74"}},"' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," l_width] "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}}," (r_height "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," l_height)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        elif"),s("span",{style:{color:"#F8F8F2"}}," r_height "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," l_height:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            r_lines "),s("span",{style:{color:"#F92672"}},"+="),s("span",{style:{color:"#F8F8F2"}}," ["),s("span",{style:{color:"#E6DB74"}},"' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," r_width] "),s("span",{style:{color:"#F92672"}},"*"),s("span",{style:{color:"#F8F8F2"}}," (l_height "),s("span",{style:{color:"#F92672"}},"-"),s("span",{style:{color:"#F8F8F2"}}," r_height)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        merged_lines "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," [a "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#E6DB74"}}," ' '"),s("span",{style:{color:"#F92672"}}," *"),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," b "),s("span",{style:{color:"#F92672"}},"for"),s("span",{style:{color:"#F8F8F2"}}," a, b "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," zip"),s("span",{style:{color:"#F8F8F2"}},"(l_lines, r_lines)]")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#F8F8F2"}}," [first_line, second_line] "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," merged_lines, l_width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," r_width, "),s("span",{style:{color:"#66D9EF"}},"max"),s("span",{style:{color:"#F8F8F2"}},"(l_height, r_height) "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#AE81FF"}}," 2"),s("span",{style:{color:"#F8F8F2"}},", l_width "),s("span",{style:{color:"#F92672"}},"+"),s("span",{style:{color:"#F8F8F2"}}," width "),s("span",{style:{color:"#F92672"}},"//"),s("span",{style:{color:"#AE81FF"}}," 2")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 叶子节点")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    return"),s("span",{style:{color:"#F8F8F2"}}," [line], width, height, middle")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# 示例：创建二叉树并打印")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# root = TreeNode(1)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# root.left = TreeNode(2)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# root.right = TreeNode(3)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# root.left.left = TreeNode(4)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# root.left.right = TreeNode(5)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# root.right.right = TreeNode(6)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n2 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n3 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n4 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n5 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"p "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n1.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n1")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n1.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n3")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n2.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n4")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n2.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n5")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n1.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," p")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"p.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n2")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n1.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n2")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"display(n1)")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1),s("p",null,"/ output",-1),s("div",{class:"language-python line-numbers-mode","data-highlighter":"shiki","data-ext":"python",style:{"background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  _1 ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}}," /"),s("span",{style:{color:"#F8F8F2"}},"  \\")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}}," 2"),s("span",{style:{color:"#AE81FF"}},"  3")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"/"),s("span",{style:{color:"#F8F8F2"}}," \\  ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#AE81FF"}}," 5")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1)])),_:1}),n[194]||(n[194]=F('<div class="hint-container info"><p class="hint-container-title">相关信息</p><p>需要注意的是，插入节点可能会改变二叉树的原有逻辑结构，而删除节点通常意味着删除该节点及其所有子树。因此，在二叉树中，插入与删除通常是由一套操作配合完成的，以实现有实际意义的操作。</p></div><h2 id="_3-常见二叉树类型" tabindex="-1"><a class="header-anchor" href="#_3-常见二叉树类型"><span>3. 常见二叉树类型</span></a></h2><h3 id="_3-1-完美二叉树" tabindex="-1"><a class="header-anchor" href="#_3-1-完美二叉树"><span>3.1 完美二叉树</span></a></h3>',3)),s("p",null,[n[8]||(n[8]=l("完美二叉树(perfect binary tree)所有层的节点都被完全填满。在完美二叉树中，叶节点的度为0，其余所有节点的度都为2；若树的高度为h，则总节点数为")),s("mjx-container",B,[(e(),a("svg",k,n[6]||(n[6]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mo" transform="translate(576,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1354,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2116.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(3116.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g>',1)]))),n[7]||(n[7]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("msup",null,[s("mn",null,"2"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"h"),s("mo",null,"+"),s("mn",null,"1")])]),s("mo",null,"−"),s("mn",null,"1")])],-1))]),n[9]||(n[9]=l("，呈现标准的指数级关系，反映了自然界中常见的细胞分裂现象。"))]),n[195]||(n[195]=F('<p>::: tips</p><p>请注意，在中文社区中，完美二叉树又可以称为满二叉树</p><p>:::</p><h3 id="_3-2-完全二叉树" tabindex="-1"><a class="header-anchor" href="#_3-2-完全二叉树"><span>3.2 完全二叉树</span></a></h3><p>完全二叉树（complete binary tree）只有最底层的节点未被填满，且最底层节点尽量靠左填充。</p><img src="'+T+'" alt="f836df0e315d62fd3e13984f8a56eda" style="zoom:33%;"><h3 id="_3-3-完满二叉树" tabindex="-1"><a class="header-anchor" href="#_3-3-完满二叉树"><span>3.3 完满二叉树</span></a></h3><p>完满二叉树（full binary tree）除了叶节点之外，其余所有节点都有两个子节点。</p><img src="'+Q+'" alt="11996f9f3adbf474c69e91208810879" style="zoom:25%;"><h3 id="_3-4-平衡二叉树" tabindex="-1"><a class="header-anchor" href="#_3-4-平衡二叉树"><span>3.4 平衡二叉树</span></a></h3><p>平衡二叉树（balanced binary tree）中任意节点的左子树和右子树的高度差的绝对值不超过1。</p><img src="'+b+'" alt="06a59b571390daafe4e082fe8608c12" style="zoom:33%;"><h3 id="_3-5-二叉树退化" tabindex="-1"><a class="header-anchor" href="#_3-5-二叉树退化"><span>3.5 二叉树退化</span></a></h3><p>当二叉树的每层节点都被填满时，达到“完美二叉树”；当所有节点都偏向一侧时，二叉树退化为“链表”。</p><ul><li>完美二叉树是理想情况，可以充分发挥二叉树“分治”的优势。</li><li>链表则是另一个极端，所有操作都变为线性操作，时间复杂度退化至 O(n)。</li></ul><img src="'+h+'" alt="56eaf3705c725e54d4666ef0f01d78a" style="zoom:33%;"><details class="hint-container details"><summary>详情</summary><img src="'+f+'" alt="8ee88391a9bfff5c4614774a753065a" style="zoom:33%;"><p>——chatgpt:</p><p>是的，您所上传的图片确实是一个二叉树的形式，虽然从它的结构上看更像是个“退化”的形式。通常情况下，如果二叉树的某些节点只有一个子节点（左子节点或者右子节点），而另一个子节点为空，这样的二叉树被称为“退化二叉树”（或“病态二叉树”）。这会使得树的形状接近于一条线，而不是理想的完全平衡的形状。</p><p>从图片来看，这个树的结构比较简洁，每个节点只有一个或者两个子节点，但并没有形成完全的平衡形状。如果这表示一种数据结构，通常会导致某些操作的效率下降，如查找、插入等。</p><p>如果您有更多关于二叉树结构的问题，或者需要分析具体的二叉树实现，欢迎进一步探讨。</p><p>不完全是一个退化二叉树。</p></details><div style="text-align:center;"><p>表7-1 二叉树的最佳结构和最差结构</p></div>',18)),s("table",null,[n[42]||(n[42]=s("thead",null,[s("tr",null,[s("th"),s("th",null,"完美二叉树"),s("th",null,"链表")])],-1)),s("tbody",null,[s("tr",null,[s("td",null,[n[12]||(n[12]=l("第 ")),s("mjx-container",Z,[(e(),a("svg",q,n[10]||(n[10]=[s("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[s("g",{"data-mml-node":"math"},[s("g",{"data-mml-node":"mi"},[s("path",{"data-c":"1D456",d:"M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"})])])],-1)]))),n[11]||(n[11]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"i")])],-1))]),n[13]||(n[13]=l(" 层的节点数量"))]),s("td",null,[s("mjx-container",j,[(e(),a("svg",C,n[14]||(n[14]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(345,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1123,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g></g></g>',1)]))),n[15]||(n[15]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("msup",null,[s("mn",null,"2"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"i"),s("mo",null,"−"),s("mn",null,"1")])])])],-1))])]),s("td",null,[s("mjx-container",S,[(e(),a("svg",G,n[16]||(n[16]=[s("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[s("g",{"data-mml-node":"math"},[s("g",{"data-mml-node":"mn"},[s("path",{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"})])])],-1)]))),n[17]||(n[17]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mn",null,"1")])],-1))])])]),s("tr",null,[s("td",null,[n[20]||(n[20]=l("高度为 ")),s("mjx-container",J,[(e(),a("svg",O,n[18]||(n[18]=[s("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[s("g",{"data-mml-node":"math"},[s("g",{"data-mml-node":"mi"},[s("path",{"data-c":"210E",d:"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"})])])],-1)]))),n[19]||(n[19]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"h")])],-1))]),n[21]||(n[21]=l(" 的树的叶节点数量"))]),s("td",null,[s("mjx-container",z,[(e(),a("svg",I,n[22]||(n[22]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g></g></g></g>',1)]))),n[23]||(n[23]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("msup",null,[s("mn",null,"2"),s("mi",null,"h")])])],-1))])]),s("td",null,[s("mjx-container",X,[(e(),a("svg",R,n[24]||(n[24]=[s("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[s("g",{"data-mml-node":"math"},[s("g",{"data-mml-node":"mn"},[s("path",{"data-c":"31",d:"M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"})])])],-1)]))),n[25]||(n[25]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mn",null,"1")])],-1))])])]),s("tr",null,[s("td",null,[n[28]||(n[28]=l("高度为 ")),s("mjx-container",W,[(e(),a("svg",P,n[26]||(n[26]=[s("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[s("g",{"data-mml-node":"math"},[s("g",{"data-mml-node":"mi"},[s("path",{"data-c":"210E",d:"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"})])])],-1)]))),n[27]||(n[27]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"h")])],-1))]),n[29]||(n[29]=l(" 的树的节点总数"))]),s("td",null,[s("mjx-container",U,[(e(),a("svg",Y,n[30]||(n[30]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mo" transform="translate(576,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1354,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2116.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(3116.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g>',1)]))),n[31]||(n[31]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("msup",null,[s("mn",null,"2"),s("mrow",{"data-mjx-texclass":"ORD"},[s("mi",null,"h"),s("mo",null,"+"),s("mn",null,"1")])]),s("mo",null,"−"),s("mn",null,"1")])],-1))])]),s("td",null,[s("mjx-container",K,[(e(),a("svg",$,n[32]||(n[32]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mo" transform="translate(798.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(1798.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g>',1)]))),n[33]||(n[33]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"h"),s("mo",null,"+"),s("mn",null,"1")])],-1))])])]),s("tr",null,[s("td",null,[n[36]||(n[36]=l("节点总数为 ")),s("mjx-container",ss,[(e(),a("svg",ls,n[34]||(n[34]=[s("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[s("g",{"data-mml-node":"math"},[s("g",{"data-mml-node":"mi"},[s("path",{"data-c":"1D45B",d:"M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"})])])],-1)]))),n[35]||(n[35]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"n")])],-1))]),n[37]||(n[37]=l(" 的树的高度"))]),s("td",null,[s("mjx-container",ns,[(e(),a("svg",as,n[38]||(n[38]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="mn" transform="translate(1311,-241.4) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(1714.6,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mo" transform="translate(1714.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2103.6,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(2925.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mn" transform="translate(3926,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(4426,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5037.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(6037.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g>',1)]))),n[39]||(n[39]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("msub",null,[s("mi",null,"log"),s("mn",null,"2")]),s("mo",{"data-mjx-texclass":"NONE"},"⁡"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",null,"+"),s("mn",null,"1"),s("mo",{stretchy:"false"},")"),s("mo",null,"−"),s("mn",null,"1")])],-1))])]),s("td",null,[s("mjx-container",es,[(e(),a("svg",os,n[40]||(n[40]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(822.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(1822.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g>',1)]))),n[41]||(n[41]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"n"),s("mo",null,"−"),s("mn",null,"1")])],-1))])])])])]),n[196]||(n[196]=s("h2",{id:"_4-二叉树的遍历",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-二叉树的遍历"},[s("span",null,"4. 二叉树的遍历")])],-1)),n[197]||(n[197]=s("h3",{id:"_4-1-广度优先遍历-bfs",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-1-广度优先遍历-bfs"},[s("span",null,"4.1 广度优先遍历 （BFS）")])],-1)),n[198]||(n[198]=s("p",null,"非递归：",-1)),r(c,{id:"295",data:[{id:"引入队列的实现："},{id:"不用队列，但逻辑相同 (自己方法)"},{id:"优化后"}]},{title0:o(({value:t,isActive:p})=>n[43]||(n[43]=[l("引入队列的实现：")])),title1:o(({value:t,isActive:p})=>n[44]||(n[44]=[l("不用队列，但逻辑相同 (自己方法)")])),title2:o(({value:t,isActive:p})=>n[45]||(n[45]=[l("优化后")])),tab0:o(({value:t,isActive:p})=>n[46]||(n[46]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"from"),s("span",{style:{color:"#F8F8F2"}}," collections "),s("span",{style:{color:"#F92672"}},"import"),s("span",{style:{color:"#F8F8F2"}}," deque")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"TreeNode"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    """二叉树节点类"""')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".val: "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#F8F8F2"}}," val                "),s("span",{style:{color:"#88846F"}},"# 节点值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".left: "),s("span",{style:{color:"#E6DB74"}},"'TreeNode'"),s("span",{style:{color:"#F92672"}}," |"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#88846F"}},"  # 左子节点引用")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".right: "),s("span",{style:{color:"#E6DB74"}},"'TreeNode'"),s("span",{style:{color:"#F92672"}}," |"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#88846F"}}," # 右子节点引用")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n2 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n3 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n4 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n5 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n6 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"6"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n7 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"7"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n1.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n2")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n1.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n3")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n2.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n4")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n2.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n5")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n3.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n6")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n3.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n7")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"def"),s("span",{style:{color:"#A6E22E"}}," level_order"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"root"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    queue "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," deque()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    queue.append(root)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    res "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," []")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    while"),s("span",{style:{color:"#F8F8F2"}}," queue:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        node "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," queue.popleft()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        res.append(node.val)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," node.left "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            queue.append(node.left)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," node.right "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            queue.append(node.right)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    return"),s("span",{style:{color:"#F8F8F2"}}," res")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"level_order(n1)")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab1:o(({value:t,isActive:p})=>n[47]||(n[47]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"TreeNode"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    """二叉树节点类"""')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".val: "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#F8F8F2"}}," val                "),s("span",{style:{color:"#88846F"}},"# 节点值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".left: "),s("span",{style:{color:"#E6DB74"}},"'TreeNode'"),s("span",{style:{color:"#F92672"}}," |"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#88846F"}},"  # 左子节点引用")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".right: "),s("span",{style:{color:"#E6DB74"}},"'TreeNode'"),s("span",{style:{color:"#F92672"}}," |"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#88846F"}}," # 右子节点引用")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n2 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n3 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n4 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n5 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n6 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"6"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n7 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"7"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n1.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n2")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n1.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n3")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n2.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n4")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n2.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n5")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n3.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n6")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n3.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n7")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"def"),s("span",{style:{color:"#A6E22E"}}," printtree"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"root"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    queue "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," []")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    queue.append(root)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    res "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," []")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    while"),s("span",{style:{color:"#F8F8F2"}}," queue:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        length "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#66D9EF"}}," len"),s("span",{style:{color:"#F8F8F2"}},"(queue)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        for"),s("span",{style:{color:"#F8F8F2"}}," i "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," range"),s("span",{style:{color:"#F8F8F2"}},"(length):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            node "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," queue[i]")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            res.append(node.val)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F8F8F2"}}," node.left "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                queue.append(node.left)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F8F8F2"}}," node.right "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                queue.append(node.right)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        queue "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," queue[length:]")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    return"),s("span",{style:{color:"#F8F8F2"}}," res")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"printtree(n1)")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab2:o(({value:t,isActive:p})=>n[48]||(n[48]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"TreeNode"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    """二叉树节点类"""')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".val: "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#F8F8F2"}}," val                "),s("span",{style:{color:"#88846F"}},"# 节点值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".left: "),s("span",{style:{color:"#E6DB74"}},"'TreeNode'"),s("span",{style:{color:"#F92672"}}," |"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#88846F"}},"  # 左子节点引用")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".right: "),s("span",{style:{color:"#E6DB74"}},"'TreeNode'"),s("span",{style:{color:"#F92672"}}," |"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#88846F"}}," # 右子节点引用")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n2 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n3 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n4 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n5 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n6 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"6"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n7 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"7"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n1.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n2")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n1.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n3")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n2.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n4")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n2.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n5")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n3.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n6")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n3.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n7")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"def"),s("span",{style:{color:"#A6E22E"}}," level_order"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"root"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    queue "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," []")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," root "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        queue.append(root)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    res "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," []")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    while"),s("span",{style:{color:"#F8F8F2"}}," queue:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        node "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," queue.pop("),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        res.append(node)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," node.left "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            queue.append(node.left)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," node.right "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            queue.append(node.right)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    return"),s("span",{style:{color:"#F8F8F2"}}," res")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"level_order(n1)")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),_:1}),n[199]||(n[199]=s("p",null,"递归方法：",-1)),r(i,{id:"309",data:[{id:"自己方法"},{id:""}]},{title0:o(({value:t,isActive:p})=>n[49]||(n[49]=[l("自己方法")])),title1:o(({value:t,isActive:p})=>n[50]||(n[50]=[])),tab0:o(({value:t,isActive:p})=>n[51]||(n[51]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"TreeNode"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    """二叉树节点类"""')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".val: "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#F8F8F2"}}," val                "),s("span",{style:{color:"#88846F"}},"# 节点值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".left: "),s("span",{style:{color:"#E6DB74"}},"'TreeNode'"),s("span",{style:{color:"#F92672"}}," |"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#88846F"}},"  # 左子节点引用")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".right: "),s("span",{style:{color:"#E6DB74"}},"'TreeNode'"),s("span",{style:{color:"#F92672"}}," |"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#88846F"}}," # 右子节点引用")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n2 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n3 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n4 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n5 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n6 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"6"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n7 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"7"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n1.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n2")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n1.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n3")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n2.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n4")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n2.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n5")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n3.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n6")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n3.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n7")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"res "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," []")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"def"),s("span",{style:{color:"#A6E22E"}}," level_order"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"root"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#F8F8F2"}}," res:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        res.append(root.val)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," root.left:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        res.append(root.left.val)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," root.right:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        res.append(root.right.val)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," root.left "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        level_order(root.left)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," root.right "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        level_order(root.right)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"level_order(n1)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(res)")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab1:o(({value:t,isActive:p})=>n[52]||(n[52]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"TreeNode"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    """二叉树节点类"""')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".val: "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#F8F8F2"}}," val                "),s("span",{style:{color:"#88846F"}},"# 节点值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".left: "),s("span",{style:{color:"#E6DB74"}},"'TreeNode'"),s("span",{style:{color:"#F92672"}}," |"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#88846F"}},"  # 左子节点引用")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".right: "),s("span",{style:{color:"#E6DB74"}},"'TreeNode'"),s("span",{style:{color:"#F92672"}}," |"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#88846F"}}," # 右子节点引用")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n1 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n2 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n3 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n4 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n5 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n6 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"6"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n7 "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}},"7"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n1.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n2")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n1.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n3")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n2.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n4")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n2.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n5")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n3.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n6")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"n3.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," n7")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"res "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," []")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"def"),s("span",{style:{color:"#A6E22E"}}," level_order_recursive"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"root"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    res "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," []")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," root:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        level_helper([root], res)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    return"),s("span",{style:{color:"#F8F8F2"}}," res")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"def"),s("span",{style:{color:"#A6E22E"}}," level_helper"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"queue"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"res"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#F8F8F2"}}," queue:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    node "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," queue.pop("),s("span",{style:{color:"#AE81FF"}},"0"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    res.append(node.val)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," node.left:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        queue.append(node.left)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," node.right:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        queue.append(node.right)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    level_helper(queue, res)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"level_order_recursive()")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),_:1}),n[200]||(n[200]=F(`<h3 id="_4-2-深度优先遍历-dfs" tabindex="-1"><a class="header-anchor" href="#_4-2-深度优先遍历-dfs"><span>4.2 深度优先遍历（DFS）</span></a></h3><h4 id="_4-2-1-pre-order" tabindex="-1"><a class="header-anchor" href="#_4-2-1-pre-order"><span>4.2.1 pre order</span></a></h4><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TreeNode</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#E6DB74;">    &quot;&quot;&quot;二叉树节点类&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.val: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F92672;"> =</span><span style="color:#F8F8F2;"> val                </span><span style="color:#88846F;"># 节点值</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.left: </span><span style="color:#E6DB74;">&#39;TreeNode&#39;</span><span style="color:#F92672;"> |</span><span style="color:#AE81FF;"> None</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> None</span><span style="color:#88846F;">  # 左子节点引用</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.right: </span><span style="color:#E6DB74;">&#39;TreeNode&#39;</span><span style="color:#F92672;"> |</span><span style="color:#AE81FF;"> None</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> None</span><span style="color:#88846F;"> # 右子节点引用</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">n1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n3 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n4 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n5 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n6 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n7 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n1.left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n2</span></span>
<span class="line"><span style="color:#F8F8F2;">n1.right </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n3</span></span>
<span class="line"><span style="color:#F8F8F2;">n2.left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n4</span></span>
<span class="line"><span style="color:#F8F8F2;">n2.right </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n5</span></span>
<span class="line"><span style="color:#F8F8F2;">n3.left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n6</span></span>
<span class="line"><span style="color:#F8F8F2;">n3.right </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n7</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">res </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> []</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> pre_order</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">root</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> root </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">        return</span></span>
<span class="line"><span style="color:#F8F8F2;">    res.append(root.val)</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> root.left </span><span style="color:#F92672;">is</span><span style="color:#F92672;"> not</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        pre_order(root.left)</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> root.right </span><span style="color:#F92672;">is</span><span style="color:#F92672;"> not</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        pre_order(root.right)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">pre_order(n1)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(res)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_4-2-2-in-order" tabindex="-1"><a class="header-anchor" href="#_4-2-2-in-order"><span>4.2.2 In Order</span></a></h4><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TreeNode</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#E6DB74;">    &quot;&quot;&quot;二叉树节点类&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.val: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F92672;"> =</span><span style="color:#F8F8F2;"> val                </span><span style="color:#88846F;"># 节点值</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.left: </span><span style="color:#E6DB74;">&#39;TreeNode&#39;</span><span style="color:#F92672;"> |</span><span style="color:#AE81FF;"> None</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> None</span><span style="color:#88846F;">  # 左子节点引用</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.right: </span><span style="color:#E6DB74;">&#39;TreeNode&#39;</span><span style="color:#F92672;"> |</span><span style="color:#AE81FF;"> None</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> None</span><span style="color:#88846F;"> # 右子节点引用</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">n1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n3 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n4 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n5 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n6 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n7 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n1.left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n2</span></span>
<span class="line"><span style="color:#F8F8F2;">n1.right </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n3</span></span>
<span class="line"><span style="color:#F8F8F2;">n2.left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n4</span></span>
<span class="line"><span style="color:#F8F8F2;">n2.right </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n5</span></span>
<span class="line"><span style="color:#F8F8F2;">n3.left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n6</span></span>
<span class="line"><span style="color:#F8F8F2;">n3.right </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n7</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">res </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> []</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> in_order</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">root</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> root </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">        return</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> root.left </span><span style="color:#F92672;">is</span><span style="color:#F92672;"> not</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        in_order(root.left)</span></span>
<span class="line"><span style="color:#F8F8F2;">    res.append(root.val)</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> root.right </span><span style="color:#F92672;">is</span><span style="color:#F92672;"> not</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        in_order(root.right)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">in_order(n1)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(res)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_4-2-3-post-order" tabindex="-1"><a class="header-anchor" href="#_4-2-3-post-order"><span>4.2.3 Post Order</span></a></h4><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TreeNode</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#E6DB74;">    &quot;&quot;&quot;二叉树节点类&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.val: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F92672;"> =</span><span style="color:#F8F8F2;"> val                </span><span style="color:#88846F;"># 节点值</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.left: </span><span style="color:#E6DB74;">&#39;TreeNode&#39;</span><span style="color:#F92672;"> |</span><span style="color:#AE81FF;"> None</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> None</span><span style="color:#88846F;">  # 左子节点引用</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.right: </span><span style="color:#E6DB74;">&#39;TreeNode&#39;</span><span style="color:#F92672;"> |</span><span style="color:#AE81FF;"> None</span><span style="color:#F92672;"> =</span><span style="color:#AE81FF;"> None</span><span style="color:#88846F;"> # 右子节点引用</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">n1 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n2 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n3 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n4 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n5 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">5</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n6 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n7 </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> TreeNode(</span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F92672;">=</span><span style="color:#AE81FF;">7</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F8F8F2;">n1.left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n2</span></span>
<span class="line"><span style="color:#F8F8F2;">n1.right </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n3</span></span>
<span class="line"><span style="color:#F8F8F2;">n2.left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n4</span></span>
<span class="line"><span style="color:#F8F8F2;">n2.right </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n5</span></span>
<span class="line"><span style="color:#F8F8F2;">n3.left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n6</span></span>
<span class="line"><span style="color:#F8F8F2;">n3.right </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> n7</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">res </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> []</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> post_order</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">root</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> root </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">        return</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> root.left </span><span style="color:#F92672;">is</span><span style="color:#F92672;"> not</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        post_order(root.left)</span></span>
<span class="line"><span style="color:#F8F8F2;">    </span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> root.right </span><span style="color:#F92672;">is</span><span style="color:#F92672;"> not</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">        post_order(root.right)</span></span>
<span class="line"><span style="color:#F8F8F2;">        </span></span>
<span class="line"><span style="color:#F8F8F2;">    res.append(root.val)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">post_order(n1)</span></span>
<span class="line"><span style="color:#66D9EF;">print</span><span style="color:#F8F8F2;">(res)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="_5-二叉树的数组表示" tabindex="-1"><a class="header-anchor" href="#_5-二叉树的数组表示"><span>5. 二叉树的数组表示</span></a></h2><figure><img src="`+g+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_5-1-用二叉树的数组表示实现-bfs-dfs" tabindex="-1"><a class="header-anchor" href="#_5-1-用二叉树的数组表示实现-bfs-dfs"><span>5.1 用二叉树的数组表示实现 BFS DFS</span></a></h3><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TreeNode</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#E6DB74;">    &quot;&quot;&quot;二叉树节点类&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.val </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> val</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.left </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> None</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.right </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> None</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">ArrayBinaryTree</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#E6DB74;">    &quot;&quot;&quot;数组表示下的二叉树类&quot;&quot;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">arr</span><span style="color:#F8F8F2;">: list[</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F92672;"> |</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">]):</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;构造方法&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">._tree </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;font-style:italic;"> list</span><span style="color:#F8F8F2;">(arr)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> size</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;列表容量&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#66D9EF;"> len</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">._tree)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> val</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">i</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">) -&gt; </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;获取索引为 i 节点的值&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">&lt;</span><span style="color:#AE81FF;"> 0</span><span style="color:#F92672;"> or</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">&gt;=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.size():</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#AE81FF;"> None</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">._tree[i]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> left</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">i</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">) -&gt; </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F92672;"> |</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;获取左子节点的索引&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#AE81FF;"> 2</span><span style="color:#F92672;"> *</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> right</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">i</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">) -&gt; </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F92672;"> |</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;获取右子节点的索引&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#AE81FF;"> 2</span><span style="color:#F92672;"> *</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> parent</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">i</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">) -&gt; </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F92672;"> |</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;获取父节点的索引&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> (i </span><span style="color:#F92672;">-</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">) </span><span style="color:#F92672;">//</span><span style="color:#AE81FF;"> 2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> level_order</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">) -&gt; list[</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">]:</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;层序遍历&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.res </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> []</span></span>
<span class="line"><span style="color:#88846F;">        # 直接遍历数组</span></span>
<span class="line"><span style="color:#F92672;">        for</span><span style="color:#F8F8F2;"> i </span><span style="color:#F92672;">in</span><span style="color:#66D9EF;"> range</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.size()):</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.val(i) </span><span style="color:#F92672;">is</span><span style="color:#F92672;"> not</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#FD971F;">                self</span><span style="color:#F8F8F2;">.res.append(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.val(i))</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.res</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> dfs</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">i</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">order</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">str</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;深度优先遍历&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.val(i) </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">            return</span></span>
<span class="line"><span style="color:#88846F;">        # 前序遍历</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> order </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;pre&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.res.append(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.val(i))</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.dfs(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.left(i), order)</span></span>
<span class="line"><span style="color:#88846F;">        # 中序遍历</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> order </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;in&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.res.append(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.val(i))</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.dfs(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.right(i), order)</span></span>
<span class="line"><span style="color:#88846F;">        # 后序遍历</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> order </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;post&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.res.append(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.val(i))</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> pre_order</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">) -&gt; list[</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">]:</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;前序遍历&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.res </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> []</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.dfs(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">order</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&quot;pre&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.res</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> in_order</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">) -&gt; list[</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">]:</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;中序遍历&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.res </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> []</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.dfs(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">order</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&quot;in&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.res</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> post_order</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">) -&gt; list[</span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">]:</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;后序遍历&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.res </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> []</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.dfs(</span><span style="color:#AE81FF;">0</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">order</span><span style="color:#F92672;">=</span><span style="color:#E6DB74;">&quot;post&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.res</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><p>测试代码：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#E6DB74;">&quot;&quot;&quot;Driver Code&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F92672;">if</span><span style="color:#F8F8F2;"> __name__ </span><span style="color:#F92672;">==</span><span style="color:#E6DB74;"> &quot;__main__&quot;</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#88846F;">    # 初始化二叉树</span></span>
<span class="line"><span style="color:#F8F8F2;">    arr </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> [</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">2</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">3</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">4</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">None</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">6</span><span style="color:#F8F8F2;">, </span><span style="color:#AE81FF;">None</span><span style="color:#F8F8F2;">]</span></span>
<span class="line"><span style="color:#F8F8F2;">    abt </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> ArrayBinaryTree(arr)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 访问节点</span></span>
<span class="line"><span style="color:#F8F8F2;">    i </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#F8F8F2;">    l, r, p </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> abt.left(i), abt.right(i), abt.parent(i)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">    # 遍历树</span></span>
<span class="line"><span style="color:#F8F8F2;">    res </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> abt.level_order()</span></span>
<span class="line"><span style="color:#F8F8F2;">    res </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> abt.pre_order()</span></span>
<span class="line"><span style="color:#F8F8F2;">    res </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> abt.in_order()</span></span>
<span class="line"><span style="color:#F8F8F2;">    res </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> abt.post_order()</span></span>
<span class="line"><span style="color:#66D9EF;">    print</span><span style="color:#F8F8F2;">(res)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h2 id="_6-二叉搜索树-bst" tabindex="-1"><a class="header-anchor" href="#_6-二叉搜索树-bst"><span>6. 二叉搜索树（BST）</span></a></h2><ul><li><p>对于根节点，左子树中所有的值 &lt; 根节点 &lt; 右子树中所有的值</p></li><li><p>任意节点的左右子树也是二叉搜索树，同样满足条件1.</p></li><li><p>我们将二叉搜索树封装为一个类 <code>BinarySearchTree</code> ，并声明一个成员变量 root，指向树的根结点。</p></li></ul><h3 id="_6-0-补充知识点——类" tabindex="-1"><a class="header-anchor" href="#_6-0-补充知识点——类"><span>6.0 补充知识点——类</span></a></h3><h4 id="_6-0-1-类的实例化" tabindex="-1"><a class="header-anchor" href="#_6-0-1-类的实例化"><span>6.0.1 类的实例化：</span></a></h4><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">Animal</span><span style="color:#F8F8F2;">():</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">):  </span><span style="color:#88846F;"># 初始化函数，可有可没有</span></span>
<span class="line"><span style="color:#66D9EF;">        print</span><span style="color:#F8F8F2;">(</span><span style="color:#E6DB74;">&quot;Animal created&quot;</span><span style="color:#F8F8F2;">)</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">dog </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> Animal()  </span><span style="color:#88846F;"># 实例化</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_6-0-2-类的函数调用初始化函数的变量" tabindex="-1"><a class="header-anchor" href="#_6-0-2-类的函数调用初始化函数的变量"><span>6.0.2 类的函数调用初始化函数的变量：</span></a></h4>`,19)),r(c,{id:"376",data:[{id:"报错的情况"},{id:"用 self 来实现类中不同函数变量的调用"}]},{title0:o(({value:t,isActive:p})=>n[53]||(n[53]=[l("报错的情况")])),title1:o(({value:t,isActive:p})=>n[54]||(n[54]=[l("用 self 来实现类中不同函数变量的调用")])),tab0:o(({value:t,isActive:p})=>n[55]||(n[55]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"Animal"),s("span",{style:{color:"#F8F8F2"}},"():")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):  "),s("span",{style:{color:"#88846F"}},"# 初始化函数，可有可没有")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Animal created"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        a "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 100")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"(a)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"dog "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Animal()  "),s("span",{style:{color:"#88846F"}},"# 实例化")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"dog.print()")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# output")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Animal created")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Traceback (most recent call last):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  File "),s("span",{style:{color:"#E6DB74"}},'"C:\\Coder\\Lesson\\d.py"'),s("span",{style:{color:"#F8F8F2"}},", line "),s("span",{style:{color:"#AE81FF"}},"11"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F92672"}}," <"),s("span",{style:{color:"#F8F8F2"}},"module"),s("span",{style:{color:"#F92672"}},">")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    dog.print()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  File "),s("span",{style:{color:"#E6DB74"}},'"C:\\Coder\\Lesson\\d.py"'),s("span",{style:{color:"#F8F8F2"}},", line "),s("span",{style:{color:"#AE81FF"}},"7"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#66D9EF"}}," print")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"    print"),s("span",{style:{color:"#F8F8F2"}},"(a)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"NameError"),s("span",{style:{color:"#F8F8F2"}},": name "),s("span",{style:{color:"#E6DB74"}},"'a'"),s("span",{style:{color:"#F92672"}}," is"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#F8F8F2"}}," defined")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab1:o(({value:t,isActive:p})=>n[56]||(n[56]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"Animal"),s("span",{style:{color:"#F8F8F2"}},"():")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):  "),s("span",{style:{color:"#88846F"}},"# 初始化函数，可有可没有")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Animal created"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".a "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 100")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".a)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"dog "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Animal()  "),s("span",{style:{color:"#88846F"}},"# 实例化")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"dog.print()")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# output ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Animal created")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"100")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),_:1}),n[201]||(n[201]=s("h4",{id:"_6-0-2-函数互相之间调用变量",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_6-0-2-函数互相之间调用变量"},[s("span",null,"6.0.2 函数互相之间调用变量")])],-1)),r(i,{id:"390",data:[{id:"那一个函数若是想要调用非初始化函数中的变量呢？"},{id:""}]},{title0:o(({value:t,isActive:p})=>n[57]||(n[57]=[l("那一个函数若是想要调用非初始化函数中的变量呢？")])),title1:o(({value:t,isActive:p})=>n[58]||(n[58]=[])),tab0:o(({value:t,isActive:p})=>n[59]||(n[59]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"Animal"),s("span",{style:{color:"#F8F8F2"}},"():")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):  "),s("span",{style:{color:"#88846F"}},"# 初始化函数，可有可没有")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Animal created"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".a "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1000")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"text"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".bo "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "Shelley"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"(text)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," add_sum"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".bo)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"dog "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Animal()  "),s("span",{style:{color:"#88846F"}},"# 实例化")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"dog.add_sum()")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# output")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Animal created")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Traceback (most recent call last):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  File "),s("span",{style:{color:"#E6DB74"}},'"C:\\Coder\\Lesson\\d.py"'),s("span",{style:{color:"#F8F8F2"}},", line "),s("span",{style:{color:"#AE81FF"}},"15"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F92672"}}," <"),s("span",{style:{color:"#F8F8F2"}},"module"),s("span",{style:{color:"#F92672"}},">")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    dog.add_sum()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  File "),s("span",{style:{color:"#E6DB74"}},'"C:\\Coder\\Lesson\\d.py"'),s("span",{style:{color:"#F8F8F2"}},", line "),s("span",{style:{color:"#AE81FF"}},"11"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F8F8F2"}}," add_sum")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"    print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".bo)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"AttributeError"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'Animal'"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," object"),s("span",{style:{color:"#F8F8F2"}}," has no attribute "),s("span",{style:{color:"#E6DB74"}},"'bo'")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1),s("p",null,[l("报错了！因为我们没有调用 "),s("code",null,"self.bo"),l(" 被定义的函数 "),s("code",null,"print"),l("，我们调用 "),s("code",null,"print"),l(" 之后再调用 "),s("code",null,"add_sum"),l("试试。")],-1),s("p",null,null,-1)])),tab1:o(({value:t,isActive:p})=>n[60]||(n[60]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"Animal"),s("span",{style:{color:"#F8F8F2"}},"():")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):  "),s("span",{style:{color:"#88846F"}},"# 初始化函数，可有可没有")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Animal created"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".a "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1000")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"text"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".bo "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#E6DB74"}},' "Shelley"')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"(text)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," add_sum"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".bo)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"dog "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Animal()  "),s("span",{style:{color:"#88846F"}},"# 实例化")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"dog.print("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"text"),s("span",{style:{color:"#F92672"}}," ="),s("span",{style:{color:"#E6DB74"}},' "dog"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"dog.add_sum()")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# output")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Animal created")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"dog")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Shelley")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1),s("p",null,null,-1)])),_:1}),n[202]||(n[202]=s("h4",{id:"_6-0-3-类的实例化调用类中变量",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_6-0-3-类的实例化调用类中变量"},[s("span",null,"6.0.3 类的实例化调用类中变量")])],-1)),r(c,{id:"410",data:[{id:"通过 self 可以调用任意类中变量"},{id:"但是只能调用在初始函数里初始过得变量！"}]},{title0:o(({value:t,isActive:p})=>n[61]||(n[61]=[l("通过 self 可以调用任意类中变量")])),title1:o(({value:t,isActive:p})=>n[62]||(n[62]=[l("但是只能调用在初始函数里初始过得变量！")])),tab0:o(({value:t,isActive:p})=>n[63]||(n[63]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"Animal"),s("span",{style:{color:"#F8F8F2"}},"():")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):  "),s("span",{style:{color:"#88846F"}},"# 初始化函数，可有可没有")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Animal created"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".a "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1000")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".a)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"dog "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Animal()  "),s("span",{style:{color:"#88846F"}},"# 实例化")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(dog.a)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# output")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Animal created")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"1000")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab1:o(({value:t,isActive:p})=>n[64]||(n[64]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"Animal"),s("span",{style:{color:"#F8F8F2"}},"():")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):  "),s("span",{style:{color:"#88846F"}},"# 初始化函数，可有可没有")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"Animal created"'),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".a "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1000")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F"}},"self"),s("span",{style:{color:"#F8F8F2"}},".a)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".b "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," 1")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"dog "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," Animal()  "),s("span",{style:{color:"#88846F"}},"# 实例化")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(dog.a)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"print"),s("span",{style:{color:"#F8F8F2"}},"(dog.b)")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"# output")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Traceback (most recent call last):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"  File "),s("span",{style:{color:"#E6DB74"}},'"C:\\Coder\\Lesson\\d.py"'),s("span",{style:{color:"#F8F8F2"}},", line "),s("span",{style:{color:"#AE81FF"}},"13"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#F92672"}},"in"),s("span",{style:{color:"#F92672"}}," <"),s("span",{style:{color:"#F8F8F2"}},"module"),s("span",{style:{color:"#F92672"}},">")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"    print"),s("span",{style:{color:"#F8F8F2"}},"(dog.b)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"AttributeError"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#E6DB74"}},"'Animal'"),s("span",{style:{color:"#66D9EF","font-style":"italic"}}," object"),s("span",{style:{color:"#F8F8F2"}}," has no attribute "),s("span",{style:{color:"#E6DB74"}},"'b'")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"Animal created")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#AE81FF"}},"1000")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),_:1}),n[203]||(n[203]=F('<h3 id="_6-1-查找节点" tabindex="-1"><a class="header-anchor" href="#_6-1-查找节点"><span>6.1 查找节点</span></a></h3><ul><li><p>给定目标节点值 <code>num</code>，可以根据二叉搜索树的性质来查找。</p></li><li><p>我们声明一个节点 <code>cur</code>，从二叉树的根节点 root 出发。</p><ul><li>若 <code>cur.val &lt; num</code> ，说明目标节点在 cur 的右子树中，因此执行 <code>cur = cur.right</code></li><li>若 <code>cur.val &gt; num</code> ，说明目标节点在 cur 的左子树中，因此执行 <code>cur = cur.left</code></li><li>若 <code>cur.val = num</code> ，说明目标节点就是 <code>num</code></li></ul></li></ul>',2)),r(c,{id:"456",data:[{id:"递归实现"},{id:"循环实现"}]},{title0:o(({value:t,isActive:p})=>n[65]||(n[65]=[l("递归实现")])),title1:o(({value:t,isActive:p})=>n[66]||(n[66]=[l("循环实现")])),tab0:o(({value:t,isActive:p})=>n[67]||(n[67]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"TreeNode"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    """二叉树节点类"""')]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".val "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," val")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," None")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," None")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"BST"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".root "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," None")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," search"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"root"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," root "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            return"),s("span",{style:{color:"#AE81FF"}}," None")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," val "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," root.val:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            return"),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".search(root.left, val)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        elif"),s("span",{style:{color:"#F8F8F2"}}," val "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#F8F8F2"}}," root.val:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            return"),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".search(root.right, val)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        else"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            return"),s("span",{style:{color:"#F8F8F2"}}," root  "),s("span",{style:{color:"#88846F"}},"# 这里是返回了该节点的地址，而不是值")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"if"),s("span",{style:{color:"#F8F8F2"}}," __name__ "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," '__main__'"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 手动创建二叉搜索树")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," BST()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.root "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.root.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.root.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#AE81FF"}},"6"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.root.left.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.root.left.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.root.right.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.root.right.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#AE81FF"}},"7"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 测试查找节点")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    node "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," bst.search(bst.root, "),s("span",{style:{color:"#AE81FF"}},"7"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," node:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},'"找到了节点，值为: '),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"node.val"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#F8F8F2"}},") "),s("span",{style:{color:"#88846F"}},"# 打印该节点的值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    else"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"未找到节点"'),s("span",{style:{color:"#F8F8F2"}},")")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab1:o(({value:t,isActive:p})=>n[68]||(n[68]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"TreeNode"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    """二叉树节点类"""')]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".val "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," val")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," None")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," None")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"BST"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},"._root "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," None")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," search"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},","),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        cur "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},"._root")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        while"),s("span",{style:{color:"#F8F8F2"}}," cur:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F8F8F2"}}," cur.val "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#F8F8F2"}}," val:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                cur "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," cur.left")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            elif"),s("span",{style:{color:"#F8F8F2"}}," cur.val "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," val:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                cur "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," cur.right")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            else"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"                break")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#F8F8F2"}}," cur")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"if"),s("span",{style:{color:"#F8F8F2"}}," __name__ "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," '__main__'"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 手动创建二叉搜索树")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," BST()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.root "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#AE81FF"}},"4"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.root.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.root.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#AE81FF"}},"6"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.root.left.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.root.left.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.root.right.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#AE81FF"}},"5"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.root.right.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode("),s("span",{style:{color:"#AE81FF"}},"7"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 测试查找节点")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    node "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," bst.search(bst.root, "),s("span",{style:{color:"#AE81FF"}},"9"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," node:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},'"找到了节点，值为: '),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"node.val"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#F8F8F2"}},") "),s("span",{style:{color:"#88846F"}},"# 打印该节点的值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    else"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"未找到节点"'),s("span",{style:{color:"#F8F8F2"}},")")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),_:1}),n[204]||(n[204]=F('<h3 id="_6-2-插入节点" tabindex="-1"><a class="header-anchor" href="#_6-2-插入节点"><span>6.2 插入节点</span></a></h3><ol><li><p>给定一个待插入元素 <code>num</code> ，为了保持二叉搜索树“左子树 &lt; 根节点 &lt; 右子树”的性质：</p></li><li><p>查找插入位置：与查找操作相似，从根节点出发，根据当前节点值和 <code>num</code> 的大小关系循环向下搜索，直到越过叶节点（遍历至 None ）时跳出循环。</p></li><li><p>在该位置插入节点：初始化节点 <code>num</code> ，将该节点置于 None 的位置。</p></li></ol><div class="hint-container warning"><p class="hint-container-title">注意</p><p>在代码实现中，需要注意以下两点。</p><p>二叉搜索树不允许存在重复节点，否则将违反其定义。因此，若待插入节点在树中已存在，则不执行插入，直接返回。<br> 为了实现插入节点，我们需要借助节点 <code>pre</code> 保存上一轮循环的节点。这样在遍历至 None 时，我们可以获取到其父节点，从而完成节点插入操作。</p></div>',3)),r(c,{id:"492",data:[{id:"递归实现"},{id:"循环实现"}]},{title0:o(({value:t,isActive:p})=>n[69]||(n[69]=[l("递归实现")])),title1:o(({value:t,isActive:p})=>n[70]||(n[70]=[l("循环实现")])),tab0:o(({value:t,isActive:p})=>n[71]||(n[71]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"TreeNode"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    """二叉树节点类"""')]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".val "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," val")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," None")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," None")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"BST"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".root "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," None")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," search"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"root"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," root "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            return"),s("span",{style:{color:"#AE81FF"}}," None")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," val "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," root.val:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            return"),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".search(root.left, val)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        elif"),s("span",{style:{color:"#F8F8F2"}}," val "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#F8F8F2"}}," root.val:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            return"),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".search(root.right, val)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        else"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            return"),s("span",{style:{color:"#F8F8F2"}}," root  "),s("span",{style:{color:"#88846F"}},"# 这里是返回了该节点的地址，而不是值")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," insert"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"root"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"num"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," root "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            return"),s("span",{style:{color:"#F8F8F2"}}," TreeNode(num)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," num "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," root.val:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            root.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".insert(root.left, num) "),s("span",{style:{color:"#88846F"}},"# 二叉树找寻路径：根->左->右....")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        elif"),s("span",{style:{color:"#F8F8F2"}}," num "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#F8F8F2"}}," root.val:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            root.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".insert(root.right, num)   ")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#F8F8F2"}}," root  "),s("span",{style:{color:"#88846F"}},"# 返回原二叉树")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        ")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"if"),s("span",{style:{color:"#F8F8F2"}}," __name__ "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," '__main__'"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," BST()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.root "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," bst.insert(bst.root,"),s("span",{style:{color:"#AE81FF"}},"6"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.insert(bst.root, "),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.insert(bst.root, "),s("span",{style:{color:"#AE81FF"}},"9"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.insert(bst.root, "),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.insert(bst.root, "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.insert(bst.root, "),s("span",{style:{color:"#AE81FF"}},"7"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 测试查找节点")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    node "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," bst.search(bst.root, "),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," node:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},'"找到了节点，值为: '),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"node.val"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#F8F8F2"}},") "),s("span",{style:{color:"#88846F"}},"# 打印该节点的值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    else"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"未找到节点"'),s("span",{style:{color:"#F8F8F2"}},")")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab1:o(({value:t,isActive:p})=>n[72]||(n[72]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"TreeNode"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    """二叉树节点类"""')]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".val "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," val")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," None")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," None")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"BST"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},"._root "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," None")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," search"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        cur "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},"._root")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        while"),s("span",{style:{color:"#F8F8F2"}}," cur:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F8F8F2"}}," cur.val "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#F8F8F2"}}," val:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                cur "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," cur.left")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            elif"),s("span",{style:{color:"#F8F8F2"}}," cur.val "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," val:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                cur "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," cur.right")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            else"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"                break")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#F8F8F2"}}," cur")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," insert"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"num"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},"._root "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"            self"),s("span",{style:{color:"#F8F8F2"}},"._root "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode(num)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            return")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        cur, pre "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},"._root, "),s("span",{style:{color:"#AE81FF"}},"None")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        while"),s("span",{style:{color:"#F8F8F2"}}," cur "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"            # 找到重复节点，直接返回")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F8F8F2"}}," cur.val "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#F8F8F2"}}," num:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"                return")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            pre "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," cur")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"            # 查找到需要插入的位置")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F8F8F2"}}," cur.val "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," num:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                cur "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," cur.right")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            else"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                cur "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," cur.left")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        # 插入节点")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        node "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," TreeNode(num)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," pre.val "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," num:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            pre.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," node")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        else"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            pre.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," node")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"if"),s("span",{style:{color:"#F8F8F2"}}," __name__ "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," '__main__'"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," BST()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.insert("),s("span",{style:{color:"#AE81FF"}},"6"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.insert("),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.insert("),s("span",{style:{color:"#AE81FF"}},"9"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.insert("),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.insert("),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.insert("),s("span",{style:{color:"#AE81FF"}},"7"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 测试查找节点")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    node "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," bst.search("),s("span",{style:{color:"#AE81FF"}},"7"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," node:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},'"找到了节点，值为: '),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"node.val"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#F8F8F2"}},")  "),s("span",{style:{color:"#88846F"}},"# 打印该节点的值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    else"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"未找到节点"'),s("span",{style:{color:"#F8F8F2"}},")")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),_:1}),n[205]||(n[205]=s("h3",{id:"_6-3-删除节点",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_6-3-删除节点"},[s("span",null,"6.3 删除节点")])],-1)),n[206]||(n[206]=s("p",null,"先在二叉树中查找到目标节点，再将其删除。与插入节点类似，我们需要保证在删除操作完成后，二叉搜索树的“左子树 < 根节点 < 右子树”的性质仍然满足。因此，我们根据目标节点的子节点数量，分 0、1 和 2 三种情况，执行对应的删除节点操作。",-1)),n[207]||(n[207]=s("p",null,"当待删除节点的度为 0 时，表示该节点是叶节点，可以直接删除。",-1)),n[208]||(n[208]=s("img",{src:E,alt:"7748085f65164c5deb5f865c920d51f",style:{zoom:"67%"}},null,-1)),n[209]||(n[209]=s("p",null,"当待删除节点的度为 1 时，将待删除节点替换为其子节点即可。",-1)),n[210]||(n[210]=s("p",null,"当待删除节点的度为 2 时，我们无法直接删除它，而需要使用一个节点替换该节点。由于要保持二叉搜索树“左子树 < 根节点 < 右子树”的性质，因此这个节点可以是右子树的最小节点或左子树的最大节点。",-1)),r(c,{id:"516",data:[{id:"递归"},{id:"循环"}]},{title0:o(({value:t,isActive:p})=>n[73]||(n[73]=[l("递归")])),title1:o(({value:t,isActive:p})=>n[74]||(n[74]=[l("循环")])),tab0:o(({value:t,isActive:p})=>n[75]||(n[75]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"TreeNode"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    """二叉树节点类"""')]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".val "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," val")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," None")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," None")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"class"),s("span",null," "),s("span",{style:{color:"#A6E22E","text-decoration":"underline"}},"BST"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#66D9EF"}}," __init__"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".root "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#AE81FF"}}," None")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," search"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"root"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"val"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," root "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            return"),s("span",{style:{color:"#AE81FF"}}," None")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," val "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," root.val:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            return"),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".search(root.left, val)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        elif"),s("span",{style:{color:"#F8F8F2"}}," val "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#F8F8F2"}}," root.val:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            return"),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".search(root.right, val)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        else"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            return"),s("span",{style:{color:"#F8F8F2"}}," root  "),s("span",{style:{color:"#88846F"}},"# 这里是返回了该节点的地址，而不是值")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," insert"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"root"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"num"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," root "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            return"),s("span",{style:{color:"#F8F8F2"}}," TreeNode(num)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," num "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," root.val:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            root.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".insert(root.left, num)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        elif"),s("span",{style:{color:"#F8F8F2"}}," num "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#F8F8F2"}}," root.val:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            root.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".insert(root.right, num)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#F8F8F2"}}," root")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," delete"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"root"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"key"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," root "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            return"),s("span",{style:{color:"#F8F8F2"}}," root")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," root.val "),s("span",{style:{color:"#F92672"}},">"),s("span",{style:{color:"#F8F8F2"}}," key:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            root.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".delete(root.left, key)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        elif"),s("span",{style:{color:"#F8F8F2"}}," root.val "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," key:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            root.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".delete(root.right, key)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        else"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F8F8F2"}}," root.left "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F92672"}}," and"),s("span",{style:{color:"#F8F8F2"}}," root.right "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"                return"),s("span",{style:{color:"#AE81FF"}}," None")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            elif"),s("span",{style:{color:"#F8F8F2"}}," root.left "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"                return"),s("span",{style:{color:"#F8F8F2"}}," root.right")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            elif"),s("span",{style:{color:"#F8F8F2"}}," root.right "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"                return"),s("span",{style:{color:"#F8F8F2"}}," root.left")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            else"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'                """找到右子树最小节点"""')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                min_larger_root "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".find_min(root.right)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                root.val "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," min_larger_root.val")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                root.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},".delete(root.right, min_larger_root.val)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            return"),s("span",{style:{color:"#F8F8F2"}}," root")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"                # store = root.right")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"                # while store.left is not None:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"                #     store = store.left")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"                # store.left = root.left")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"                # store.right = root.right")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"                # return store")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"    def"),s("span",{style:{color:"#A6E22E"}}," find_min"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"root"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        current "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," root")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        while"),s("span",{style:{color:"#F8F8F2"}}," current "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            current "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," current.left")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return"),s("span",{style:{color:"#F8F8F2"}}," current")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"if"),s("span",{style:{color:"#F8F8F2"}}," __name__ "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#E6DB74"}}," '__main__'"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," BST()")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.root "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," bst.insert(bst.root,"),s("span",{style:{color:"#AE81FF"}},"6"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.insert(bst.root, "),s("span",{style:{color:"#AE81FF"}},"3"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.insert(bst.root, "),s("span",{style:{color:"#AE81FF"}},"9"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.insert(bst.root, "),s("span",{style:{color:"#AE81FF"}},"1"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.insert(bst.root, "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.insert(bst.root, "),s("span",{style:{color:"#AE81FF"}},"7"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    bst.delete(bst.root, "),s("span",{style:{color:"#AE81FF"}},"7"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 测试查找节点")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    node "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," bst.search(bst.root, "),s("span",{style:{color:"#AE81FF"}},"2"),s("span",{style:{color:"#F8F8F2"}},")")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," node:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"f"),s("span",{style:{color:"#E6DB74"}},'"找到了节点，值为: '),s("span",{style:{color:"#AE81FF"}},"{"),s("span",{style:{color:"#F8F8F2"}},"node.val"),s("span",{style:{color:"#AE81FF"}},"}"),s("span",{style:{color:"#E6DB74"}},'"'),s("span",{style:{color:"#F8F8F2"}},") "),s("span",{style:{color:"#88846F"}},"# 打印该节点的值")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    else"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#66D9EF"}},"        print"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#E6DB74"}},'"未找到节点"'),s("span",{style:{color:"#F8F8F2"}},")")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),tab1:o(({value:t,isActive:p})=>n[76]||(n[76]=[s("div",{class:"language-python line-numbers-mode has-collapsed-lines collapsed","data-highlighter":"shiki","data-ext":"python",style:{"--vp-collapsed-lines":"15","background-color":"#272822",color:"#F8F8F2"}},[s("pre",{class:"shiki monokai vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{color:"#66D9EF","font-style":"italic"}},"def"),s("span",{style:{color:"#A6E22E"}}," remove"),s("span",{style:{color:"#F8F8F2"}},"("),s("span",{style:{color:"#FD971F","font-style":"italic"}},"self"),s("span",{style:{color:"#F8F8F2"}},", "),s("span",{style:{color:"#FD971F","font-style":"italic"}},"num"),s("span",{style:{color:"#F8F8F2"}},": "),s("span",{style:{color:"#66D9EF","font-style":"italic"}},"int"),s("span",{style:{color:"#F8F8F2"}},"):")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#E6DB74"}},'    """删除节点"""')]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 若树为空，直接提前返回")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},"._root "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 循环查找，越过叶节点后跳出")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"    cur, pre "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},"._root, "),s("span",{style:{color:"#AE81FF"}},"None")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    while"),s("span",{style:{color:"#F8F8F2"}}," cur "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        # 找到待删除节点，跳出循环")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," cur.val "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#F8F8F2"}}," num:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            break")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        pre "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," cur")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        # 待删除节点在 cur 的右子树中")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," cur.val "),s("span",{style:{color:"#F92672"}},"<"),s("span",{style:{color:"#F8F8F2"}}," num:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            cur "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," cur.right")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        # 待删除节点在 cur 的左子树中")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        else"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            cur "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," cur.left")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 若无待删除节点，则直接返回")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," cur "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        return")]),l(`
`),s("span",{class:"line"}),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 子节点数量 = 0 or 1")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    if"),s("span",{style:{color:"#F8F8F2"}}," cur.left "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F92672"}}," or"),s("span",{style:{color:"#F8F8F2"}}," cur.right "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        # 当子节点数量 = 0 / 1 时， child = null / 该子节点")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        child "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," cur.left "),s("span",{style:{color:"#F92672"}},"or"),s("span",{style:{color:"#F8F8F2"}}," cur.right")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        # 删除节点 cur")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        if"),s("span",{style:{color:"#F8F8F2"}}," cur "),s("span",{style:{color:"#F92672"}},"!="),s("span",{style:{color:"#FD971F"}}," self"),s("span",{style:{color:"#F8F8F2"}},"._root:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            if"),s("span",{style:{color:"#F8F8F2"}}," pre.left "),s("span",{style:{color:"#F92672"}},"=="),s("span",{style:{color:"#F8F8F2"}}," cur:")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                pre.left "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," child")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"            else"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"                pre.right "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," child")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        else"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"            # 若删除节点为根节点，则重新指定根节点")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"            self"),s("span",{style:{color:"#F8F8F2"}},"._root "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," child")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"    # 子节点数量 = 2")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"    else"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        # 获取中序遍历中 cur 的下一个节点")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        tmp: TreeNode "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," cur.right")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F92672"}},"        while"),s("span",{style:{color:"#F8F8F2"}}," tmp.left "),s("span",{style:{color:"#F92672"}},"is"),s("span",{style:{color:"#F92672"}}," not"),s("span",{style:{color:"#AE81FF"}}," None"),s("span",{style:{color:"#F8F8F2"}},":")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"            tmp "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," tmp.left")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        # 递归删除节点 tmp")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#FD971F"}},"        self"),s("span",{style:{color:"#F8F8F2"}},".remove(tmp.val)")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#88846F"}},"        # 用 tmp 覆盖 cur")]),l(`
`),s("span",{class:"line"},[s("span",{style:{color:"#F8F8F2"}},"        cur.val "),s("span",{style:{color:"#F92672"}},"="),s("span",{style:{color:"#F8F8F2"}}," tmp.val")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})]),s("div",{class:"collapsed-lines"})],-1)])),_:1}),n[211]||(n[211]=s("h3",{id:"_6-4-补充内容",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_6-4-补充内容"},[s("span",null,"6.4 补充内容")])],-1)),n[212]||(n[212]=s("h4",{id:"_6-4-1-中序遍历有序",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_6-4-1-中序遍历有序"},[s("span",null,"6.4.1 中序遍历有序")])],-1)),s("p",null,[n[85]||(n[85]=l("如图 7-22 所示，二叉树的中序遍历遵循“左 ")),s("mjx-container",ts,[(e(),a("svg",ps,n[77]||(n[77]=[s("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[s("g",{"data-mml-node":"math"},[s("g",{"data-mml-node":"mo"},[s("path",{"data-c":"2192",d:"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"})])])],-1)]))),n[78]||(n[78]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mo",{stretchy:"false"},"→")])],-1))]),n[86]||(n[86]=l(" 根 ")),s("mjx-container",Fs,[(e(),a("svg",rs,n[79]||(n[79]=[s("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[s("g",{"data-mml-node":"math"},[s("g",{"data-mml-node":"mo"},[s("path",{"data-c":"2192",d:"M56 237T56 250T70 270H835Q719 357 692 493Q692 494 692 496T691 499Q691 511 708 511H711Q720 511 723 510T729 506T732 497T735 481T743 456Q765 389 816 336T935 261Q944 258 944 250Q944 244 939 241T915 231T877 212Q836 186 806 152T761 85T740 35T732 4Q730 -6 727 -8T711 -11Q691 -11 691 0Q691 7 696 25Q728 151 835 230H70Q56 237 56 250Z"})])])],-1)]))),n[80]||(n[80]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mo",{stretchy:"false"},"→")])],-1))]),n[87]||(n[87]=l(" 右”的遍历顺序，而二叉搜索树满足“左子节点 ")),s("mjx-container",cs,[(e(),a("svg",is,n[81]||(n[81]=[s("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[s("g",{"data-mml-node":"math"},[s("g",{"data-mml-node":"mo"},[s("path",{"data-c":"3C",d:"M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"})])])],-1)]))),n[82]||(n[82]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mo",null,"<")])],-1))]),n[88]||(n[88]=l(" 根节点 ")),s("mjx-container",ys,[(e(),a("svg",ds,n[83]||(n[83]=[s("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[s("g",{"data-mml-node":"math"},[s("g",{"data-mml-node":"mo"},[s("path",{"data-c":"3C",d:"M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"})])])],-1)]))),n[84]||(n[84]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mo",null,"<")])],-1))]),n[89]||(n[89]=l(" 右子节点”的大小关系。"))]),n[213]||(n[213]=s("p",null,[l("这意味着在二叉搜索树中进行中序遍历时，总是会优先遍历下一个最小节点，从而得出一个重要性质："),s("strong",null,"二叉搜索树的中序遍历序列是升序的"),l("。")],-1)),s("p",null,[n[92]||(n[92]=l("利用中序遍历升序的性质，我们在二叉搜索树中获取有序数据仅需 ")),s("mjx-container",ms,[(e(),a("svg",us,n[90]||(n[90]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1152,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1752,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g>',1)]))),n[91]||(n[91]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")])],-1))]),n[93]||(n[93]=l(" 时间，无须进行额外的排序操作，非常高效。"))]),n[214]||(n[214]=s("img",{src:D,alt:"904f7f53686d6f50eae19e9b21b10b1",style:{zoom:"33%"}},null,-1)),n[215]||(n[215]=s("h4",{id:"_6-4-2-二叉搜索树的效率",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_6-4-2-二叉搜索树的效率"},[s("span",null,"6.4.2 二叉搜索树的效率")])],-1)),n[216]||(n[216]=s("p",null,"给定一组数据，我们考虑使用数组或二叉搜索树存储。观察表 7-2 ，二叉搜索树的各项操作的时间复杂度都是对数阶，具有稳定且高效的性能。只有在高频添加、低频查找删除数据的场景下，数组比二叉搜索树的效率更高。",-1)),n[217]||(n[217]=s("div",{style:{"text-align":"center"}},[s("p",null,"表 7-2 数组与搜索树的效率对比")],-1)),s("table",null,[n[109]||(n[109]=s("thead",null,[s("tr",null,[s("th",{style:{"text-align":"left"}}),s("th",{style:{"text-align":"left"}},"无序数组"),s("th",{style:{"text-align":"left"}},"二叉搜索树")])],-1)),s("tbody",null,[s("tr",null,[n[98]||(n[98]=s("td",{style:{"text-align":"left"}},"查找元素",-1)),s("td",vs,[s("mjx-container",Ts,[(e(),a("svg",Qs,n[94]||(n[94]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1152,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1752,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g>',1)]))),n[95]||(n[95]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")])],-1))])]),s("td",bs,[s("mjx-container",hs,[(e(),a("svg",fs,n[96]||(n[96]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1152,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(1450,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(1935,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(2412,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3012,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g>',1)]))),n[97]||(n[97]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"g"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")])],-1))])])]),s("tr",null,[n[103]||(n[103]=s("td",{style:{"text-align":"left"}},"插入元素",-1)),s("td",gs,[s("mjx-container",Es,[(e(),a("svg",Ds,n[99]||(n[99]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(1152,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(1652,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g>',1)]))),n[100]||(n[100]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mn",null,"1"),s("mo",{stretchy:"false"},")")])],-1))])]),s("td",As,[s("mjx-container",xs,[(e(),a("svg",ws,n[101]||(n[101]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1152,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(1450,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(1935,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(2412,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3012,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g>',1)]))),n[102]||(n[102]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"g"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")])],-1))])])]),s("tr",null,[n[108]||(n[108]=s("td",{style:{"text-align":"left"}},"删除元素",-1)),s("td",_s,[s("mjx-container",Hs,[(e(),a("svg",Ms,n[104]||(n[104]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1152,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1752,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g>',1)]))),n[105]||(n[105]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")])],-1))])]),s("td",Ns,[s("mjx-container",Ls,[(e(),a("svg",Vs,n[106]||(n[106]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1152,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(1450,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(1935,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(2412,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3012,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g>',1)]))),n[107]||(n[107]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"g"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")])],-1))])])])])]),s("p",null,[n[112]||(n[112]=l("在理想情况下，二叉搜索树是“平衡”的，这样就可以在 ")),s("mjx-container",Bs,[(e(),a("svg",ks,n[110]||(n[110]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(298,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(783,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(1260,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g></g></g>',1)]))),n[111]||(n[111]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"l"),s("mi",null,"o"),s("mi",null,"g"),s("mi",null,"n")])],-1))]),n[113]||(n[113]=l(" 轮循环内查找任意节点。"))]),s("p",null,[n[116]||(n[116]=l("然而，如果我们在二叉搜索树中不断地插入和删除节点，可能导致二叉树退化为图 7-23 所示的链表，这时各种操作的时间复杂度也会退化为 ")),s("mjx-container",Zs,[(e(),a("svg",qs,n[114]||(n[114]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1152,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1752,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g>',1)]))),n[115]||(n[115]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"n"),s("mo",{stretchy:"false"},")")])],-1))]),n[117]||(n[117]=l(" 。"))]),n[218]||(n[218]=F('<img src="'+A+'" alt="cc07789286479fa756a58bf6380a830" style="zoom:33%;"><h3 id="_6-5-二叉树的常见应用" tabindex="-1"><a class="header-anchor" href="#_6-5-二叉树的常见应用"><span>6.5 二叉树的常见应用</span></a></h3><ul><li>用作系统中的多级索引，实现高效的查找，插入，删除等操作</li><li>作为某些搜索算法的底层数据结构</li><li>用于存储数据流，以保持其有序状态</li></ul><h2 id="_7-二叉树的时间复杂度" tabindex="-1"><a class="header-anchor" href="#_7-二叉树的时间复杂度"><span>7. 二叉树的时间复杂度</span></a></h2><ol><li><strong>什么是二叉树？</strong></li></ol><p>二叉树是一个树形结构，其中每个节点最多有两个子节点：一个左子节点和一个右子节点。一个常见的例子是<strong>二叉搜索树</strong>，它的性质是：对于每个节点，左子树的所有节点值都小于这个节点的值，右子树的所有节点值都大于这个节点的值。</p><ol start="2"><li><strong>树的高度是什么？</strong></li></ol><p>树的<strong>高度</strong>指的是从根节点到最深的叶子节点的路径长度。比如：</p><ul><li>如果一个二叉树只有一个节点，树的高度是 0。</li><li>如果一个二叉树有两个节点，根节点和一个叶子节点，那么树的高度是 1。</li></ul>',9)),s("p",null,[n[120]||(n[120]=l("在一个理想的平衡二叉树中，如果有 ")),n[121]||(n[121]=s("code",null,"n",-1)),n[122]||(n[122]=l(" 个节点，那么树的高度大约是 ")),s("mjx-container",js,[(e(),a("svg",Cs,n[118]||(n[118]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1152,0)"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(2430,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(2596.7,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3196.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g>',1)]))),n[119]||(n[119]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"log"),s("mo",{"data-mjx-texclass":"NONE"},"⁡"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")])],-1))]),n[123]||(n[123]=l("，这是因为每一层的节点数是前一层的两倍。"))]),s("ol",Ss,[s("li",null,[s("strong",null,[n[126]||(n[126]=l("为什么是 ")),s("mjx-container",Gs,[(e(),a("svg",Js,n[124]||(n[124]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1152,0)"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(2430,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(2596.7,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3196.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g>',1)]))),n[125]||(n[125]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"log"),s("mo",{"data-mjx-texclass":"NONE"},"⁡"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")])],-1))]),n[127]||(n[127]=l("？"))])])]),s("p",null,[n[130]||(n[130]=l("假设你有一棵平衡的二叉树，并且它的高度为 ")),n[131]||(n[131]=s("code",null,"h",-1)),n[132]||(n[132]=l("，那么这棵树最多可以容纳的节点数是 ")),s("mjx-container",Os,[(e(),a("svg",zs,n[128]||(n[128]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g></g><g data-mml-node="mo" transform="translate(1212.5,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2212.7,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g>',1)]))),n[129]||(n[129]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("msup",null,[s("mn",null,"2"),s("mi",null,"h")]),s("mo",null,"−"),s("mn",null,"1")])],-1))]),n[133]||(n[133]=l(" 个。也就是说："))]),s("ul",null,[s("li",null,[n[136]||(n[136]=l("高度为 1 时，最多有 1 个节点（")),s("mjx-container",Is,[(e(),a("svg",Xs,n[134]||(n[134]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(1158.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2159,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2936.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3992.6,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g></g>',1)]))),n[135]||(n[135]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("msup",null,[s("mn",null,"2"),s("mn",null,"1")]),s("mo",null,"−"),s("mn",null,"1"),s("mo",null,"="),s("mn",null,"1")])],-1))]),n[137]||(n[137]=l("）"))]),s("li",null,[n[140]||(n[140]=l("高度为 2 时，最多有 3 个节点（")),s("mjx-container",Rs,[(e(),a("svg",Ws,n[138]||(n[138]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(1158.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2159,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2936.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3992.6,0)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g></g>',1)]))),n[139]||(n[139]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("msup",null,[s("mn",null,"2"),s("mn",null,"2")]),s("mo",null,"−"),s("mn",null,"1"),s("mo",null,"="),s("mn",null,"3")])],-1))]),n[141]||(n[141]=l("）"))]),s("li",null,[n[144]||(n[144]=l("高度为 3 时，最多有 7 个节点（")),s("mjx-container",Ps,[(e(),a("svg",Us,n[142]||(n[142]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mo" transform="translate(1158.8,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mn" transform="translate(2159,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(2936.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(3992.6,0)"><path data-c="37" d="M55 458Q56 460 72 567L88 674Q88 676 108 676H128V672Q128 662 143 655T195 646T364 644H485V605L417 512Q408 500 387 472T360 435T339 403T319 367T305 330T292 284T284 230T278 162T275 80Q275 66 275 52T274 28V19Q270 2 255 -10T221 -22Q210 -22 200 -19T179 0T168 40Q168 198 265 368Q285 400 349 489L395 552H302Q128 552 119 546Q113 543 108 522T98 479L95 458V455H55V458Z"></path></g></g></g>',1)]))),n[143]||(n[143]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("msup",null,[s("mn",null,"2"),s("mn",null,"3")]),s("mo",null,"−"),s("mn",null,"1"),s("mo",null,"="),s("mn",null,"7")])],-1))]),n[145]||(n[145]=l("）"))])]),n[219]||(n[219]=s("p",null,"可以看到，随着树的高度增加，节点的数量呈指数级增长。",-1)),n[220]||(n[220]=s("p",null,"要插入、查找或删除一个节点时，你需要从树的根开始，逐层往下找到合适的位置。每向下一层，树的节点数就会减半。换句话说，你在查找的过程中，每一步都缩小了一半的范围。因此，这种操作的时间复杂度是与树的高度成正比的。",-1)),s("p",null,[n[150]||(n[150]=l("对于一个有 ")),n[151]||(n[151]=s("code",null,"n",-1)),n[152]||(n[152]=l(" 个节点的平衡二叉树，树的高度大约是 ")),s("mjx-container",Ys,[(e(),a("svg",Ks,n[146]||(n[146]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1152,0)"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(2430,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(2596.7,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3196.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g>',1)]))),n[147]||(n[147]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"log"),s("mo",{"data-mjx-texclass":"NONE"},"⁡"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")])],-1))]),n[153]||(n[153]=l("，所以插入、查找或删除操作的时间复杂度也是 ")),s("mjx-container",$s,[(e(),a("svg",sl,n[148]||(n[148]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1152,0)"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(2430,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(2596.7,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3196.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g>',1)]))),n[149]||(n[149]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"log"),s("mo",{"data-mjx-texclass":"NONE"},"⁡"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")])],-1))]),n[154]||(n[154]=l("。"))]),n[221]||(n[221]=s("ol",{start:"4"},[s("li",null,[s("strong",null,"总结")])],-1)),s("ul",null,[n[167]||(n[167]=s("li",null,[l("二叉树操作的时间复杂度通常和树的"),s("strong",null,"高度"),l("有关。")],-1)),s("li",null,[n[157]||(n[157]=l("对于一个有 ")),n[158]||(n[158]=s("code",null,"n",-1)),n[159]||(n[159]=l(" 个节点的")),n[160]||(n[160]=s("strong",null,"平衡二叉树",-1)),n[161]||(n[161]=l("，树的高度大约是 ")),s("mjx-container",ll,[(e(),a("svg",nl,n[155]||(n[155]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1152,0)"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(2430,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(2596.7,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3196.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g>',1)]))),n[156]||(n[156]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"log"),s("mo",{"data-mjx-texclass":"NONE"},"⁡"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")])],-1))]),n[162]||(n[162]=l("。"))]),s("li",null,[n[165]||(n[165]=l("查找、插入、删除操作的复杂度都与树的高度相关，所以在平衡二叉树中的这些操作通常为 ")),s("mjx-container",al,[(e(),a("svg",el,n[163]||(n[163]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1152,0)"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(2430,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(2596.7,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3196.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g>',1)]))),n[164]||(n[164]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"log"),s("mo",{"data-mjx-texclass":"NONE"},"⁡"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")])],-1))]),n[166]||(n[166]=l("。"))])]),s("p",null,[n[170]||(n[170]=l("在二叉树的时间复杂度为 ")),s("mjx-container",ol,[(e(),a("svg",tl,n[168]||(n[168]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1152,0)"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(2430,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(2596.7,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3196.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g>',1)]))),n[169]||(n[169]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"log"),s("mo",{"data-mjx-texclass":"NONE"},"⁡"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")])],-1))]),n[171]||(n[171]=l(" 中，底数是 ")),n[172]||(n[172]=s("strong",null,"2",-1)),n[173]||(n[173]=l("。"))]),s("div",pl,[n[188]||(n[188]=s("p",{class:"hint-container-title"},[s("strong",null,"为什么底数是 2？")],-1)),n[189]||(n[189]=s("p",null,[l("这是因为在每一层，平衡二叉树的节点数会 "),s("strong",null,"翻倍"),l("。具体来说：")],-1)),n[190]||(n[190]=s("ul",null,[s("li",null,"在树的第 0 层（根节点），有 1 个节点。"),s("li",null,"在树的第 1 层，有 2 个节点。"),s("li",null,"在树的第 2 层，有 4 个节点。"),s("li",null,"在树的第 3 层，有 8 个节点。")],-1)),s("p",null,[n[180]||(n[180]=l("因此，树的每一层的节点数以 ")),s("mjx-container",Fl,[(e(),a("svg",rl,n[174]||(n[174]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mi" transform="translate(533,363) scale(0.707)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g></g></g></g>',1)]))),n[175]||(n[175]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("msup",null,[s("mn",null,"2"),s("mi",null,"h")])])],-1))]),n[181]||(n[181]=l(" 的形式增长，")),s("mjx-container",cl,[(e(),a("svg",il,n[176]||(n[176]=[s("g",{stroke:"currentColor",fill:"currentColor","stroke-width":"0",transform:"scale(1,-1)"},[s("g",{"data-mml-node":"math"},[s("g",{"data-mml-node":"mi"},[s("path",{"data-c":"210E",d:"M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"})])])],-1)]))),n[177]||(n[177]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"h")])],-1))]),n[182]||(n[182]=l(" 是层数（高度）。这个增长模式导致树的高度与节点总数之间的关系是以 2 为底的对数关系。所以，复杂度表示为 ")),s("mjx-container",yl,[(e(),a("svg",dl,n[178]||(n[178]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1152,0)"><g data-mml-node="mi"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="mn" transform="translate(1311,-241.4) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(2866.6,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(3033.2,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3633.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g>',1)]))),n[179]||(n[179]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",null,"log"),s("mn",null,"2")]),s("mo",{"data-mjx-texclass":"NONE"},"⁡"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")])],-1))]),n[183]||(n[183]=l("，其中底数是 2。"))]),s("p",null,[n[186]||(n[186]=l("不过，计算机科学中的对数复杂度通常忽略底数，因为不同底数的对数之间的差别只是一个常数倍，并不会影响大规模情况下的渐进复杂度。因此，常常简写为 ")),s("mjx-container",ml,[(e(),a("svg",ul,n[184]||(n[184]=[F('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D442" d="M740 435Q740 320 676 213T511 42T304 -22Q207 -22 138 35T51 201Q50 209 50 244Q50 346 98 438T227 601Q351 704 476 704Q514 704 524 703Q621 689 680 617T740 435ZM637 476Q637 565 591 615T476 665Q396 665 322 605Q242 542 200 428T157 216Q157 126 200 73T314 19Q404 19 485 98T608 313Q637 408 637 476Z"></path></g><g data-mml-node="mo" transform="translate(763,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1152,0)"><path data-c="6C" d="M42 46H56Q95 46 103 60V68Q103 77 103 91T103 124T104 167T104 217T104 272T104 329Q104 366 104 407T104 482T104 542T103 586T103 603Q100 622 89 628T44 637H26V660Q26 683 28 683L38 684Q48 685 67 686T104 688Q121 689 141 690T171 693T182 694H185V379Q185 62 186 60Q190 52 198 49Q219 46 247 46H263V0H255L232 1Q209 2 183 2T145 3T107 3T57 1L34 0H26V46H42Z"></path><path data-c="6F" d="M28 214Q28 309 93 378T250 448Q340 448 405 380T471 215Q471 120 407 55T250 -10Q153 -10 91 57T28 214ZM250 30Q372 30 372 193V225V250Q372 272 371 288T364 326T348 362T317 390T268 410Q263 411 252 411Q222 411 195 399Q152 377 139 338T126 246V226Q126 130 145 91Q177 30 250 30Z" transform="translate(278,0)"></path><path data-c="67" d="M329 409Q373 453 429 453Q459 453 472 434T485 396Q485 382 476 371T449 360Q416 360 412 390Q410 404 415 411Q415 412 416 414V415Q388 412 363 393Q355 388 355 386Q355 385 359 381T368 369T379 351T388 325T392 292Q392 230 343 187T222 143Q172 143 123 171Q112 153 112 133Q112 98 138 81Q147 75 155 75T227 73Q311 72 335 67Q396 58 431 26Q470 -13 470 -72Q470 -139 392 -175Q332 -206 250 -206Q167 -206 107 -175Q29 -140 29 -75Q29 -39 50 -15T92 18L103 24Q67 55 67 108Q67 155 96 193Q52 237 52 292Q52 355 102 398T223 442Q274 442 318 416L329 409ZM299 343Q294 371 273 387T221 404Q192 404 171 388T145 343Q142 326 142 292Q142 248 149 227T179 192Q196 182 222 182Q244 182 260 189T283 207T294 227T299 242Q302 258 302 292T299 343ZM403 -75Q403 -50 389 -34T348 -11T299 -2T245 0H218Q151 0 138 -6Q118 -15 107 -34T95 -74Q95 -84 101 -97T122 -127T170 -155T250 -167Q319 -167 361 -139T403 -75Z" transform="translate(778,0)"></path></g><g data-mml-node="mo" transform="translate(2430,0)"><path data-c="2061" d=""></path></g><g data-mml-node="mi" transform="translate(2596.7,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(3196.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g>',1)]))),n[185]||(n[185]=s("mjx-assistive-mml",{unselectable:"on",display:"inline"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("mi",null,"O"),s("mo",{stretchy:"false"},"("),s("mi",null,"log"),s("mo",{"data-mjx-texclass":"NONE"},"⁡"),s("mi",null,"n"),s("mo",{stretchy:"false"},")")])],-1))]),n[187]||(n[187]=l("，不具体说明底数。但从数学上讲，这里的底数是 2。"))])]),n[222]||(n[222]=F(`<h2 id="_8-avl-树" tabindex="-1"><a class="header-anchor" href="#_8-avl-树"><span>8. AVL 树</span></a></h2><p>“节点高度”是指从该节点到它的最远叶节点的距离，即所经过的“边”的数量。需要特别注意的是，叶节点的高度为 0<br> ，而空节点的高度为 -1 。我们将创建两个工具函数，分别用于获取和更新节点的高度：</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>AVL 树的平衡因子的绝对值不可以大于1</p></div><h3 id="_8-1-初始化一个-avl-树" tabindex="-1"><a class="header-anchor" href="#_8-1-初始化一个-avl-树"><span>8.1 初始化一个 AVL 树</span></a></h3><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TreeNode</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.val </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> val</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.height </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#88846F;">  # 由于 AVL 树的相关操作需要获取节点高度，因此我们需要为节点类添加 height 变量</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.left </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> None</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.right </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> None</span></span>
<span class="line"><span style="color:#88846F;">        # 节点的高度：是指从该节点到它最远叶节点的距离，即桥经过的“边”的数量。</span></span>
<span class="line"><span style="color:#88846F;">        # 需要特别注意的是：叶节点的高度为 0，而空节点的高度为 -1，我们将创建两个工具函数，分别用于获取和更新节点的高度</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        def</span><span style="color:#A6E22E;"> get_height</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">node</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> node </span><span style="color:#F92672;">is</span><span style="color:#F92672;"> not</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">                return</span><span style="color:#F8F8F2;"> node.height</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#F92672;"> -</span><span style="color:#AE81FF;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        def</span><span style="color:#A6E22E;"> update_height</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">node</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">            node.height </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> max</span><span style="color:#F8F8F2;">([</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.height(node.left), </span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.height(node.right)]) </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#88846F;">            # target = []</span></span>
<span class="line"><span style="color:#88846F;">            # target.append(self.height(node.left))</span></span>
<span class="line"><span style="color:#88846F;">            # target.append(self.height(node.right))</span></span>
<span class="line"><span style="color:#88846F;">            # node.height = max(target) + 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        # 节点平衡因子</span></span>
<span class="line"><span style="color:#88846F;">        # 节点的平衡因子（balance factor）定义为节点左子树的高度减去节点右子树的高度，同时规定空节点平衡因子为 0</span></span>
<span class="line"><span style="color:#88846F;">        # 我们同样将获取节点的平衡因子的功能封装成函数，方便后续使用</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        def</span><span style="color:#A6E22E;"> balance_factor</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">node</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#88846F;">            # 空节点平衡因子为 0</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> node </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">                return</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#88846F;">            # 节点的平衡因子 = 左子树高度 - 右子树高度</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.get_height(node.left) </span><span style="color:#F92672;">-</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.get_height(node.right)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_8-2-avl-树的旋转" tabindex="-1"><a class="header-anchor" href="#_8-2-avl-树的旋转"><span>8.2 AVL 树的旋转</span></a></h3><ul><li><p>AVL 树的特点在于“旋转”的操作，它能够在不影响二叉树的中序遍历序列的前提下，使失衡的节点重新恢复平衡。换一句话说：旋转操作既能保持“二叉搜索树”的性质，也能使树重新变为“平衡二叉树”。</p></li><li><p>我们现将平衡因子的绝对值 &gt; 1 的节点称为 “失衡节点” ，根据节点失衡情况不同，旋转操作分为四种：右旋，左旋，先右旋再左旋，先左旋再右旋。</p></li><li><img src="`+x+'" alt="3579bb330340b1215203a315c12b14a" style="zoom:67%;"></li></ul><h4 id="_8-2-1-右旋" tabindex="-1"><a class="header-anchor" href="#_8-2-1-右旋"><span>8.2.1 右旋</span></a></h4><p>节点下方为平衡因子。从底至顶看，二叉树中首个失衡节点是“节点 3”。我们关注以该失衡节点为根节点的子树，将该节点记为 node ，其左子节点记为 child ，执行“右旋”操作。完成右旋后，子树恢复平衡，并且仍然保持二叉搜索树的性质。</p><img src="'+w+'" alt="IMG_2455(20241018-112420)" style="zoom:33%;"><img src="'+_+`" alt="IMG_2456(20241018-112433)" style="zoom:33%;"><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TreeNode</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.val </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> val</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.height </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#88846F;">  # 由于 AVL 树的相关操作需要获取节点高度，因此我们需要为节点类添加 height 变量</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.left </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> None</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.right </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> None</span></span>
<span class="line"><span style="color:#88846F;">        # 节点的高度：是指从该节点到它最远叶节点的距离，即桥经过的“边”的数量。</span></span>
<span class="line"><span style="color:#88846F;">        # 需要特别注意的是：叶节点的高度为 0，而空节点的高度为 -1，我们将创建两个工具函数，分别用于获取和更新节点的高度</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        def</span><span style="color:#A6E22E;"> get_height</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">node</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> node </span><span style="color:#F92672;">is</span><span style="color:#F92672;"> not</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">                return</span><span style="color:#F8F8F2;"> node.height</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#F92672;"> -</span><span style="color:#AE81FF;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        def</span><span style="color:#A6E22E;"> update_height</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">node</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">            node.height </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> max</span><span style="color:#F8F8F2;">([</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.height(node.left), </span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.height(node.right)]) </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#88846F;">            # target = []</span></span>
<span class="line"><span style="color:#88846F;">            # target.append(self.height(node.left))</span></span>
<span class="line"><span style="color:#88846F;">            # target.append(self.height(node.right))</span></span>
<span class="line"><span style="color:#88846F;">            # node.height = max(target) + 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        # 节点平衡因子</span></span>
<span class="line"><span style="color:#88846F;">        # 节点的平衡因子（balance factor）定义为节点左子树的高度减去节点右子树的高度，同时规定空节点平衡因子为 0</span></span>
<span class="line"><span style="color:#88846F;">        # 我们同样将获取节点的平衡因子的功能封装成函数，方便后续使用</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        def</span><span style="color:#A6E22E;"> balance_factor</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">node</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#88846F;">            # 空节点平衡因子为 0</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> node </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">                return</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#88846F;">            # 节点的平衡因子 = 左子树高度 - 右子树高度</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.get_height(node.left) </span><span style="color:#F92672;">-</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.get_height(node.right)</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        def</span><span style="color:#A6E22E;"> right_rotate</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">node</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">            child </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> node.left</span></span>
<span class="line"><span style="color:#F8F8F2;">            grand_child </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> child.right </span><span style="color:#88846F;"># 若没有就记成 None。</span></span>
<span class="line"><span style="color:#F8F8F2;">            </span></span>
<span class="line"><span style="color:#F8F8F2;">            child.right </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> node</span></span>
<span class="line"><span style="color:#F8F8F2;">            node.left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> grand_child</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.update_height(node)</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.update_height(child)</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#F8F8F2;"> child</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_8-2-2-左旋" tabindex="-1"><a class="header-anchor" href="#_8-2-2-左旋"><span>8.2.2 左旋</span></a></h4><img src="`+H+'" alt="IMG_2464(20241020-151125)" style="zoom:33%;"><p>4 是 node</p><img src="'+M+`" alt="IMG_2465(20241020-151339)" style="zoom:33%;"><p>1 是 node</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TreeNode</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.val </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> val</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.height </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#88846F;">  # 由于 AVL 树的相关操作需要获取节点高度，因此我们需要为节点类添加 height 变量</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.left </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> None</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.right </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> None</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        # 节点的高度：是指从该节点到它最远叶节点的距离，即桥经过的“边”的数量。</span></span>
<span class="line"><span style="color:#88846F;">        # 需要特别注意的是：叶节点的高度为 0，而空节点的高度为 -1，我们将创建两个工具函数，分别用于获取和更新节点的高度</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        def</span><span style="color:#A6E22E;"> get_height</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">node</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> node </span><span style="color:#F92672;">is</span><span style="color:#F92672;"> not</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">                return</span><span style="color:#F8F8F2;"> node.height</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#F92672;"> -</span><span style="color:#AE81FF;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        def</span><span style="color:#A6E22E;"> update_height</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">node</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">            node.height </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> max</span><span style="color:#F8F8F2;">([</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.height(node.left), </span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.height(node.right)]) </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#88846F;">            # target = []</span></span>
<span class="line"><span style="color:#88846F;">            # target.append(self.height(node.left))</span></span>
<span class="line"><span style="color:#88846F;">            # target.append(self.height(node.right))</span></span>
<span class="line"><span style="color:#88846F;">            # node.height = max(target) + 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#88846F;">        # 节点平衡因子</span></span>
<span class="line"><span style="color:#88846F;">        # 节点的平衡因子（balance factor）定义为节点左子树的高度减去节点右子树的高度，同时规定空节点平衡因子为 0</span></span>
<span class="line"><span style="color:#88846F;">        # 我们同样将获取节点的平衡因子的功能封装成函数，方便后续使用</span></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        def</span><span style="color:#A6E22E;"> balance_factor</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">node</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#88846F;">            # 空节点平衡因子为 0</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> node </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">                return</span><span style="color:#AE81FF;"> 0</span></span>
<span class="line"><span style="color:#88846F;">            # 节点的平衡因子 = 左子树高度 - 右子树高度</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.get_height(node.left) </span><span style="color:#F92672;">-</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.get_height(node.right)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        def</span><span style="color:#A6E22E;"> right_rotate</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">node</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">            child </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> node.left</span></span>
<span class="line"><span style="color:#F8F8F2;">            grand_child </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> child.right  </span><span style="color:#88846F;"># 若没有就记成 None。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">            child.right </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> node</span></span>
<span class="line"><span style="color:#F8F8F2;">            node.left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> grand_child</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.update_height(node)</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.update_height(child)</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#F8F8F2;"> child</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">        def</span><span style="color:#A6E22E;"> left_rotate</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">node</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#F8F8F2;">            child </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> node.right</span></span>
<span class="line"><span style="color:#F8F8F2;">            grand_child </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> child.left</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F8F8F2;">            child.left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> node</span></span>
<span class="line"><span style="color:#F8F8F2;">            node.right </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> grand_child</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.update_height(node)</span></span>
<span class="line"><span style="color:#FD971F;">            self</span><span style="color:#F8F8F2;">.update_height(child)</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#F8F8F2;"> child</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h4 id="_8-2-3-先左旋后右旋" tabindex="-1"><a class="header-anchor" href="#_8-2-3-先左旋后右旋"><span>8.2.3 先左旋后右旋</span></a></h4><img src="`+N+'" alt="IMG_2466(20241020-152750)" style="zoom:33%;"><h4 id="_8-2-4-先右旋再左旋" tabindex="-1"><a class="header-anchor" href="#_8-2-4-先右旋再左旋"><span>8.2.4 先右旋再左旋</span></a></h4><img src="'+L+`" alt="bbd9d2ed5fd62e474612bb643219930" style="zoom:33%;"><h4 id="_8-2-5-完整代码" tabindex="-1"><a class="header-anchor" href="#_8-2-5-完整代码"><span>8.2.5 完整代码</span></a></h4><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">class</span><span> </span><span style="color:#A6E22E;text-decoration:underline;">TreeNode</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#E6DB74;">    &quot;&quot;&quot;AVL 树节点类&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#88846F;">    # 该类用于表示 AVL 树的节点，包含节点的值、左右子节点的引用以及节点的高度</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#66D9EF;"> __init__</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#88846F;">        # 初始化节点时，设置节点值，并将左右子节点初始化为 None，节点高度初始为 0</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.val </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> val  </span><span style="color:#88846F;"># 节点值</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.height </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> 0</span><span style="color:#88846F;">  # 节点高度，初始为 0</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.left </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> None</span><span style="color:#88846F;">  # 左子节点引用，初始为 None</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.right </span><span style="color:#F92672;">=</span><span style="color:#AE81FF;"> None</span><span style="color:#88846F;">  # 右子节点引用，初始为 None</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> get_height</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">node</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;获取节点高度&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#88846F;">        # 如果节点存在，则返回节点的高度；否则返回 -1，表示空节点的高度</span></span>
<span class="line"><span style="color:#88846F;">        # 空节点高度为 -1 ，叶节点高度为 0</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> node </span><span style="color:#F92672;">is</span><span style="color:#F92672;"> not</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#F8F8F2;"> node.height  </span><span style="color:#88846F;"># 返回节点的高度</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F92672;"> -</span><span style="color:#AE81FF;">1</span><span style="color:#88846F;">  # 空节点返回 -1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> update_height</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">node</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;更新节点高度&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#88846F;">        # 节点的高度是左右子树中较高者的高度加 1</span></span>
<span class="line"><span style="color:#88846F;">        # 先获取左右子树的高度，更新当前节点的高度</span></span>
<span class="line"><span style="color:#F8F8F2;">        node.height </span><span style="color:#F92672;">=</span><span style="color:#66D9EF;"> max</span><span style="color:#F8F8F2;">([</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.get_height(node.left), </span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">.get_height(node.right)]) </span><span style="color:#F92672;">+</span><span style="color:#AE81FF;"> 1</span></span>
<span class="line"><span style="color:#88846F;">        # max([左子树高度, 右子树高度]) + 1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> balance_factor</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">node</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;获取平衡因子&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#88846F;">        # 平衡因子是左右子树高度的差，用来判断子树的平衡情况</span></span>
<span class="line"><span style="color:#88846F;">        # 空节点平衡因子为 0</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> node </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">            return</span><span style="color:#AE81FF;"> 0</span><span style="color:#88846F;">  # 空节点返回 0</span></span>
<span class="line"><span style="color:#88846F;">        # 节点的平衡因子等于左子树的高度减去右子树的高度</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.get_height(node.left) </span><span style="color:#F92672;">-</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.get_height(node.right)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> right_rotate</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">node</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;右旋操作&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#88846F;">        # 对于左偏的树执行右旋操作，使其重新平衡</span></span>
<span class="line"><span style="color:#F8F8F2;">        child </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> node.left  </span><span style="color:#88846F;"># 获取左子节点</span></span>
<span class="line"><span style="color:#F8F8F2;">        grand_child </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> child.right  </span><span style="color:#88846F;"># 获取左子节点的右子节点（孙节点）</span></span>
<span class="line"><span style="color:#88846F;">        # 以 child 为新根节点，将 node 作为 child 的右子节点</span></span>
<span class="line"><span style="color:#F8F8F2;">        child.right </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> node  </span><span style="color:#88846F;"># 原根节点变为右子节点</span></span>
<span class="line"><span style="color:#F8F8F2;">        node.left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> grand_child  </span><span style="color:#88846F;"># 原左子节点的右子节点（孙节点）作为 node 的左子节点</span></span>
<span class="line"><span style="color:#88846F;">        # 更新旋转后节点的高度</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.update_height(node)  </span><span style="color:#88846F;"># 更新原根节点的高度</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.update_height(child)  </span><span style="color:#88846F;"># 更新新根节点的高度</span></span>
<span class="line"><span style="color:#88846F;">        # 返回旋转后的新根节点</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> child  </span><span style="color:#88846F;"># 右旋后返回新的子树根节点</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> left_rotate</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">node</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;左旋操作&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#88846F;">        # 对于右偏的树执行左旋操作，使其重新平衡</span></span>
<span class="line"><span style="color:#F8F8F2;">        child </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> node.right  </span><span style="color:#88846F;"># 获取右子节点</span></span>
<span class="line"><span style="color:#F8F8F2;">        grand_child </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> child.left  </span><span style="color:#88846F;"># 获取右子节点的左子节点（孙节点）</span></span>
<span class="line"><span style="color:#88846F;">        # 以 child 为新根节点，将 node 作为 child 的左子节点</span></span>
<span class="line"><span style="color:#F8F8F2;">        child.left </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> node  </span><span style="color:#88846F;"># 原根节点变为左子节点</span></span>
<span class="line"><span style="color:#F8F8F2;">        node.right </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> grand_child  </span><span style="color:#88846F;"># 原右子节点的左子节点（孙节点）作为 node 的右子节点</span></span>
<span class="line"><span style="color:#88846F;">        # 更新旋转后节点的高度</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.update_height(node)  </span><span style="color:#88846F;"># 更新原根节点的高度</span></span>
<span class="line"><span style="color:#FD971F;">        self</span><span style="color:#F8F8F2;">.update_height(child)  </span><span style="color:#88846F;"># 更新新根节点的高度</span></span>
<span class="line"><span style="color:#88846F;">        # 返回旋转后的新根节点</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> child  </span><span style="color:#88846F;"># 左旋后返回新的子树根节点</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">    def</span><span style="color:#A6E22E;"> rotate</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">node</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#E6DB74;">        &quot;&quot;&quot;执行旋转操作，使该子树重新恢复平衡&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#88846F;">        # 通过平衡因子判断当前子树是否失衡，若失衡则进行相应的旋转操作</span></span>
<span class="line"><span style="color:#F8F8F2;">        balance_factor </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.balance_factor(node)  </span><span style="color:#88846F;"># 获取节点的平衡因子</span></span>
<span class="line"><span style="color:#88846F;">        # 左偏树，平衡因子大于 1 表示左子树过高</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> balance_factor </span><span style="color:#F92672;">&gt;</span><span style="color:#AE81FF;"> 1</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.balance_factor(node.left) </span><span style="color:#F92672;">&gt;=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#88846F;">                # 左子树也是左偏：右旋恢复平衡</span></span>
<span class="line"><span style="color:#F92672;">                return</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.right_rotate(node)</span></span>
<span class="line"><span style="color:#F92672;">            else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#88846F;">                # 左子树右偏：先对左子节点进行左旋，再右旋</span></span>
<span class="line"><span style="color:#F8F8F2;">                node.left </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.left_rotate(node.left)</span></span>
<span class="line"><span style="color:#F92672;">                return</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.right_rotate(node)</span></span>
<span class="line"><span style="color:#88846F;">        # 右偏树，平衡因子小于 -1 表示右子树过高</span></span>
<span class="line"><span style="color:#F92672;">        elif</span><span style="color:#F8F8F2;"> balance_factor </span><span style="color:#F92672;">&lt;</span><span style="color:#F92672;"> -</span><span style="color:#AE81FF;">1</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.balance_factor(node.right) </span><span style="color:#F92672;">&lt;=</span><span style="color:#AE81FF;"> 0</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#88846F;">                # 右子树也是右偏：左旋恢复平衡</span></span>
<span class="line"><span style="color:#F92672;">                return</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.left_rotate(node)</span></span>
<span class="line"><span style="color:#F92672;">            else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#88846F;">                # 右子树左偏：先对右子节点进行右旋，再左旋</span></span>
<span class="line"><span style="color:#F8F8F2;">                node.right </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.right_rotate(node.right)</span></span>
<span class="line"><span style="color:#F92672;">                return</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.left_rotate(node)</span></span>
<span class="line"><span style="color:#88846F;">        # 如果当前子树平衡，无需旋转，直接返回当前节点</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> node  </span><span style="color:#88846F;"># 平衡的子树直接返回</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_8-2-avl-树的插入" tabindex="-1"><a class="header-anchor" href="#_8-2-avl-树的插入"><span>8.2 AVL 树的插入</span></a></h3><p>AVL 树的节点插入操作与二叉搜索树在主体上类似。唯一的区别在于，在 AVL 树中插入节点后，从该节点到根节点的路径上可能会出现一系列失衡节点。因此，我们需要从这个节点开始，自底向上执行旋转操作，使所有失衡节点恢复平衡。代码如下所示：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> insert</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#E6DB74;">    &quot;&quot;&quot;插入节点&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#FD971F;">    self</span><span style="color:#F8F8F2;">._root </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.insert_helper(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">._root, val)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> insert_helper</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">node</span><span style="color:#F8F8F2;">: TreeNode </span><span style="color:#F92672;">|</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">) -&gt; TreeNode:</span></span>
<span class="line"><span style="color:#E6DB74;">    &quot;&quot;&quot;递归插入节点（辅助方法）&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> node </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> TreeNode(val)</span></span>
<span class="line"><span style="color:#88846F;">    # 1. 查找插入位置并插入节点</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> val </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> node.val:</span></span>
<span class="line"><span style="color:#F8F8F2;">        node.left </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.insert_helper(node.left, val)</span></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> val </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> node.val:</span></span>
<span class="line"><span style="color:#F8F8F2;">        node.right </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.insert_helper(node.right, val)</span></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#88846F;">        # 重复节点不插入，直接返回</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#F8F8F2;"> node</span></span>
<span class="line"><span style="color:#88846F;">    # 更新节点高度</span></span>
<span class="line"><span style="color:#FD971F;">    self</span><span style="color:#F8F8F2;">.update_height(node)</span></span>
<span class="line"><span style="color:#88846F;">    # 2. 执行旋转操作，使该子树重新恢复平衡</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.rotate(node)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div><h3 id="_8-2-avl-树的删除" tabindex="-1"><a class="header-anchor" href="#_8-2-avl-树的删除"><span>8.2 AVL 树的删除</span></a></h3><p>在 AVL 树的插入、删除和旋转操作中，通常只涉及对节点的引用的操作（即指针或引用的改变），并不会复制节点对象。这种行为可以被视为类似于浅拷贝的操作，因为在旋转、平衡等操作中，改变的是节点的引用关系，而不是复制整个子树或节点的内容。</p><p>类似地，在二叉搜索树的删除节点方法的基础上，需要从底至顶执行旋转操作，使所有失衡节点恢复平衡。代码如下所示：</p><div class="language-python line-numbers-mode has-collapsed-lines collapsed" data-highlighter="shiki" data-ext="python" style="--vp-collapsed-lines:15;background-color:#272822;color:#F8F8F2;"><pre class="shiki monokai vp-code"><code><span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> remove</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">):</span></span>
<span class="line"><span style="color:#E6DB74;">    &quot;&quot;&quot;删除节点&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#FD971F;">    self</span><span style="color:#F8F8F2;">._root </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.remove_helper(</span><span style="color:#FD971F;">self</span><span style="color:#F8F8F2;">._root, val)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#66D9EF;font-style:italic;">def</span><span style="color:#A6E22E;"> remove_helper</span><span style="color:#F8F8F2;">(</span><span style="color:#FD971F;font-style:italic;">self</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">node</span><span style="color:#F8F8F2;">: TreeNode </span><span style="color:#F92672;">|</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">, </span><span style="color:#FD971F;font-style:italic;">val</span><span style="color:#F8F8F2;">: </span><span style="color:#66D9EF;font-style:italic;">int</span><span style="color:#F8F8F2;">) -&gt; TreeNode </span><span style="color:#F92672;">|</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#E6DB74;">    &quot;&quot;&quot;递归删除节点（辅助方法）&quot;&quot;&quot;</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> node </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">        return</span><span style="color:#AE81FF;"> None</span></span>
<span class="line"><span style="color:#88846F;">    # 1. 查找节点并删除</span></span>
<span class="line"><span style="color:#F92672;">    if</span><span style="color:#F8F8F2;"> val </span><span style="color:#F92672;">&lt;</span><span style="color:#F8F8F2;"> node.val:</span></span>
<span class="line"><span style="color:#F8F8F2;">        node.left </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.remove_helper(node.left, val)</span></span>
<span class="line"><span style="color:#F92672;">    elif</span><span style="color:#F8F8F2;"> val </span><span style="color:#F92672;">&gt;</span><span style="color:#F8F8F2;"> node.val:</span></span>
<span class="line"><span style="color:#F8F8F2;">        node.right </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.remove_helper(node.right, val)</span></span>
<span class="line"><span style="color:#F92672;">    else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">        if</span><span style="color:#F8F8F2;"> node.left </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> None</span><span style="color:#F92672;"> or</span><span style="color:#F8F8F2;"> node.right </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">            child </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> node.left </span><span style="color:#F92672;">or</span><span style="color:#F8F8F2;"> node.right</span></span>
<span class="line"><span style="color:#88846F;">            # 子节点数量 = 0 ，直接删除 node 并返回</span></span>
<span class="line"><span style="color:#F92672;">            if</span><span style="color:#F8F8F2;"> child </span><span style="color:#F92672;">is</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F92672;">                return</span><span style="color:#AE81FF;"> None</span></span>
<span class="line"><span style="color:#88846F;">            # 子节点数量 = 1 ，直接删除 node</span></span>
<span class="line"><span style="color:#F92672;">            else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">                node </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> child</span></span>
<span class="line"><span style="color:#F92672;">        else</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#88846F;">            # 子节点数量 = 2 ，则将中序遍历的下个节点删除，并用该节点替换当前节点</span></span>
<span class="line"><span style="color:#F8F8F2;">            temp </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> node.right</span></span>
<span class="line"><span style="color:#F92672;">            while</span><span style="color:#F8F8F2;"> temp.left </span><span style="color:#F92672;">is</span><span style="color:#F92672;"> not</span><span style="color:#AE81FF;"> None</span><span style="color:#F8F8F2;">:</span></span>
<span class="line"><span style="color:#F8F8F2;">                temp </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> temp.left</span></span>
<span class="line"><span style="color:#F8F8F2;">            node.right </span><span style="color:#F92672;">=</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.remove_helper(node.right, temp.val)</span></span>
<span class="line"><span style="color:#F8F8F2;">            node.val </span><span style="color:#F92672;">=</span><span style="color:#F8F8F2;"> temp.val</span></span>
<span class="line"><span style="color:#88846F;">    # 更新节点高度</span></span>
<span class="line"><span style="color:#FD971F;">    self</span><span style="color:#F8F8F2;">.update_height(node)</span></span>
<span class="line"><span style="color:#88846F;">    # 2. 执行旋转操作，使该子树重新恢复平衡</span></span>
<span class="line"><span style="color:#F92672;">    return</span><span style="color:#FD971F;"> self</span><span style="color:#F8F8F2;">.rotate(node)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div><div class="collapsed-lines"></div></div>`,31))])}const hl=d(V,[["render",vl]]),fl=JSON.parse('{"path":"/zh/Advanced_Algorithms/Week04.html","title":"高级算法——第4周略讲——二叉树","lang":"zh-CN","frontmatter":{"title":"高级算法——第4周略讲——二叉树","icon":"python","date":"2024-09-26T21:18:12.000Z","author":"XiaoXianYue","isOriginal":true,"category":["大三上","高级算法课件"],"tag":["大三上","高级算法课件"],"sticky":false,"star":false,"article":true,"timeline":true,"image":false,"navbar":true,"sidebarIcon":true,"headerDepth":5,"lastUpdated":true,"editLink":false,"backToTop":true,"toc":true,"feed":false,"seo":false,"head":[]},"git":{"createdTime":1727361250000,"updatedTime":1732526111000,"contributors":[{"name":"Xiaoxianyue","username":"Xiaoxianyue","email":"2310219843@qq.com","commits":22,"url":"https://github.com/Xiaoxianyue"}]},"readingTime":{"minutes":36.28,"words":10885},"filePathRelative":"zh/Advanced_Algorithms/Week04.md","localizedDate":"2024年9月26日"}');export{hl as comp,fl as data};
